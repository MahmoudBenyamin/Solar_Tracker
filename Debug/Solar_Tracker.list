
Solar_Tracker.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003b44  08000198  08000198  00010198  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001e0  08003ce0  08003ce0  00013ce0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003ec0  08003ec0  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  08003ec0  08003ec0  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003ec0  08003ec0  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003ec0  08003ec0  00013ec0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003ec4  08003ec4  00013ec4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  08003ec8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000068  20000068  08003f30  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000d0  08003f30  000200d0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002097  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000bd1  00000000  00000000  0002212f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000388  00000000  00000000  00022d00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000002d0  00000000  00000000  00023088  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002254  00000000  00000000  00023358  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001c99  00000000  00000000  000255ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009696  00000000  00000000  00027245  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000308db  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001114  00000000  00000000  0003092c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000068 	.word	0x20000068
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08003cc4 	.word	0x08003cc4

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	2000006c 	.word	0x2000006c
 80001d4:	08003cc4 	.word	0x08003cc4

080001d8 <__aeabi_drsub>:
 80001d8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001dc:	e002      	b.n	80001e4 <__adddf3>
 80001de:	bf00      	nop

080001e0 <__aeabi_dsub>:
 80001e0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001e4 <__adddf3>:
 80001e4:	b530      	push	{r4, r5, lr}
 80001e6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001ea:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ee:	ea94 0f05 	teq	r4, r5
 80001f2:	bf08      	it	eq
 80001f4:	ea90 0f02 	teqeq	r0, r2
 80001f8:	bf1f      	itttt	ne
 80001fa:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001fe:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000202:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000206:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800020a:	f000 80e2 	beq.w	80003d2 <__adddf3+0x1ee>
 800020e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000212:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000216:	bfb8      	it	lt
 8000218:	426d      	neglt	r5, r5
 800021a:	dd0c      	ble.n	8000236 <__adddf3+0x52>
 800021c:	442c      	add	r4, r5
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	ea82 0000 	eor.w	r0, r2, r0
 800022a:	ea83 0101 	eor.w	r1, r3, r1
 800022e:	ea80 0202 	eor.w	r2, r0, r2
 8000232:	ea81 0303 	eor.w	r3, r1, r3
 8000236:	2d36      	cmp	r5, #54	; 0x36
 8000238:	bf88      	it	hi
 800023a:	bd30      	pophi	{r4, r5, pc}
 800023c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000240:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000244:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000248:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800024c:	d002      	beq.n	8000254 <__adddf3+0x70>
 800024e:	4240      	negs	r0, r0
 8000250:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000254:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000258:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800025c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000260:	d002      	beq.n	8000268 <__adddf3+0x84>
 8000262:	4252      	negs	r2, r2
 8000264:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000268:	ea94 0f05 	teq	r4, r5
 800026c:	f000 80a7 	beq.w	80003be <__adddf3+0x1da>
 8000270:	f1a4 0401 	sub.w	r4, r4, #1
 8000274:	f1d5 0e20 	rsbs	lr, r5, #32
 8000278:	db0d      	blt.n	8000296 <__adddf3+0xb2>
 800027a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800027e:	fa22 f205 	lsr.w	r2, r2, r5
 8000282:	1880      	adds	r0, r0, r2
 8000284:	f141 0100 	adc.w	r1, r1, #0
 8000288:	fa03 f20e 	lsl.w	r2, r3, lr
 800028c:	1880      	adds	r0, r0, r2
 800028e:	fa43 f305 	asr.w	r3, r3, r5
 8000292:	4159      	adcs	r1, r3
 8000294:	e00e      	b.n	80002b4 <__adddf3+0xd0>
 8000296:	f1a5 0520 	sub.w	r5, r5, #32
 800029a:	f10e 0e20 	add.w	lr, lr, #32
 800029e:	2a01      	cmp	r2, #1
 80002a0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002a4:	bf28      	it	cs
 80002a6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002aa:	fa43 f305 	asr.w	r3, r3, r5
 80002ae:	18c0      	adds	r0, r0, r3
 80002b0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002b8:	d507      	bpl.n	80002ca <__adddf3+0xe6>
 80002ba:	f04f 0e00 	mov.w	lr, #0
 80002be:	f1dc 0c00 	rsbs	ip, ip, #0
 80002c2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002c6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ca:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002ce:	d31b      	bcc.n	8000308 <__adddf3+0x124>
 80002d0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002d4:	d30c      	bcc.n	80002f0 <__adddf3+0x10c>
 80002d6:	0849      	lsrs	r1, r1, #1
 80002d8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002dc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002e0:	f104 0401 	add.w	r4, r4, #1
 80002e4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002e8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002ec:	f080 809a 	bcs.w	8000424 <__adddf3+0x240>
 80002f0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002f4:	bf08      	it	eq
 80002f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002fa:	f150 0000 	adcs.w	r0, r0, #0
 80002fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000302:	ea41 0105 	orr.w	r1, r1, r5
 8000306:	bd30      	pop	{r4, r5, pc}
 8000308:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800030c:	4140      	adcs	r0, r0
 800030e:	eb41 0101 	adc.w	r1, r1, r1
 8000312:	3c01      	subs	r4, #1
 8000314:	bf28      	it	cs
 8000316:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800031a:	d2e9      	bcs.n	80002f0 <__adddf3+0x10c>
 800031c:	f091 0f00 	teq	r1, #0
 8000320:	bf04      	itt	eq
 8000322:	4601      	moveq	r1, r0
 8000324:	2000      	moveq	r0, #0
 8000326:	fab1 f381 	clz	r3, r1
 800032a:	bf08      	it	eq
 800032c:	3320      	addeq	r3, #32
 800032e:	f1a3 030b 	sub.w	r3, r3, #11
 8000332:	f1b3 0220 	subs.w	r2, r3, #32
 8000336:	da0c      	bge.n	8000352 <__adddf3+0x16e>
 8000338:	320c      	adds	r2, #12
 800033a:	dd08      	ble.n	800034e <__adddf3+0x16a>
 800033c:	f102 0c14 	add.w	ip, r2, #20
 8000340:	f1c2 020c 	rsb	r2, r2, #12
 8000344:	fa01 f00c 	lsl.w	r0, r1, ip
 8000348:	fa21 f102 	lsr.w	r1, r1, r2
 800034c:	e00c      	b.n	8000368 <__adddf3+0x184>
 800034e:	f102 0214 	add.w	r2, r2, #20
 8000352:	bfd8      	it	le
 8000354:	f1c2 0c20 	rsble	ip, r2, #32
 8000358:	fa01 f102 	lsl.w	r1, r1, r2
 800035c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000360:	bfdc      	itt	le
 8000362:	ea41 010c 	orrle.w	r1, r1, ip
 8000366:	4090      	lslle	r0, r2
 8000368:	1ae4      	subs	r4, r4, r3
 800036a:	bfa2      	ittt	ge
 800036c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000370:	4329      	orrge	r1, r5
 8000372:	bd30      	popge	{r4, r5, pc}
 8000374:	ea6f 0404 	mvn.w	r4, r4
 8000378:	3c1f      	subs	r4, #31
 800037a:	da1c      	bge.n	80003b6 <__adddf3+0x1d2>
 800037c:	340c      	adds	r4, #12
 800037e:	dc0e      	bgt.n	800039e <__adddf3+0x1ba>
 8000380:	f104 0414 	add.w	r4, r4, #20
 8000384:	f1c4 0220 	rsb	r2, r4, #32
 8000388:	fa20 f004 	lsr.w	r0, r0, r4
 800038c:	fa01 f302 	lsl.w	r3, r1, r2
 8000390:	ea40 0003 	orr.w	r0, r0, r3
 8000394:	fa21 f304 	lsr.w	r3, r1, r4
 8000398:	ea45 0103 	orr.w	r1, r5, r3
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	f1c4 040c 	rsb	r4, r4, #12
 80003a2:	f1c4 0220 	rsb	r2, r4, #32
 80003a6:	fa20 f002 	lsr.w	r0, r0, r2
 80003aa:	fa01 f304 	lsl.w	r3, r1, r4
 80003ae:	ea40 0003 	orr.w	r0, r0, r3
 80003b2:	4629      	mov	r1, r5
 80003b4:	bd30      	pop	{r4, r5, pc}
 80003b6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ba:	4629      	mov	r1, r5
 80003bc:	bd30      	pop	{r4, r5, pc}
 80003be:	f094 0f00 	teq	r4, #0
 80003c2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003c6:	bf06      	itte	eq
 80003c8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003cc:	3401      	addeq	r4, #1
 80003ce:	3d01      	subne	r5, #1
 80003d0:	e74e      	b.n	8000270 <__adddf3+0x8c>
 80003d2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003d6:	bf18      	it	ne
 80003d8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003dc:	d029      	beq.n	8000432 <__adddf3+0x24e>
 80003de:	ea94 0f05 	teq	r4, r5
 80003e2:	bf08      	it	eq
 80003e4:	ea90 0f02 	teqeq	r0, r2
 80003e8:	d005      	beq.n	80003f6 <__adddf3+0x212>
 80003ea:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ee:	bf04      	itt	eq
 80003f0:	4619      	moveq	r1, r3
 80003f2:	4610      	moveq	r0, r2
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	ea91 0f03 	teq	r1, r3
 80003fa:	bf1e      	ittt	ne
 80003fc:	2100      	movne	r1, #0
 80003fe:	2000      	movne	r0, #0
 8000400:	bd30      	popne	{r4, r5, pc}
 8000402:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000406:	d105      	bne.n	8000414 <__adddf3+0x230>
 8000408:	0040      	lsls	r0, r0, #1
 800040a:	4149      	adcs	r1, r1
 800040c:	bf28      	it	cs
 800040e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000412:	bd30      	pop	{r4, r5, pc}
 8000414:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000418:	bf3c      	itt	cc
 800041a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800041e:	bd30      	popcc	{r4, r5, pc}
 8000420:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000424:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000428:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800042c:	f04f 0000 	mov.w	r0, #0
 8000430:	bd30      	pop	{r4, r5, pc}
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf1a      	itte	ne
 8000438:	4619      	movne	r1, r3
 800043a:	4610      	movne	r0, r2
 800043c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000440:	bf1c      	itt	ne
 8000442:	460b      	movne	r3, r1
 8000444:	4602      	movne	r2, r0
 8000446:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800044a:	bf06      	itte	eq
 800044c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000450:	ea91 0f03 	teqeq	r1, r3
 8000454:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	bf00      	nop

0800045c <__aeabi_ui2d>:
 800045c:	f090 0f00 	teq	r0, #0
 8000460:	bf04      	itt	eq
 8000462:	2100      	moveq	r1, #0
 8000464:	4770      	bxeq	lr
 8000466:	b530      	push	{r4, r5, lr}
 8000468:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800046c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000470:	f04f 0500 	mov.w	r5, #0
 8000474:	f04f 0100 	mov.w	r1, #0
 8000478:	e750      	b.n	800031c <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_i2d>:
 800047c:	f090 0f00 	teq	r0, #0
 8000480:	bf04      	itt	eq
 8000482:	2100      	moveq	r1, #0
 8000484:	4770      	bxeq	lr
 8000486:	b530      	push	{r4, r5, lr}
 8000488:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800048c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000490:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000494:	bf48      	it	mi
 8000496:	4240      	negmi	r0, r0
 8000498:	f04f 0100 	mov.w	r1, #0
 800049c:	e73e      	b.n	800031c <__adddf3+0x138>
 800049e:	bf00      	nop

080004a0 <__aeabi_f2d>:
 80004a0:	0042      	lsls	r2, r0, #1
 80004a2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004a6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004aa:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004ae:	bf1f      	itttt	ne
 80004b0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004b4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004b8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004bc:	4770      	bxne	lr
 80004be:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004c2:	bf08      	it	eq
 80004c4:	4770      	bxeq	lr
 80004c6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004ca:	bf04      	itt	eq
 80004cc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80004d0:	4770      	bxeq	lr
 80004d2:	b530      	push	{r4, r5, lr}
 80004d4:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004e0:	e71c      	b.n	800031c <__adddf3+0x138>
 80004e2:	bf00      	nop

080004e4 <__aeabi_ul2d>:
 80004e4:	ea50 0201 	orrs.w	r2, r0, r1
 80004e8:	bf08      	it	eq
 80004ea:	4770      	bxeq	lr
 80004ec:	b530      	push	{r4, r5, lr}
 80004ee:	f04f 0500 	mov.w	r5, #0
 80004f2:	e00a      	b.n	800050a <__aeabi_l2d+0x16>

080004f4 <__aeabi_l2d>:
 80004f4:	ea50 0201 	orrs.w	r2, r0, r1
 80004f8:	bf08      	it	eq
 80004fa:	4770      	bxeq	lr
 80004fc:	b530      	push	{r4, r5, lr}
 80004fe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000502:	d502      	bpl.n	800050a <__aeabi_l2d+0x16>
 8000504:	4240      	negs	r0, r0
 8000506:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800050a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800050e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000512:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000516:	f43f aed8 	beq.w	80002ca <__adddf3+0xe6>
 800051a:	f04f 0203 	mov.w	r2, #3
 800051e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000522:	bf18      	it	ne
 8000524:	3203      	addne	r2, #3
 8000526:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800052a:	bf18      	it	ne
 800052c:	3203      	addne	r2, #3
 800052e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000532:	f1c2 0320 	rsb	r3, r2, #32
 8000536:	fa00 fc03 	lsl.w	ip, r0, r3
 800053a:	fa20 f002 	lsr.w	r0, r0, r2
 800053e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000542:	ea40 000e 	orr.w	r0, r0, lr
 8000546:	fa21 f102 	lsr.w	r1, r1, r2
 800054a:	4414      	add	r4, r2
 800054c:	e6bd      	b.n	80002ca <__adddf3+0xe6>
 800054e:	bf00      	nop

08000550 <__aeabi_dmul>:
 8000550:	b570      	push	{r4, r5, r6, lr}
 8000552:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000556:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800055a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800055e:	bf1d      	ittte	ne
 8000560:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000564:	ea94 0f0c 	teqne	r4, ip
 8000568:	ea95 0f0c 	teqne	r5, ip
 800056c:	f000 f8de 	bleq	800072c <__aeabi_dmul+0x1dc>
 8000570:	442c      	add	r4, r5
 8000572:	ea81 0603 	eor.w	r6, r1, r3
 8000576:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800057a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800057e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000582:	bf18      	it	ne
 8000584:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000588:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800058c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000590:	d038      	beq.n	8000604 <__aeabi_dmul+0xb4>
 8000592:	fba0 ce02 	umull	ip, lr, r0, r2
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800059e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005a6:	f04f 0600 	mov.w	r6, #0
 80005aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005ae:	f09c 0f00 	teq	ip, #0
 80005b2:	bf18      	it	ne
 80005b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005c4:	d204      	bcs.n	80005d0 <__aeabi_dmul+0x80>
 80005c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005ca:	416d      	adcs	r5, r5
 80005cc:	eb46 0606 	adc.w	r6, r6, r6
 80005d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005e8:	bf88      	it	hi
 80005ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005ee:	d81e      	bhi.n	800062e <__aeabi_dmul+0xde>
 80005f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005f4:	bf08      	it	eq
 80005f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005fa:	f150 0000 	adcs.w	r0, r0, #0
 80005fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000602:	bd70      	pop	{r4, r5, r6, pc}
 8000604:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000608:	ea46 0101 	orr.w	r1, r6, r1
 800060c:	ea40 0002 	orr.w	r0, r0, r2
 8000610:	ea81 0103 	eor.w	r1, r1, r3
 8000614:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000618:	bfc2      	ittt	gt
 800061a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800061e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000622:	bd70      	popgt	{r4, r5, r6, pc}
 8000624:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000628:	f04f 0e00 	mov.w	lr, #0
 800062c:	3c01      	subs	r4, #1
 800062e:	f300 80ab 	bgt.w	8000788 <__aeabi_dmul+0x238>
 8000632:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000636:	bfde      	ittt	le
 8000638:	2000      	movle	r0, #0
 800063a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800063e:	bd70      	pople	{r4, r5, r6, pc}
 8000640:	f1c4 0400 	rsb	r4, r4, #0
 8000644:	3c20      	subs	r4, #32
 8000646:	da35      	bge.n	80006b4 <__aeabi_dmul+0x164>
 8000648:	340c      	adds	r4, #12
 800064a:	dc1b      	bgt.n	8000684 <__aeabi_dmul+0x134>
 800064c:	f104 0414 	add.w	r4, r4, #20
 8000650:	f1c4 0520 	rsb	r5, r4, #32
 8000654:	fa00 f305 	lsl.w	r3, r0, r5
 8000658:	fa20 f004 	lsr.w	r0, r0, r4
 800065c:	fa01 f205 	lsl.w	r2, r1, r5
 8000660:	ea40 0002 	orr.w	r0, r0, r2
 8000664:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000668:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800066c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000670:	fa21 f604 	lsr.w	r6, r1, r4
 8000674:	eb42 0106 	adc.w	r1, r2, r6
 8000678:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800067c:	bf08      	it	eq
 800067e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f1c4 040c 	rsb	r4, r4, #12
 8000688:	f1c4 0520 	rsb	r5, r4, #32
 800068c:	fa00 f304 	lsl.w	r3, r0, r4
 8000690:	fa20 f005 	lsr.w	r0, r0, r5
 8000694:	fa01 f204 	lsl.w	r2, r1, r4
 8000698:	ea40 0002 	orr.w	r0, r0, r2
 800069c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a4:	f141 0100 	adc.w	r1, r1, #0
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 0520 	rsb	r5, r4, #32
 80006b8:	fa00 f205 	lsl.w	r2, r0, r5
 80006bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80006c0:	fa20 f304 	lsr.w	r3, r0, r4
 80006c4:	fa01 f205 	lsl.w	r2, r1, r5
 80006c8:	ea43 0302 	orr.w	r3, r3, r2
 80006cc:	fa21 f004 	lsr.w	r0, r1, r4
 80006d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d4:	fa21 f204 	lsr.w	r2, r1, r4
 80006d8:	ea20 0002 	bic.w	r0, r0, r2
 80006dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006e4:	bf08      	it	eq
 80006e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f094 0f00 	teq	r4, #0
 80006f0:	d10f      	bne.n	8000712 <__aeabi_dmul+0x1c2>
 80006f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006f6:	0040      	lsls	r0, r0, #1
 80006f8:	eb41 0101 	adc.w	r1, r1, r1
 80006fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000700:	bf08      	it	eq
 8000702:	3c01      	subeq	r4, #1
 8000704:	d0f7      	beq.n	80006f6 <__aeabi_dmul+0x1a6>
 8000706:	ea41 0106 	orr.w	r1, r1, r6
 800070a:	f095 0f00 	teq	r5, #0
 800070e:	bf18      	it	ne
 8000710:	4770      	bxne	lr
 8000712:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000716:	0052      	lsls	r2, r2, #1
 8000718:	eb43 0303 	adc.w	r3, r3, r3
 800071c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000720:	bf08      	it	eq
 8000722:	3d01      	subeq	r5, #1
 8000724:	d0f7      	beq.n	8000716 <__aeabi_dmul+0x1c6>
 8000726:	ea43 0306 	orr.w	r3, r3, r6
 800072a:	4770      	bx	lr
 800072c:	ea94 0f0c 	teq	r4, ip
 8000730:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000734:	bf18      	it	ne
 8000736:	ea95 0f0c 	teqne	r5, ip
 800073a:	d00c      	beq.n	8000756 <__aeabi_dmul+0x206>
 800073c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000740:	bf18      	it	ne
 8000742:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000746:	d1d1      	bne.n	80006ec <__aeabi_dmul+0x19c>
 8000748:	ea81 0103 	eor.w	r1, r1, r3
 800074c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000750:	f04f 0000 	mov.w	r0, #0
 8000754:	bd70      	pop	{r4, r5, r6, pc}
 8000756:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800075a:	bf06      	itte	eq
 800075c:	4610      	moveq	r0, r2
 800075e:	4619      	moveq	r1, r3
 8000760:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000764:	d019      	beq.n	800079a <__aeabi_dmul+0x24a>
 8000766:	ea94 0f0c 	teq	r4, ip
 800076a:	d102      	bne.n	8000772 <__aeabi_dmul+0x222>
 800076c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000770:	d113      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000772:	ea95 0f0c 	teq	r5, ip
 8000776:	d105      	bne.n	8000784 <__aeabi_dmul+0x234>
 8000778:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800077c:	bf1c      	itt	ne
 800077e:	4610      	movne	r0, r2
 8000780:	4619      	movne	r1, r3
 8000782:	d10a      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000784:	ea81 0103 	eor.w	r1, r1, r3
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000790:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000794:	f04f 0000 	mov.w	r0, #0
 8000798:	bd70      	pop	{r4, r5, r6, pc}
 800079a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800079e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007a2:	bd70      	pop	{r4, r5, r6, pc}

080007a4 <__aeabi_ddiv>:
 80007a4:	b570      	push	{r4, r5, r6, lr}
 80007a6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007aa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007ae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007b2:	bf1d      	ittte	ne
 80007b4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007b8:	ea94 0f0c 	teqne	r4, ip
 80007bc:	ea95 0f0c 	teqne	r5, ip
 80007c0:	f000 f8a7 	bleq	8000912 <__aeabi_ddiv+0x16e>
 80007c4:	eba4 0405 	sub.w	r4, r4, r5
 80007c8:	ea81 0e03 	eor.w	lr, r1, r3
 80007cc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007d4:	f000 8088 	beq.w	80008e8 <__aeabi_ddiv+0x144>
 80007d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007dc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007e0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007e4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007e8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007ec:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007f0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007f4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007f8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007fc:	429d      	cmp	r5, r3
 80007fe:	bf08      	it	eq
 8000800:	4296      	cmpeq	r6, r2
 8000802:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000806:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800080a:	d202      	bcs.n	8000812 <__aeabi_ddiv+0x6e>
 800080c:	085b      	lsrs	r3, r3, #1
 800080e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000812:	1ab6      	subs	r6, r6, r2
 8000814:	eb65 0503 	sbc.w	r5, r5, r3
 8000818:	085b      	lsrs	r3, r3, #1
 800081a:	ea4f 0232 	mov.w	r2, r2, rrx
 800081e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000822:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000826:	ebb6 0e02 	subs.w	lr, r6, r2
 800082a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082e:	bf22      	ittt	cs
 8000830:	1ab6      	subcs	r6, r6, r2
 8000832:	4675      	movcs	r5, lr
 8000834:	ea40 000c 	orrcs.w	r0, r0, ip
 8000838:	085b      	lsrs	r3, r3, #1
 800083a:	ea4f 0232 	mov.w	r2, r2, rrx
 800083e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000842:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000846:	bf22      	ittt	cs
 8000848:	1ab6      	subcs	r6, r6, r2
 800084a:	4675      	movcs	r5, lr
 800084c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000850:	085b      	lsrs	r3, r3, #1
 8000852:	ea4f 0232 	mov.w	r2, r2, rrx
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000880:	ea55 0e06 	orrs.w	lr, r5, r6
 8000884:	d018      	beq.n	80008b8 <__aeabi_ddiv+0x114>
 8000886:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800088a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800088e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000892:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000896:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800089a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800089e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008a2:	d1c0      	bne.n	8000826 <__aeabi_ddiv+0x82>
 80008a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008a8:	d10b      	bne.n	80008c2 <__aeabi_ddiv+0x11e>
 80008aa:	ea41 0100 	orr.w	r1, r1, r0
 80008ae:	f04f 0000 	mov.w	r0, #0
 80008b2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008b6:	e7b6      	b.n	8000826 <__aeabi_ddiv+0x82>
 80008b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008bc:	bf04      	itt	eq
 80008be:	4301      	orreq	r1, r0
 80008c0:	2000      	moveq	r0, #0
 80008c2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008c6:	bf88      	it	hi
 80008c8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008cc:	f63f aeaf 	bhi.w	800062e <__aeabi_dmul+0xde>
 80008d0:	ebb5 0c03 	subs.w	ip, r5, r3
 80008d4:	bf04      	itt	eq
 80008d6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008de:	f150 0000 	adcs.w	r0, r0, #0
 80008e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008e6:	bd70      	pop	{r4, r5, r6, pc}
 80008e8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008ec:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008f0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008f4:	bfc2      	ittt	gt
 80008f6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008fe:	bd70      	popgt	{r4, r5, r6, pc}
 8000900:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000904:	f04f 0e00 	mov.w	lr, #0
 8000908:	3c01      	subs	r4, #1
 800090a:	e690      	b.n	800062e <__aeabi_dmul+0xde>
 800090c:	ea45 0e06 	orr.w	lr, r5, r6
 8000910:	e68d      	b.n	800062e <__aeabi_dmul+0xde>
 8000912:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000916:	ea94 0f0c 	teq	r4, ip
 800091a:	bf08      	it	eq
 800091c:	ea95 0f0c 	teqeq	r5, ip
 8000920:	f43f af3b 	beq.w	800079a <__aeabi_dmul+0x24a>
 8000924:	ea94 0f0c 	teq	r4, ip
 8000928:	d10a      	bne.n	8000940 <__aeabi_ddiv+0x19c>
 800092a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800092e:	f47f af34 	bne.w	800079a <__aeabi_dmul+0x24a>
 8000932:	ea95 0f0c 	teq	r5, ip
 8000936:	f47f af25 	bne.w	8000784 <__aeabi_dmul+0x234>
 800093a:	4610      	mov	r0, r2
 800093c:	4619      	mov	r1, r3
 800093e:	e72c      	b.n	800079a <__aeabi_dmul+0x24a>
 8000940:	ea95 0f0c 	teq	r5, ip
 8000944:	d106      	bne.n	8000954 <__aeabi_ddiv+0x1b0>
 8000946:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800094a:	f43f aefd 	beq.w	8000748 <__aeabi_dmul+0x1f8>
 800094e:	4610      	mov	r0, r2
 8000950:	4619      	mov	r1, r3
 8000952:	e722      	b.n	800079a <__aeabi_dmul+0x24a>
 8000954:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000958:	bf18      	it	ne
 800095a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800095e:	f47f aec5 	bne.w	80006ec <__aeabi_dmul+0x19c>
 8000962:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000966:	f47f af0d 	bne.w	8000784 <__aeabi_dmul+0x234>
 800096a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800096e:	f47f aeeb 	bne.w	8000748 <__aeabi_dmul+0x1f8>
 8000972:	e712      	b.n	800079a <__aeabi_dmul+0x24a>

08000974 <__gedf2>:
 8000974:	f04f 3cff 	mov.w	ip, #4294967295
 8000978:	e006      	b.n	8000988 <__cmpdf2+0x4>
 800097a:	bf00      	nop

0800097c <__ledf2>:
 800097c:	f04f 0c01 	mov.w	ip, #1
 8000980:	e002      	b.n	8000988 <__cmpdf2+0x4>
 8000982:	bf00      	nop

08000984 <__cmpdf2>:
 8000984:	f04f 0c01 	mov.w	ip, #1
 8000988:	f84d cd04 	str.w	ip, [sp, #-4]!
 800098c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000990:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000994:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000998:	bf18      	it	ne
 800099a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800099e:	d01b      	beq.n	80009d8 <__cmpdf2+0x54>
 80009a0:	b001      	add	sp, #4
 80009a2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009a6:	bf0c      	ite	eq
 80009a8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009ac:	ea91 0f03 	teqne	r1, r3
 80009b0:	bf02      	ittt	eq
 80009b2:	ea90 0f02 	teqeq	r0, r2
 80009b6:	2000      	moveq	r0, #0
 80009b8:	4770      	bxeq	lr
 80009ba:	f110 0f00 	cmn.w	r0, #0
 80009be:	ea91 0f03 	teq	r1, r3
 80009c2:	bf58      	it	pl
 80009c4:	4299      	cmppl	r1, r3
 80009c6:	bf08      	it	eq
 80009c8:	4290      	cmpeq	r0, r2
 80009ca:	bf2c      	ite	cs
 80009cc:	17d8      	asrcs	r0, r3, #31
 80009ce:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009d2:	f040 0001 	orr.w	r0, r0, #1
 80009d6:	4770      	bx	lr
 80009d8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e0:	d102      	bne.n	80009e8 <__cmpdf2+0x64>
 80009e2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009e6:	d107      	bne.n	80009f8 <__cmpdf2+0x74>
 80009e8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009f0:	d1d6      	bne.n	80009a0 <__cmpdf2+0x1c>
 80009f2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009f6:	d0d3      	beq.n	80009a0 <__cmpdf2+0x1c>
 80009f8:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009fc:	4770      	bx	lr
 80009fe:	bf00      	nop

08000a00 <__aeabi_cdrcmple>:
 8000a00:	4684      	mov	ip, r0
 8000a02:	4610      	mov	r0, r2
 8000a04:	4662      	mov	r2, ip
 8000a06:	468c      	mov	ip, r1
 8000a08:	4619      	mov	r1, r3
 8000a0a:	4663      	mov	r3, ip
 8000a0c:	e000      	b.n	8000a10 <__aeabi_cdcmpeq>
 8000a0e:	bf00      	nop

08000a10 <__aeabi_cdcmpeq>:
 8000a10:	b501      	push	{r0, lr}
 8000a12:	f7ff ffb7 	bl	8000984 <__cmpdf2>
 8000a16:	2800      	cmp	r0, #0
 8000a18:	bf48      	it	mi
 8000a1a:	f110 0f00 	cmnmi.w	r0, #0
 8000a1e:	bd01      	pop	{r0, pc}

08000a20 <__aeabi_dcmpeq>:
 8000a20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a24:	f7ff fff4 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a28:	bf0c      	ite	eq
 8000a2a:	2001      	moveq	r0, #1
 8000a2c:	2000      	movne	r0, #0
 8000a2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a32:	bf00      	nop

08000a34 <__aeabi_dcmplt>:
 8000a34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a38:	f7ff ffea 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a3c:	bf34      	ite	cc
 8000a3e:	2001      	movcc	r0, #1
 8000a40:	2000      	movcs	r0, #0
 8000a42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a46:	bf00      	nop

08000a48 <__aeabi_dcmple>:
 8000a48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a4c:	f7ff ffe0 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a50:	bf94      	ite	ls
 8000a52:	2001      	movls	r0, #1
 8000a54:	2000      	movhi	r0, #0
 8000a56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a5a:	bf00      	nop

08000a5c <__aeabi_dcmpge>:
 8000a5c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a60:	f7ff ffce 	bl	8000a00 <__aeabi_cdrcmple>
 8000a64:	bf94      	ite	ls
 8000a66:	2001      	movls	r0, #1
 8000a68:	2000      	movhi	r0, #0
 8000a6a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a6e:	bf00      	nop

08000a70 <__aeabi_dcmpgt>:
 8000a70:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a74:	f7ff ffc4 	bl	8000a00 <__aeabi_cdrcmple>
 8000a78:	bf34      	ite	cc
 8000a7a:	2001      	movcc	r0, #1
 8000a7c:	2000      	movcs	r0, #0
 8000a7e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a82:	bf00      	nop

08000a84 <__aeabi_dcmpun>:
 8000a84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	d102      	bne.n	8000a94 <__aeabi_dcmpun+0x10>
 8000a8e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a92:	d10a      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000a94:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a9c:	d102      	bne.n	8000aa4 <__aeabi_dcmpun+0x20>
 8000a9e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aa2:	d102      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000aa4:	f04f 0000 	mov.w	r0, #0
 8000aa8:	4770      	bx	lr
 8000aaa:	f04f 0001 	mov.w	r0, #1
 8000aae:	4770      	bx	lr

08000ab0 <__aeabi_d2iz>:
 8000ab0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ab4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab8:	d215      	bcs.n	8000ae6 <__aeabi_d2iz+0x36>
 8000aba:	d511      	bpl.n	8000ae0 <__aeabi_d2iz+0x30>
 8000abc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ac0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ac4:	d912      	bls.n	8000aec <__aeabi_d2iz+0x3c>
 8000ac6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aca:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ace:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ad2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000ad6:	fa23 f002 	lsr.w	r0, r3, r2
 8000ada:	bf18      	it	ne
 8000adc:	4240      	negne	r0, r0
 8000ade:	4770      	bx	lr
 8000ae0:	f04f 0000 	mov.w	r0, #0
 8000ae4:	4770      	bx	lr
 8000ae6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aea:	d105      	bne.n	8000af8 <__aeabi_d2iz+0x48>
 8000aec:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000af0:	bf08      	it	eq
 8000af2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000af6:	4770      	bx	lr
 8000af8:	f04f 0000 	mov.w	r0, #0
 8000afc:	4770      	bx	lr
 8000afe:	bf00      	nop

08000b00 <__aeabi_d2f>:
 8000b00:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b04:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b08:	bf24      	itt	cs
 8000b0a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b0e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b12:	d90d      	bls.n	8000b30 <__aeabi_d2f+0x30>
 8000b14:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b18:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b1c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b20:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b24:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b28:	bf08      	it	eq
 8000b2a:	f020 0001 	biceq.w	r0, r0, #1
 8000b2e:	4770      	bx	lr
 8000b30:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b34:	d121      	bne.n	8000b7a <__aeabi_d2f+0x7a>
 8000b36:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b3a:	bfbc      	itt	lt
 8000b3c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b40:	4770      	bxlt	lr
 8000b42:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b46:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b4a:	f1c2 0218 	rsb	r2, r2, #24
 8000b4e:	f1c2 0c20 	rsb	ip, r2, #32
 8000b52:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b56:	fa20 f002 	lsr.w	r0, r0, r2
 8000b5a:	bf18      	it	ne
 8000b5c:	f040 0001 	orrne.w	r0, r0, #1
 8000b60:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b64:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b68:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b6c:	ea40 000c 	orr.w	r0, r0, ip
 8000b70:	fa23 f302 	lsr.w	r3, r3, r2
 8000b74:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b78:	e7cc      	b.n	8000b14 <__aeabi_d2f+0x14>
 8000b7a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b7e:	d107      	bne.n	8000b90 <__aeabi_d2f+0x90>
 8000b80:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b84:	bf1e      	ittt	ne
 8000b86:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b8a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b8e:	4770      	bxne	lr
 8000b90:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b94:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b98:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b9c:	4770      	bx	lr
 8000b9e:	bf00      	nop

08000ba0 <MADC_vInit>:

/*===========  INCLUDEAPP   ===========*/

/*=====================================*/	
void MADC_vInit(void)
{
 8000ba0:	b480      	push	{r7}
 8000ba2:	af00      	add	r7, sp, #0
	// set the prescaler
	ADC_COMM_REG &= ~ ( 0b11 << 16);
 8000ba4:	4b4e      	ldr	r3, [pc, #312]	; (8000ce0 <MADC_vInit+0x140>)
 8000ba6:	681b      	ldr	r3, [r3, #0]
 8000ba8:	4a4d      	ldr	r2, [pc, #308]	; (8000ce0 <MADC_vInit+0x140>)
 8000baa:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000bae:	6013      	str	r3, [r2, #0]
	ADC_COMM_REG |= (ADC_PRESCALER << 16);
 8000bb0:	4b4b      	ldr	r3, [pc, #300]	; (8000ce0 <MADC_vInit+0x140>)
 8000bb2:	4a4b      	ldr	r2, [pc, #300]	; (8000ce0 <MADC_vInit+0x140>)
 8000bb4:	681b      	ldr	r3, [r3, #0]
 8000bb6:	6013      	str	r3, [r2, #0]

	//set ADC Resolution
	ADC -> CR1.RES =ADC_RESOLUTION;
 8000bb8:	4a4a      	ldr	r2, [pc, #296]	; (8000ce4 <MADC_vInit+0x144>)
 8000bba:	6853      	ldr	r3, [r2, #4]
 8000bbc:	f36f 6319 	bfc	r3, #24, #2
 8000bc0:	6053      	str	r3, [r2, #4]
	//Discontinuous mode
	ADC -> CR1.DISCEN = ADC_DISC_MODE;
 8000bc2:	4a48      	ldr	r2, [pc, #288]	; (8000ce4 <MADC_vInit+0x144>)
 8000bc4:	6853      	ldr	r3, [r2, #4]
 8000bc6:	f36f 23cb 	bfc	r3, #11, #1
 8000bca:	6053      	str	r3, [r2, #4]
	ADC -> CR1.JDISCEN= ADC_JDISC_MODE;
 8000bcc:	4a45      	ldr	r2, [pc, #276]	; (8000ce4 <MADC_vInit+0x144>)
 8000bce:	6853      	ldr	r3, [r2, #4]
 8000bd0:	f36f 330c 	bfc	r3, #12, #1
 8000bd4:	6053      	str	r3, [r2, #4]
	ADC -> CR1.DISCNUM= ADC_DISC_CHANN_NUM;
 8000bd6:	4a43      	ldr	r2, [pc, #268]	; (8000ce4 <MADC_vInit+0x144>)
 8000bd8:	6853      	ldr	r3, [r2, #4]
 8000bda:	f36f 334f 	bfc	r3, #13, #3
 8000bde:	6053      	str	r3, [r2, #4]
	// scan mode
	ADC -> CR1.SCAN = ADC_SCAN_MODE;
 8000be0:	4a40      	ldr	r2, [pc, #256]	; (8000ce4 <MADC_vInit+0x144>)
 8000be2:	6853      	ldr	r3, [r2, #4]
 8000be4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000be8:	6053      	str	r3, [r2, #4]
	// EOCIE and JEOCIE MODE
	ADC -> CR1.EOCIE = ADC_EOCIE_MODE;
 8000bea:	4a3e      	ldr	r2, [pc, #248]	; (8000ce4 <MADC_vInit+0x144>)
 8000bec:	6853      	ldr	r3, [r2, #4]
 8000bee:	f36f 1345 	bfc	r3, #5, #1
 8000bf2:	6053      	str	r3, [r2, #4]
	ADC -> CR1.JEOCIE = ADC_JEOCIE_MODE;
 8000bf4:	4a3b      	ldr	r2, [pc, #236]	; (8000ce4 <MADC_vInit+0x144>)
 8000bf6:	6853      	ldr	r3, [r2, #4]
 8000bf8:	f36f 13c7 	bfc	r3, #7, #1
 8000bfc:	6053      	str	r3, [r2, #4]
	// setting external trigger mode and event
	ADC -> CR2.EXTEN = ADC_EXTERNAL_TRIGGER;
 8000bfe:	4a39      	ldr	r2, [pc, #228]	; (8000ce4 <MADC_vInit+0x144>)
 8000c00:	6893      	ldr	r3, [r2, #8]
 8000c02:	f36f 731d 	bfc	r3, #28, #2
 8000c06:	6093      	str	r3, [r2, #8]
	ADC -> CR2.JEXTEN =ADC_JEXTERNAL_TRIGGER;
 8000c08:	4a36      	ldr	r2, [pc, #216]	; (8000ce4 <MADC_vInit+0x144>)
 8000c0a:	6893      	ldr	r3, [r2, #8]
 8000c0c:	f36f 5315 	bfc	r3, #20, #2
 8000c10:	6093      	str	r3, [r2, #8]
	ADC -> CR2.EXTSEL = ADC_EXT_EVENT;
 8000c12:	4a34      	ldr	r2, [pc, #208]	; (8000ce4 <MADC_vInit+0x144>)
 8000c14:	6893      	ldr	r3, [r2, #8]
 8000c16:	f36f 631b 	bfc	r3, #24, #4
 8000c1a:	6093      	str	r3, [r2, #8]
	ADC -> CR2.JEXTSEL =ADC_JEXT_EVENT;
 8000c1c:	4a31      	ldr	r2, [pc, #196]	; (8000ce4 <MADC_vInit+0x144>)
 8000c1e:	6893      	ldr	r3, [r2, #8]
 8000c20:	2101      	movs	r1, #1
 8000c22:	f361 4313 	bfi	r3, r1, #16, #4
 8000c26:	6093      	str	r3, [r2, #8]
	// choosing data alignment
	ADC -> CR2.ALIGN  = ADC_DATA_ALIGNMENT;
 8000c28:	4a2e      	ldr	r2, [pc, #184]	; (8000ce4 <MADC_vInit+0x144>)
 8000c2a:	6893      	ldr	r3, [r2, #8]
 8000c2c:	f36f 23cb 	bfc	r3, #11, #1
 8000c30:	6093      	str	r3, [r2, #8]
	// CHOOSING DMA , DDS , ECOS
	ADC -> CR2.DMA  = ADC_DMA_MODE;
 8000c32:	4a2c      	ldr	r2, [pc, #176]	; (8000ce4 <MADC_vInit+0x144>)
 8000c34:	6893      	ldr	r3, [r2, #8]
 8000c36:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000c3a:	6093      	str	r3, [r2, #8]
	ADC -> CR2.DDS  = ADC_DDS_MODE;
 8000c3c:	4a29      	ldr	r2, [pc, #164]	; (8000ce4 <MADC_vInit+0x144>)
 8000c3e:	6893      	ldr	r3, [r2, #8]
 8000c40:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000c44:	6093      	str	r3, [r2, #8]
	ADC -> CR2.EOCS  = ADC_EOCS_MODE;
 8000c46:	4a27      	ldr	r2, [pc, #156]	; (8000ce4 <MADC_vInit+0x144>)
 8000c48:	6893      	ldr	r3, [r2, #8]
 8000c4a:	f36f 238a 	bfc	r3, #10, #1
 8000c4e:	6093      	str	r3, [r2, #8]
	ADC -> CR2.CONT  = ADC_CONVERSION_MODE;
 8000c50:	4a24      	ldr	r2, [pc, #144]	; (8000ce4 <MADC_vInit+0x144>)
 8000c52:	6893      	ldr	r3, [r2, #8]
 8000c54:	f36f 0341 	bfc	r3, #1, #1
 8000c58:	6093      	str	r3, [r2, #8]
	//choosing auto mode for injected channels
	ADC -> CR1.JAUTO = ADC_JAUTO_MODE;
 8000c5a:	4a22      	ldr	r2, [pc, #136]	; (8000ce4 <MADC_vInit+0x144>)
 8000c5c:	6853      	ldr	r3, [r2, #4]
 8000c5e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000c62:	6053      	str	r3, [r2, #4]
		ADC ->SQR3 |= (ADC_CHANNEL_2<<5);  // SEQ2 for CHannel 2
		ADC ->SQR3 |= (ADC_CHANNEL_3<<10); // SEQ1 for Channel 3
		ADC ->SQR3 |= (ADC_CHANNEL_4<<15); // SEQ2 for CHannel 4
	#elif	(ADC_USE_INJECTED_MODE == ENABLE)
		/* making all offset registers = 0 */
		ADC ->JOFR1 = 0;
 8000c64:	4b1f      	ldr	r3, [pc, #124]	; (8000ce4 <MADC_vInit+0x144>)
 8000c66:	2200      	movs	r2, #0
 8000c68:	615a      	str	r2, [r3, #20]
		ADC ->JOFR2 = 0;
 8000c6a:	4b1e      	ldr	r3, [pc, #120]	; (8000ce4 <MADC_vInit+0x144>)
 8000c6c:	2200      	movs	r2, #0
 8000c6e:	619a      	str	r2, [r3, #24]
		ADC ->JOFR3 = 0;
 8000c70:	4b1c      	ldr	r3, [pc, #112]	; (8000ce4 <MADC_vInit+0x144>)
 8000c72:	2200      	movs	r2, #0
 8000c74:	61da      	str	r2, [r3, #28]
		ADC ->JOFR4 = 0;
 8000c76:	4b1b      	ldr	r3, [pc, #108]	; (8000ce4 <MADC_vInit+0x144>)
 8000c78:	2200      	movs	r2, #0
 8000c7a:	621a      	str	r2, [r3, #32]
		/* setting the sequence */
		ADC ->JSQR |= (ADC_NUM_CHANNELS_USED << 20);
 8000c7c:	4b19      	ldr	r3, [pc, #100]	; (8000ce4 <MADC_vInit+0x144>)
 8000c7e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000c80:	4a18      	ldr	r2, [pc, #96]	; (8000ce4 <MADC_vInit+0x144>)
 8000c82:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8000c86:	6393      	str	r3, [r2, #56]	; 0x38
		ADC ->JSQR |= (ADC_CHANNEL_1<<0);  // SEQ1 for Channel 1
 8000c88:	4b16      	ldr	r3, [pc, #88]	; (8000ce4 <MADC_vInit+0x144>)
 8000c8a:	4a16      	ldr	r2, [pc, #88]	; (8000ce4 <MADC_vInit+0x144>)
 8000c8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000c8e:	6393      	str	r3, [r2, #56]	; 0x38
		ADC ->JSQR |= (ADC_CHANNEL_2<<5);  // SEQ2 for CHannel 2
 8000c90:	4b14      	ldr	r3, [pc, #80]	; (8000ce4 <MADC_vInit+0x144>)
 8000c92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000c94:	4a13      	ldr	r2, [pc, #76]	; (8000ce4 <MADC_vInit+0x144>)
 8000c96:	f043 0320 	orr.w	r3, r3, #32
 8000c9a:	6393      	str	r3, [r2, #56]	; 0x38
		ADC ->JSQR |= (ADC_CHANNEL_3<<10); // SEQ1 for Channel 3
 8000c9c:	4b11      	ldr	r3, [pc, #68]	; (8000ce4 <MADC_vInit+0x144>)
 8000c9e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000ca0:	4a10      	ldr	r2, [pc, #64]	; (8000ce4 <MADC_vInit+0x144>)
 8000ca2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000ca6:	6393      	str	r3, [r2, #56]	; 0x38
		ADC ->JSQR |= (ADC_CHANNEL_4<<15); // SEQ2 for CHannel 4
 8000ca8:	4b0e      	ldr	r3, [pc, #56]	; (8000ce4 <MADC_vInit+0x144>)
 8000caa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000cac:	4a0d      	ldr	r2, [pc, #52]	; (8000ce4 <MADC_vInit+0x144>)
 8000cae:	f443 33c0 	orr.w	r3, r3, #98304	; 0x18000
 8000cb2:	6393      	str	r3, [r2, #56]	; 0x38
	#else
		/*error*/
	#endif
		// Choosing sampling time for ADC channels */
	ADC ->SMPR2 |= (ADC_CHANNEL_1_SAMPLING<<0); // Sampling for Channel 1
 8000cb4:	4b0b      	ldr	r3, [pc, #44]	; (8000ce4 <MADC_vInit+0x144>)
 8000cb6:	4a0b      	ldr	r2, [pc, #44]	; (8000ce4 <MADC_vInit+0x144>)
 8000cb8:	691b      	ldr	r3, [r3, #16]
 8000cba:	6113      	str	r3, [r2, #16]
	ADC ->SMPR2 |= (ADC_CHANNEL_2_SAMPLING<<3); // Sampling for CHannel 2
 8000cbc:	4b09      	ldr	r3, [pc, #36]	; (8000ce4 <MADC_vInit+0x144>)
 8000cbe:	4a09      	ldr	r2, [pc, #36]	; (8000ce4 <MADC_vInit+0x144>)
 8000cc0:	691b      	ldr	r3, [r3, #16]
 8000cc2:	6113      	str	r3, [r2, #16]
	ADC ->SMPR2 |= (ADC_CHANNEL_3_SAMPLING<<6); // Sampling for Channel 3
 8000cc4:	4b07      	ldr	r3, [pc, #28]	; (8000ce4 <MADC_vInit+0x144>)
 8000cc6:	4a07      	ldr	r2, [pc, #28]	; (8000ce4 <MADC_vInit+0x144>)
 8000cc8:	691b      	ldr	r3, [r3, #16]
 8000cca:	6113      	str	r3, [r2, #16]
	ADC ->SMPR2 |= (ADC_CHANNEL_4_SAMPLING<<9); // Sampling for CHannel 4
 8000ccc:	4b05      	ldr	r3, [pc, #20]	; (8000ce4 <MADC_vInit+0x144>)
 8000cce:	4a05      	ldr	r2, [pc, #20]	; (8000ce4 <MADC_vInit+0x144>)
 8000cd0:	691b      	ldr	r3, [r3, #16]
 8000cd2:	6113      	str	r3, [r2, #16]
}
 8000cd4:	bf00      	nop
 8000cd6:	46bd      	mov	sp, r7
 8000cd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cdc:	4770      	bx	lr
 8000cde:	bf00      	nop
 8000ce0:	40012304 	.word	0x40012304
 8000ce4:	40012000 	.word	0x40012000

08000ce8 <MADC_vEnable>:
void MADC_vEnable(void)
{
 8000ce8:	b580      	push	{r7, lr}
 8000cea:	af00      	add	r7, sp, #0
	ADC -> CR2.ADON = 1;
 8000cec:	4a04      	ldr	r2, [pc, #16]	; (8000d00 <MADC_vEnable+0x18>)
 8000cee:	6893      	ldr	r3, [r2, #8]
 8000cf0:	f043 0301 	orr.w	r3, r3, #1
 8000cf4:	6093      	str	r3, [r2, #8]
	Delay_vUsIn16MHzint(10);
 8000cf6:	200a      	movs	r0, #10
 8000cf8:	f000 f884 	bl	8000e04 <Delay_vUsIn16MHzint>
}
 8000cfc:	bf00      	nop
 8000cfe:	bd80      	pop	{r7, pc}
 8000d00:	40012000 	.word	0x40012000

08000d04 <MADC_vStartConversion>:
void MADC_vStartConversion(void)
{
 8000d04:	b480      	push	{r7}
 8000d06:	af00      	add	r7, sp, #0
	ADC->SR = 0;
 8000d08:	4b08      	ldr	r3, [pc, #32]	; (8000d2c <MADC_vStartConversion+0x28>)
 8000d0a:	2200      	movs	r2, #0
 8000d0c:	601a      	str	r2, [r3, #0]
	ADC -> CR2.JSWSTART = 1;
 8000d0e:	4a07      	ldr	r2, [pc, #28]	; (8000d2c <MADC_vStartConversion+0x28>)
 8000d10:	6893      	ldr	r3, [r2, #8]
 8000d12:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000d16:	6093      	str	r3, [r2, #8]
	ADC -> CR2.SWSTART  = 1;
 8000d18:	4a04      	ldr	r2, [pc, #16]	; (8000d2c <MADC_vStartConversion+0x28>)
 8000d1a:	6893      	ldr	r3, [r2, #8]
 8000d1c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000d20:	6093      	str	r3, [r2, #8]
}
 8000d22:	bf00      	nop
 8000d24:	46bd      	mov	sp, r7
 8000d26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d2a:	4770      	bx	lr
 8000d2c:	40012000 	.word	0x40012000

08000d30 <MADC_vJGetArray>:
	for (int var = 0; var < (ADC_NUM_CHANNELS_USED+1); var++) {
		p[var] = MADC_u16GetValue();
	}
}
void MADC_vJGetArray(f32* p)
{
 8000d30:	b590      	push	{r4, r7, lr}
 8000d32:	b085      	sub	sp, #20
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	6078      	str	r0, [r7, #4]
	while (GET_BIT(ADC -> SR,2) == 0);
 8000d38:	bf00      	nop
 8000d3a:	4b23      	ldr	r3, [pc, #140]	; (8000dc8 <MADC_vJGetArray+0x98>)
 8000d3c:	681b      	ldr	r3, [r3, #0]
 8000d3e:	089b      	lsrs	r3, r3, #2
 8000d40:	f003 0301 	and.w	r3, r3, #1
 8000d44:	2b00      	cmp	r3, #0
 8000d46:	d0f8      	beq.n	8000d3a <MADC_vJGetArray+0xa>
	for (u8 var = 0; var < (ADC_NUM_CHANNELS_USED+1); var++) {
 8000d48:	2300      	movs	r3, #0
 8000d4a:	73fb      	strb	r3, [r7, #15]
 8000d4c:	e034      	b.n	8000db8 <MADC_vJGetArray+0x88>
		p[var] = ADC ->JDR[var];
 8000d4e:	4a1e      	ldr	r2, [pc, #120]	; (8000dc8 <MADC_vJGetArray+0x98>)
 8000d50:	7bfb      	ldrb	r3, [r7, #15]
 8000d52:	330e      	adds	r3, #14
 8000d54:	009b      	lsls	r3, r3, #2
 8000d56:	4413      	add	r3, r2
 8000d58:	6859      	ldr	r1, [r3, #4]
 8000d5a:	7bfb      	ldrb	r3, [r7, #15]
 8000d5c:	009b      	lsls	r3, r3, #2
 8000d5e:	687a      	ldr	r2, [r7, #4]
 8000d60:	4413      	add	r3, r2
 8000d62:	ee07 1a90 	vmov	s15, r1
 8000d66:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000d6a:	edc3 7a00 	vstr	s15, [r3]
		p[var] = (p[var] * 5.0 ) / (f32) 4096;
 8000d6e:	7bfb      	ldrb	r3, [r7, #15]
 8000d70:	009b      	lsls	r3, r3, #2
 8000d72:	687a      	ldr	r2, [r7, #4]
 8000d74:	4413      	add	r3, r2
 8000d76:	681b      	ldr	r3, [r3, #0]
 8000d78:	4618      	mov	r0, r3
 8000d7a:	f7ff fb91 	bl	80004a0 <__aeabi_f2d>
 8000d7e:	f04f 0200 	mov.w	r2, #0
 8000d82:	4b12      	ldr	r3, [pc, #72]	; (8000dcc <MADC_vJGetArray+0x9c>)
 8000d84:	f7ff fbe4 	bl	8000550 <__aeabi_dmul>
 8000d88:	4602      	mov	r2, r0
 8000d8a:	460b      	mov	r3, r1
 8000d8c:	4610      	mov	r0, r2
 8000d8e:	4619      	mov	r1, r3
 8000d90:	f04f 0200 	mov.w	r2, #0
 8000d94:	4b0e      	ldr	r3, [pc, #56]	; (8000dd0 <MADC_vJGetArray+0xa0>)
 8000d96:	f7ff fd05 	bl	80007a4 <__aeabi_ddiv>
 8000d9a:	4602      	mov	r2, r0
 8000d9c:	460b      	mov	r3, r1
 8000d9e:	4610      	mov	r0, r2
 8000da0:	4619      	mov	r1, r3
 8000da2:	7bfb      	ldrb	r3, [r7, #15]
 8000da4:	009b      	lsls	r3, r3, #2
 8000da6:	687a      	ldr	r2, [r7, #4]
 8000da8:	18d4      	adds	r4, r2, r3
 8000daa:	f7ff fea9 	bl	8000b00 <__aeabi_d2f>
 8000dae:	4603      	mov	r3, r0
 8000db0:	6023      	str	r3, [r4, #0]
	for (u8 var = 0; var < (ADC_NUM_CHANNELS_USED+1); var++) {
 8000db2:	7bfb      	ldrb	r3, [r7, #15]
 8000db4:	3301      	adds	r3, #1
 8000db6:	73fb      	strb	r3, [r7, #15]
 8000db8:	7bfb      	ldrb	r3, [r7, #15]
 8000dba:	2b03      	cmp	r3, #3
 8000dbc:	d9c7      	bls.n	8000d4e <MADC_vJGetArray+0x1e>
	}
}
 8000dbe:	bf00      	nop
 8000dc0:	bf00      	nop
 8000dc2:	3714      	adds	r7, #20
 8000dc4:	46bd      	mov	sp, r7
 8000dc6:	bd90      	pop	{r4, r7, pc}
 8000dc8:	40012000 	.word	0x40012000
 8000dcc:	40140000 	.word	0x40140000
 8000dd0:	40b00000 	.word	0x40b00000

08000dd4 <MADC_vStopADC>:
void MADC_vStopADC(void)
{
 8000dd4:	b580      	push	{r7, lr}
 8000dd6:	af00      	add	r7, sp, #0
	ADC -> CR2.JSWSTART = 0;
 8000dd8:	4a09      	ldr	r2, [pc, #36]	; (8000e00 <MADC_vStopADC+0x2c>)
 8000dda:	6893      	ldr	r3, [r2, #8]
 8000ddc:	f36f 5396 	bfc	r3, #22, #1
 8000de0:	6093      	str	r3, [r2, #8]
	ADC -> CR2.SWSTART  = 0;
 8000de2:	4a07      	ldr	r2, [pc, #28]	; (8000e00 <MADC_vStopADC+0x2c>)
 8000de4:	6893      	ldr	r3, [r2, #8]
 8000de6:	f36f 739e 	bfc	r3, #30, #1
 8000dea:	6093      	str	r3, [r2, #8]
	ADC -> CR2.ADON     = 0;
 8000dec:	4a04      	ldr	r2, [pc, #16]	; (8000e00 <MADC_vStopADC+0x2c>)
 8000dee:	6893      	ldr	r3, [r2, #8]
 8000df0:	f36f 0300 	bfc	r3, #0, #1
 8000df4:	6093      	str	r3, [r2, #8]
	Delay_vUsIn16MHzint(10);
 8000df6:	200a      	movs	r0, #10
 8000df8:	f000 f804 	bl	8000e04 <Delay_vUsIn16MHzint>
}
 8000dfc:	bf00      	nop
 8000dfe:	bd80      	pop	{r7, pc}
 8000e00:	40012000 	.word	0x40012000

08000e04 <Delay_vUsIn16MHzint>:
/*
*		Function To Delay By Microseconds ( 16MHz CPU CLK )
*/

extern void Delay_vUsIn16MHzint (u16 copy_u16CountNum)
{
 8000e04:	b480      	push	{r7}
 8000e06:	b085      	sub	sp, #20
 8000e08:	af00      	add	r7, sp, #0
 8000e0a:	4603      	mov	r3, r0
 8000e0c:	80fb      	strh	r3, [r7, #6]
	volatile u16 u16Local_Count1 ;
	volatile u16 u16Local_Count2 ;
	for(u16Local_Count1 = 0 ; u16Local_Count1 < copy_u16CountNum  ; u16Local_Count1++ )
 8000e0e:	2300      	movs	r3, #0
 8000e10:	81fb      	strh	r3, [r7, #14]
 8000e12:	e010      	b.n	8000e36 <Delay_vUsIn16MHzint+0x32>
	for(u16Local_Count2  = 0 ; u16Local_Count2  < 3  ; u16Local_Count2 ++ )
 8000e14:	2300      	movs	r3, #0
 8000e16:	81bb      	strh	r3, [r7, #12]
 8000e18:	e004      	b.n	8000e24 <Delay_vUsIn16MHzint+0x20>
 8000e1a:	89bb      	ldrh	r3, [r7, #12]
 8000e1c:	b29b      	uxth	r3, r3
 8000e1e:	3301      	adds	r3, #1
 8000e20:	b29b      	uxth	r3, r3
 8000e22:	81bb      	strh	r3, [r7, #12]
 8000e24:	89bb      	ldrh	r3, [r7, #12]
 8000e26:	b29b      	uxth	r3, r3
 8000e28:	2b02      	cmp	r3, #2
 8000e2a:	d9f6      	bls.n	8000e1a <Delay_vUsIn16MHzint+0x16>
	for(u16Local_Count1 = 0 ; u16Local_Count1 < copy_u16CountNum  ; u16Local_Count1++ )
 8000e2c:	89fb      	ldrh	r3, [r7, #14]
 8000e2e:	b29b      	uxth	r3, r3
 8000e30:	3301      	adds	r3, #1
 8000e32:	b29b      	uxth	r3, r3
 8000e34:	81fb      	strh	r3, [r7, #14]
 8000e36:	89fb      	ldrh	r3, [r7, #14]
 8000e38:	b29b      	uxth	r3, r3
 8000e3a:	88fa      	ldrh	r2, [r7, #6]
 8000e3c:	429a      	cmp	r2, r3
 8000e3e:	d8e9      	bhi.n	8000e14 <Delay_vUsIn16MHzint+0x10>
	{} // Do nothing for 1 ms
}
 8000e40:	bf00      	nop
 8000e42:	bf00      	nop
 8000e44:	3714      	adds	r7, #20
 8000e46:	46bd      	mov	sp, r7
 8000e48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e4c:	4770      	bx	lr

08000e4e <ECU_start>:
sunset* sunset_ptr = NULL_PTR;
sunrise rv;
sunset sv;
u8 Flag = 0;
void ECU_start(void)
{
 8000e4e:	b480      	push	{r7}
 8000e50:	af00      	add	r7, sp, #0
		//ECU_vCompareLDR();
}
 8000e52:	bf00      	nop
 8000e54:	46bd      	mov	sp, r7
 8000e56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e5a:	4770      	bx	lr

08000e5c <SysInit>:
void SysInit(void)
{
 8000e5c:	b580      	push	{r7, lr}
 8000e5e:	af00      	add	r7, sp, #0
	// start system clock 8MHz as per our calculations
	MRCC_vInitSystemCLK_Systick(AHB_Pre2);
 8000e60:	2001      	movs	r0, #1
 8000e62:	f000 fc9f 	bl	80017a4 <MRCC_vInitSystemCLK_Systick>
	// Enable interrupts for timers
	MNVIC_vEnableINT(28);
 8000e66:	201c      	movs	r0, #28
 8000e68:	f000 fc16 	bl	8001698 <MNVIC_vEnableINT>
	MNVIC_vEnableINT(29);
 8000e6c:	201d      	movs	r0, #29
 8000e6e:	f000 fc13 	bl	8001698 <MNVIC_vEnableINT>
	MNVIC_vEnableINT(50);
 8000e72:	2032      	movs	r0, #50	; 0x32
 8000e74:	f000 fc10 	bl	8001698 <MNVIC_vEnableINT>
	//enable clock for peripherals used
	MRCC_vEnableClock(AHB1_BUS, _PERIPHERAL_EN_GPIOA);
 8000e78:	2100      	movs	r1, #0
 8000e7a:	2000      	movs	r0, #0
 8000e7c:	f000 fc40 	bl	8001700 <MRCC_vEnableClock>
	MRCC_vEnableClock(APB2_BUS, PERIPHERAL_EN_ADC1);
 8000e80:	2108      	movs	r1, #8
 8000e82:	2003      	movs	r0, #3
 8000e84:	f000 fc3c 	bl	8001700 <MRCC_vEnableClock>
	MRCC_vEnableClock(APB1_BUS, PERIPHERAL_EN_TIM2);
 8000e88:	2100      	movs	r1, #0
 8000e8a:	2002      	movs	r0, #2
 8000e8c:	f000 fc38 	bl	8001700 <MRCC_vEnableClock>
	MRCC_vEnableClock(APB1_BUS, PERIPHERAL_EN_TIM3);
 8000e90:	2101      	movs	r1, #1
 8000e92:	2002      	movs	r0, #2
 8000e94:	f000 fc34 	bl	8001700 <MRCC_vEnableClock>
	MRCC_vEnableClock(APB1_BUS, PERIPHERAL_EN_TIM5);
 8000e98:	2103      	movs	r1, #3
 8000e9a:	2002      	movs	r0, #2
 8000e9c:	f000 fc30 	bl	8001700 <MRCC_vEnableClock>
	//init and enable modules
	MADC_vInit();
 8000ea0:	f7ff fe7e 	bl	8000ba0 <MADC_vInit>
	EnableFPU();
 8000ea4:	f000 f870 	bl	8000f88 <EnableFPU>
	TIM2_vInit();
 8000ea8:	f000 fec2 	bl	8001c30 <TIM2_vInit>
	TIM3_vInit();
 8000eac:	f000 fefc 	bl	8001ca8 <TIM3_vInit>
	TIM5_vInit();
 8000eb0:	f000 ff2c 	bl	8001d0c <TIM5_vInit>
	TIM2_vEnableCount(ARR_DAY);
 8000eb4:	4806      	ldr	r0, [pc, #24]	; (8000ed0 <SysInit+0x74>)
 8000eb6:	f000 ff5b 	bl	8001d70 <TIM2_vEnableCount>
	//set pins as we need
	SetPins();
 8000eba:	f000 f813 	bl	8000ee4 <SetPins>
	sunrise_ptr=&rv;
 8000ebe:	4b05      	ldr	r3, [pc, #20]	; (8000ed4 <SysInit+0x78>)
 8000ec0:	4a05      	ldr	r2, [pc, #20]	; (8000ed8 <SysInit+0x7c>)
 8000ec2:	601a      	str	r2, [r3, #0]
	sunset_ptr=&sv;
 8000ec4:	4b05      	ldr	r3, [pc, #20]	; (8000edc <SysInit+0x80>)
 8000ec6:	4a06      	ldr	r2, [pc, #24]	; (8000ee0 <SysInit+0x84>)
 8000ec8:	601a      	str	r2, [r3, #0]
}
 8000eca:	bf00      	nop
 8000ecc:	bd80      	pop	{r7, pc}
 8000ece:	bf00      	nop
 8000ed0:	00a4cb80 	.word	0x00a4cb80
 8000ed4:	2000009c 	.word	0x2000009c
 8000ed8:	200000a4 	.word	0x200000a4
 8000edc:	200000a0 	.word	0x200000a0
 8000ee0:	200000b0 	.word	0x200000b0

08000ee4 <SetPins>:
void SetPins(void)
{
 8000ee4:	b580      	push	{r7, lr}
 8000ee6:	b082      	sub	sp, #8
 8000ee8:	af00      	add	r7, sp, #0
	// set ADC pins as analog
	MGPIO_vSetPinMode(ADC_PORT , ADC_CHANNEL_1 , ANALOG);
 8000eea:	2203      	movs	r2, #3
 8000eec:	2100      	movs	r1, #0
 8000eee:	2000      	movs	r0, #0
 8000ef0:	f000 f8fc 	bl	80010ec <MGPIO_vSetPinMode>
	MGPIO_vSetPinPullType(GPIOA , ADC_CHANNEL_1 , NO_PULL);
 8000ef4:	2200      	movs	r2, #0
 8000ef6:	2100      	movs	r1, #0
 8000ef8:	2000      	movs	r0, #0
 8000efa:	f000 fabf 	bl	800147c <MGPIO_vSetPinPullType>
	MGPIO_vSetPinMode(ADC_PORT , ADC_CHANNEL_2 , ANALOG);
 8000efe:	2203      	movs	r2, #3
 8000f00:	2101      	movs	r1, #1
 8000f02:	2000      	movs	r0, #0
 8000f04:	f000 f8f2 	bl	80010ec <MGPIO_vSetPinMode>
	MGPIO_vSetPinPullType(GPIOA , ADC_CHANNEL_2 , NO_PULL);
 8000f08:	2200      	movs	r2, #0
 8000f0a:	2101      	movs	r1, #1
 8000f0c:	2000      	movs	r0, #0
 8000f0e:	f000 fab5 	bl	800147c <MGPIO_vSetPinPullType>
	MGPIO_vSetPinMode(ADC_PORT , ADC_CHANNEL_3 , ANALOG);
 8000f12:	2203      	movs	r2, #3
 8000f14:	2102      	movs	r1, #2
 8000f16:	2000      	movs	r0, #0
 8000f18:	f000 f8e8 	bl	80010ec <MGPIO_vSetPinMode>
	MGPIO_vSetPinPullType(GPIOA , ADC_CHANNEL_3 , NO_PULL);
 8000f1c:	2200      	movs	r2, #0
 8000f1e:	2102      	movs	r1, #2
 8000f20:	2000      	movs	r0, #0
 8000f22:	f000 faab 	bl	800147c <MGPIO_vSetPinPullType>
	MGPIO_vSetPinMode(ADC_PORT , ADC_CHANNEL_4 , ANALOG);
 8000f26:	2203      	movs	r2, #3
 8000f28:	2103      	movs	r1, #3
 8000f2a:	2000      	movs	r0, #0
 8000f2c:	f000 f8de 	bl	80010ec <MGPIO_vSetPinMode>
	MGPIO_vSetPinPullType(GPIOA , ADC_CHANNEL_4 , NO_PULL);
 8000f30:	2200      	movs	r2, #0
 8000f32:	2103      	movs	r1, #3
 8000f34:	2000      	movs	r0, #0
 8000f36:	f000 faa1 	bl	800147c <MGPIO_vSetPinPullType>
	//set pins 8-16 as output for motors
	for(u8 i =8 ; i<16 ;i++)
 8000f3a:	2308      	movs	r3, #8
 8000f3c:	71fb      	strb	r3, [r7, #7]
 8000f3e:	e01a      	b.n	8000f76 <SetPins+0x92>
	{
	MGPIO_vSetPinMode(GPIOA , i , GPOUPUT);
 8000f40:	79fb      	ldrb	r3, [r7, #7]
 8000f42:	2201      	movs	r2, #1
 8000f44:	4619      	mov	r1, r3
 8000f46:	2000      	movs	r0, #0
 8000f48:	f000 f8d0 	bl	80010ec <MGPIO_vSetPinMode>
	MGPIO_vSetPinOutputType(GPIOA , i , PUSH_PULL);
 8000f4c:	79fb      	ldrb	r3, [r7, #7]
 8000f4e:	2200      	movs	r2, #0
 8000f50:	4619      	mov	r1, r3
 8000f52:	2000      	movs	r0, #0
 8000f54:	f000 f942 	bl	80011dc <MGPIO_vSetPinOutputType>
	MGPIO_vSetPinOutputSpeed(GPIOA , i , LOW_SPEED);
 8000f58:	79fb      	ldrb	r3, [r7, #7]
 8000f5a:	2200      	movs	r2, #0
 8000f5c:	4619      	mov	r1, r3
 8000f5e:	2000      	movs	r0, #0
 8000f60:	f000 fa14 	bl	800138c <MGPIO_vSetPinOutputSpeed>
	MGPIO_vSetPinPullType(GPIOA , i , NO_PULL);
 8000f64:	79fb      	ldrb	r3, [r7, #7]
 8000f66:	2200      	movs	r2, #0
 8000f68:	4619      	mov	r1, r3
 8000f6a:	2000      	movs	r0, #0
 8000f6c:	f000 fa86 	bl	800147c <MGPIO_vSetPinPullType>
	for(u8 i =8 ; i<16 ;i++)
 8000f70:	79fb      	ldrb	r3, [r7, #7]
 8000f72:	3301      	adds	r3, #1
 8000f74:	71fb      	strb	r3, [r7, #7]
 8000f76:	79fb      	ldrb	r3, [r7, #7]
 8000f78:	2b0f      	cmp	r3, #15
 8000f7a:	d9e1      	bls.n	8000f40 <SetPins+0x5c>
	}
}
 8000f7c:	bf00      	nop
 8000f7e:	bf00      	nop
 8000f80:	3708      	adds	r7, #8
 8000f82:	46bd      	mov	sp, r7
 8000f84:	bd80      	pop	{r7, pc}
	...

08000f88 <EnableFPU>:
	Delay_vUsIn16MHzint(1000);
	MGPIO_vSetPinValueDirect(GPIOA , PIN ,RESET);
	Delay_vUsIn16MHzint(1000);
}
void EnableFPU(void)
{
 8000f88:	b480      	push	{r7}
 8000f8a:	af00      	add	r7, sp, #0
	//; CPACR is located at address 0xE000ED88
	asm("LDR.W R0, =0xE000ED88");
 8000f8c:	f8df 001c 	ldr.w	r0, [pc, #28]	; 8000fac <EnableFPU+0x24>
	//; Read CPACR
	asm("LDR R1, [R0]");
 8000f90:	6801      	ldr	r1, [r0, #0]
	//; Set bits 20-23 to enable CP10 and CP11 coprocessors
	asm("ORR R1, R1, #(0xF << 20)");
 8000f92:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
	//; Write back the modified value to the CPACR
	asm("STR R1, [R0]");
 8000f96:	6001      	str	r1, [r0, #0]
	//; wait for store to complete
	asm("DSB");
 8000f98:	f3bf 8f4f 	dsb	sy
	//;reset pipeline now the FPU is enabled
	asm("ISB");
 8000f9c:	f3bf 8f6f 	isb	sy
}
 8000fa0:	bf00      	nop
 8000fa2:	46bd      	mov	sp, r7
 8000fa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fa8:	4770      	bx	lr
 8000faa:	0000      	.short	0x0000
 8000fac:	e000ed88 	.word	0xe000ed88

08000fb0 <ECU_vCompareLDR>:
void ECU_vCompareLDR(void)
{
 8000fb0:	b580      	push	{r7, lr}
 8000fb2:	af00      	add	r7, sp, #0
	MADC_vEnable();
 8000fb4:	f7ff fe98 	bl	8000ce8 <MADC_vEnable>
    /* Loop forever */
	MADC_vStartConversion();
 8000fb8:	f7ff fea4 	bl	8000d04 <MADC_vStartConversion>
	MSTK_voidSetBusyWait( 5000);
 8000fbc:	f241 3088 	movw	r0, #5000	; 0x1388
 8000fc0:	f000 fc1a 	bl	80017f8 <MSTK_voidSetBusyWait>
	MADC_vJGetArray(Temp);
 8000fc4:	4825      	ldr	r0, [pc, #148]	; (800105c <ECU_vCompareLDR+0xac>)
 8000fc6:	f7ff feb3 	bl	8000d30 <MADC_vJGetArray>
	if (Temp[0] > Temp[1])
 8000fca:	4b24      	ldr	r3, [pc, #144]	; (800105c <ECU_vCompareLDR+0xac>)
 8000fcc:	ed93 7a00 	vldr	s14, [r3]
 8000fd0:	4b22      	ldr	r3, [pc, #136]	; (800105c <ECU_vCompareLDR+0xac>)
 8000fd2:	edd3 7a01 	vldr	s15, [r3, #4]
 8000fd6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8000fda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fde:	dd0a      	ble.n	8000ff6 <ECU_vCompareLDR+0x46>
	{
		MOTOR_vSetXPostion (1);
 8000fe0:	2001      	movs	r0, #1
 8000fe2:	f000 ff67 	bl	8001eb4 <MOTOR_vSetXPostion>
		MOTOR_vSetYPostion(4);
 8000fe6:	2004      	movs	r0, #4
 8000fe8:	f000 ffd0 	bl	8001f8c <MOTOR_vSetYPostion>
		MSTK_voidSetBusyWait( 1000);
 8000fec:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000ff0:	f000 fc02 	bl	80017f8 <MSTK_voidSetBusyWait>
 8000ff4:	e009      	b.n	800100a <ECU_vCompareLDR+0x5a>
	}
	else
	{
		MOTOR_vSetXPostion (2);
 8000ff6:	2002      	movs	r0, #2
 8000ff8:	f000 ff5c 	bl	8001eb4 <MOTOR_vSetXPostion>
		MOTOR_vSetYPostion(3);
 8000ffc:	2003      	movs	r0, #3
 8000ffe:	f000 ffc5 	bl	8001f8c <MOTOR_vSetYPostion>
		MSTK_voidSetBusyWait( 1000);
 8001002:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001006:	f000 fbf7 	bl	80017f8 <MSTK_voidSetBusyWait>
	}
	if (Temp[2] > Temp[3])
 800100a:	4b14      	ldr	r3, [pc, #80]	; (800105c <ECU_vCompareLDR+0xac>)
 800100c:	ed93 7a02 	vldr	s14, [r3, #8]
 8001010:	4b12      	ldr	r3, [pc, #72]	; (800105c <ECU_vCompareLDR+0xac>)
 8001012:	edd3 7a03 	vldr	s15, [r3, #12]
 8001016:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800101a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800101e:	dd0a      	ble.n	8001036 <ECU_vCompareLDR+0x86>
	{
		MOTOR_vSetXPostion (3);
 8001020:	2003      	movs	r0, #3
 8001022:	f000 ff47 	bl	8001eb4 <MOTOR_vSetXPostion>
		MOTOR_vSetYPostion(2);
 8001026:	2002      	movs	r0, #2
 8001028:	f000 ffb0 	bl	8001f8c <MOTOR_vSetYPostion>
		MSTK_voidSetBusyWait( 1000);
 800102c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001030:	f000 fbe2 	bl	80017f8 <MSTK_voidSetBusyWait>
 8001034:	e009      	b.n	800104a <ECU_vCompareLDR+0x9a>
	}
	else
	{
		MOTOR_vSetXPostion (4);
 8001036:	2004      	movs	r0, #4
 8001038:	f000 ff3c 	bl	8001eb4 <MOTOR_vSetXPostion>
		MOTOR_vSetYPostion (1);
 800103c:	2001      	movs	r0, #1
 800103e:	f000 ffa5 	bl	8001f8c <MOTOR_vSetYPostion>
		MSTK_voidSetBusyWait( 1000);
 8001042:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001046:	f000 fbd7 	bl	80017f8 <MSTK_voidSetBusyWait>
	}
	MADC_vStopADC();
 800104a:	f7ff fec3 	bl	8000dd4 <MADC_vStopADC>
	MSTK_voidSetBusyWait( 5000);
 800104e:	f241 3088 	movw	r0, #5000	; 0x1388
 8001052:	f000 fbd1 	bl	80017f8 <MSTK_voidSetBusyWait>
}
 8001056:	bf00      	nop
 8001058:	bd80      	pop	{r7, pc}
 800105a:	bf00      	nop
 800105c:	20000084 	.word	0x20000084

08001060 <TIM2_vFunc>:
void TIM2_vFunc(void)
{
 8001060:	b580      	push	{r7, lr}
 8001062:	af00      	add	r7, sp, #0
	DayCounter++;
 8001064:	4b10      	ldr	r3, [pc, #64]	; (80010a8 <TIM2_vFunc+0x48>)
 8001066:	681b      	ldr	r3, [r3, #0]
 8001068:	3301      	adds	r3, #1
 800106a:	4a0f      	ldr	r2, [pc, #60]	; (80010a8 <TIM2_vFunc+0x48>)
 800106c:	6013      	str	r3, [r2, #0]
	SunRiseTicks =  SunCalc_u32SunriseTime(DayCounter,sunrise_ptr);
 800106e:	4b0e      	ldr	r3, [pc, #56]	; (80010a8 <TIM2_vFunc+0x48>)
 8001070:	681b      	ldr	r3, [r3, #0]
 8001072:	4a0e      	ldr	r2, [pc, #56]	; (80010ac <TIM2_vFunc+0x4c>)
 8001074:	6812      	ldr	r2, [r2, #0]
 8001076:	4611      	mov	r1, r2
 8001078:	4618      	mov	r0, r3
 800107a:	f000 fc15 	bl	80018a8 <SunCalc_u32SunriseTime>
 800107e:	4603      	mov	r3, r0
 8001080:	4a0b      	ldr	r2, [pc, #44]	; (80010b0 <TIM2_vFunc+0x50>)
 8001082:	6013      	str	r3, [r2, #0]
	SunSetTicks  =  SunCalc_u32SunsetTime(DayCounter,sunset_ptr);
 8001084:	4b08      	ldr	r3, [pc, #32]	; (80010a8 <TIM2_vFunc+0x48>)
 8001086:	681b      	ldr	r3, [r3, #0]
 8001088:	4a0a      	ldr	r2, [pc, #40]	; (80010b4 <TIM2_vFunc+0x54>)
 800108a:	6812      	ldr	r2, [r2, #0]
 800108c:	4611      	mov	r1, r2
 800108e:	4618      	mov	r0, r3
 8001090:	f000 fcee 	bl	8001a70 <SunCalc_u32SunsetTime>
 8001094:	4603      	mov	r3, r0
 8001096:	4a08      	ldr	r2, [pc, #32]	; (80010b8 <TIM2_vFunc+0x58>)
 8001098:	6013      	str	r3, [r2, #0]
	TIM5_vEnableCount(SunRiseTicks);
 800109a:	4b05      	ldr	r3, [pc, #20]	; (80010b0 <TIM2_vFunc+0x50>)
 800109c:	681b      	ldr	r3, [r3, #0]
 800109e:	4618      	mov	r0, r3
 80010a0:	f000 fe74 	bl	8001d8c <TIM5_vEnableCount>
}
 80010a4:	bf00      	nop
 80010a6:	bd80      	pop	{r7, pc}
 80010a8:	20000000 	.word	0x20000000
 80010ac:	2000009c 	.word	0x2000009c
 80010b0:	20000094 	.word	0x20000094
 80010b4:	200000a0 	.word	0x200000a0
 80010b8:	20000098 	.word	0x20000098

080010bc <TIM3_vFunc>:
void TIM3_vFunc(void)
{
 80010bc:	b580      	push	{r7, lr}
 80010be:	af00      	add	r7, sp, #0
	ECU_vCompareLDR();
 80010c0:	f7ff ff76 	bl	8000fb0 <ECU_vCompareLDR>
}
 80010c4:	bf00      	nop
 80010c6:	bd80      	pop	{r7, pc}

080010c8 <setCallBacks>:
	}*/
	//TIM5_vDisableCount();
	//TIM5_vEnableCount(SunSetTicks - SunRiseTicks);
}
void setCallBacks(void)
{
 80010c8:	b580      	push	{r7, lr}
 80010ca:	af00      	add	r7, sp, #0
	TIM2_vSetCallBack(TIM2_vFunc);
 80010cc:	4805      	ldr	r0, [pc, #20]	; (80010e4 <setCallBacks+0x1c>)
 80010ce:	f000 fe6d 	bl	8001dac <TIM2_vSetCallBack>
	TIM3_vSetCallBack(TIM3_vFunc);
 80010d2:	4805      	ldr	r0, [pc, #20]	; (80010e8 <setCallBacks+0x20>)
 80010d4:	f000 fe7a 	bl	8001dcc <TIM3_vSetCallBack>
	TIM5_vSetCallBack(TIM3_vFunc);
 80010d8:	4803      	ldr	r0, [pc, #12]	; (80010e8 <setCallBacks+0x20>)
 80010da:	f000 fe87 	bl	8001dec <TIM5_vSetCallBack>
}
 80010de:	bf00      	nop
 80010e0:	bd80      	pop	{r7, pc}
 80010e2:	bf00      	nop
 80010e4:	08001061 	.word	0x08001061
 80010e8:	080010bd 	.word	0x080010bd

080010ec <MGPIO_vSetPinMode>:
							       - Copy_u8Pin 	  :  The pin we use 
							       - Copy_u8Mode       :  The mode(input , general purpose outpt, alternate function , analog)
	
*/
void MGPIO_vSetPinMode(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Mode)
{
 80010ec:	b480      	push	{r7}
 80010ee:	b083      	sub	sp, #12
 80010f0:	af00      	add	r7, sp, #0
 80010f2:	4603      	mov	r3, r0
 80010f4:	71fb      	strb	r3, [r7, #7]
 80010f6:	460b      	mov	r3, r1
 80010f8:	71bb      	strb	r3, [r7, #6]
 80010fa:	4613      	mov	r3, r2
 80010fc:	717b      	strb	r3, [r7, #5]
	switch(Copy_u8Port)
 80010fe:	79fb      	ldrb	r3, [r7, #7]
 8001100:	2b05      	cmp	r3, #5
 8001102:	d857      	bhi.n	80011b4 <MGPIO_vSetPinMode+0xc8>
 8001104:	a201      	add	r2, pc, #4	; (adr r2, 800110c <MGPIO_vSetPinMode+0x20>)
 8001106:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800110a:	bf00      	nop
 800110c:	08001125 	.word	0x08001125
 8001110:	0800113d 	.word	0x0800113d
 8001114:	08001155 	.word	0x08001155
 8001118:	0800116d 	.word	0x0800116d
 800111c:	08001185 	.word	0x08001185
 8001120:	0800119d 	.word	0x0800119d
	{
		case GPIOA :(MGPIOA ->MODER)|= (u32)(Copy_u8Mode << (2*Copy_u8Pin)); break;
 8001124:	4b27      	ldr	r3, [pc, #156]	; (80011c4 <MGPIO_vSetPinMode+0xd8>)
 8001126:	681b      	ldr	r3, [r3, #0]
 8001128:	7979      	ldrb	r1, [r7, #5]
 800112a:	79ba      	ldrb	r2, [r7, #6]
 800112c:	0052      	lsls	r2, r2, #1
 800112e:	fa01 f202 	lsl.w	r2, r1, r2
 8001132:	4611      	mov	r1, r2
 8001134:	4a23      	ldr	r2, [pc, #140]	; (80011c4 <MGPIO_vSetPinMode+0xd8>)
 8001136:	430b      	orrs	r3, r1
 8001138:	6013      	str	r3, [r2, #0]
 800113a:	e03c      	b.n	80011b6 <MGPIO_vSetPinMode+0xca>
		case GPIOB :(MGPIOB ->MODER)|= (u32)(Copy_u8Mode << (2*Copy_u8Pin)); break;
 800113c:	4b22      	ldr	r3, [pc, #136]	; (80011c8 <MGPIO_vSetPinMode+0xdc>)
 800113e:	681b      	ldr	r3, [r3, #0]
 8001140:	7979      	ldrb	r1, [r7, #5]
 8001142:	79ba      	ldrb	r2, [r7, #6]
 8001144:	0052      	lsls	r2, r2, #1
 8001146:	fa01 f202 	lsl.w	r2, r1, r2
 800114a:	4611      	mov	r1, r2
 800114c:	4a1e      	ldr	r2, [pc, #120]	; (80011c8 <MGPIO_vSetPinMode+0xdc>)
 800114e:	430b      	orrs	r3, r1
 8001150:	6013      	str	r3, [r2, #0]
 8001152:	e030      	b.n	80011b6 <MGPIO_vSetPinMode+0xca>
		case GPIOC :(MGPIOC ->MODER)|= (u32)(Copy_u8Mode << (2*Copy_u8Pin)); break;
 8001154:	4b1d      	ldr	r3, [pc, #116]	; (80011cc <MGPIO_vSetPinMode+0xe0>)
 8001156:	681b      	ldr	r3, [r3, #0]
 8001158:	7979      	ldrb	r1, [r7, #5]
 800115a:	79ba      	ldrb	r2, [r7, #6]
 800115c:	0052      	lsls	r2, r2, #1
 800115e:	fa01 f202 	lsl.w	r2, r1, r2
 8001162:	4611      	mov	r1, r2
 8001164:	4a19      	ldr	r2, [pc, #100]	; (80011cc <MGPIO_vSetPinMode+0xe0>)
 8001166:	430b      	orrs	r3, r1
 8001168:	6013      	str	r3, [r2, #0]
 800116a:	e024      	b.n	80011b6 <MGPIO_vSetPinMode+0xca>
		case GPIOD :(MGPIOD ->MODER)|= (u32)(Copy_u8Mode << (2*Copy_u8Pin)); break;
 800116c:	4b18      	ldr	r3, [pc, #96]	; (80011d0 <MGPIO_vSetPinMode+0xe4>)
 800116e:	681b      	ldr	r3, [r3, #0]
 8001170:	7979      	ldrb	r1, [r7, #5]
 8001172:	79ba      	ldrb	r2, [r7, #6]
 8001174:	0052      	lsls	r2, r2, #1
 8001176:	fa01 f202 	lsl.w	r2, r1, r2
 800117a:	4611      	mov	r1, r2
 800117c:	4a14      	ldr	r2, [pc, #80]	; (80011d0 <MGPIO_vSetPinMode+0xe4>)
 800117e:	430b      	orrs	r3, r1
 8001180:	6013      	str	r3, [r2, #0]
 8001182:	e018      	b.n	80011b6 <MGPIO_vSetPinMode+0xca>
		case GPIOE :(MGPIOE ->MODER)|= (u32)(Copy_u8Mode << (2*Copy_u8Pin)); break;
 8001184:	4b13      	ldr	r3, [pc, #76]	; (80011d4 <MGPIO_vSetPinMode+0xe8>)
 8001186:	681b      	ldr	r3, [r3, #0]
 8001188:	7979      	ldrb	r1, [r7, #5]
 800118a:	79ba      	ldrb	r2, [r7, #6]
 800118c:	0052      	lsls	r2, r2, #1
 800118e:	fa01 f202 	lsl.w	r2, r1, r2
 8001192:	4611      	mov	r1, r2
 8001194:	4a0f      	ldr	r2, [pc, #60]	; (80011d4 <MGPIO_vSetPinMode+0xe8>)
 8001196:	430b      	orrs	r3, r1
 8001198:	6013      	str	r3, [r2, #0]
 800119a:	e00c      	b.n	80011b6 <MGPIO_vSetPinMode+0xca>
		case GPIOH :(MGPIOH ->MODER)|= (u32)(Copy_u8Mode << (2*Copy_u8Pin)); break;
 800119c:	4b0e      	ldr	r3, [pc, #56]	; (80011d8 <MGPIO_vSetPinMode+0xec>)
 800119e:	681b      	ldr	r3, [r3, #0]
 80011a0:	7979      	ldrb	r1, [r7, #5]
 80011a2:	79ba      	ldrb	r2, [r7, #6]
 80011a4:	0052      	lsls	r2, r2, #1
 80011a6:	fa01 f202 	lsl.w	r2, r1, r2
 80011aa:	4611      	mov	r1, r2
 80011ac:	4a0a      	ldr	r2, [pc, #40]	; (80011d8 <MGPIO_vSetPinMode+0xec>)
 80011ae:	430b      	orrs	r3, r1
 80011b0:	6013      	str	r3, [r2, #0]
 80011b2:	e000      	b.n	80011b6 <MGPIO_vSetPinMode+0xca>
		default: /**/ break;
 80011b4:	bf00      	nop
	}
}
 80011b6:	bf00      	nop
 80011b8:	370c      	adds	r7, #12
 80011ba:	46bd      	mov	sp, r7
 80011bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011c0:	4770      	bx	lr
 80011c2:	bf00      	nop
 80011c4:	40020000 	.word	0x40020000
 80011c8:	40020400 	.word	0x40020400
 80011cc:	40020800 	.word	0x40020800
 80011d0:	40020c00 	.word	0x40020c00
 80011d4:	40021000 	.word	0x40021000
 80011d8:	40021c00 	.word	0x40021c00

080011dc <MGPIO_vSetPinOutputType>:
/*====================================================   END_FUNCTION   ====================================================*/
/*====================================================   Start_FUNCTION   ====================================================*/
void MGPIO_vSetPinOutputType(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8OType)
{
 80011dc:	b480      	push	{r7}
 80011de:	b083      	sub	sp, #12
 80011e0:	af00      	add	r7, sp, #0
 80011e2:	4603      	mov	r3, r0
 80011e4:	71fb      	strb	r3, [r7, #7]
 80011e6:	460b      	mov	r3, r1
 80011e8:	71bb      	strb	r3, [r7, #6]
 80011ea:	4613      	mov	r3, r2
 80011ec:	717b      	strb	r3, [r7, #5]
	if(Copy_u8OType == PUSH_PULL)
 80011ee:	797b      	ldrb	r3, [r7, #5]
 80011f0:	2b00      	cmp	r3, #0
 80011f2:	d15b      	bne.n	80012ac <MGPIO_vSetPinOutputType+0xd0>
	{
		switch(Copy_u8Port)
 80011f4:	79fb      	ldrb	r3, [r7, #7]
 80011f6:	2b05      	cmp	r3, #5
 80011f8:	f200 80b0 	bhi.w	800135c <MGPIO_vSetPinOutputType+0x180>
 80011fc:	a201      	add	r2, pc, #4	; (adr r2, 8001204 <MGPIO_vSetPinOutputType+0x28>)
 80011fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001202:	bf00      	nop
 8001204:	0800121d 	.word	0x0800121d
 8001208:	08001235 	.word	0x08001235
 800120c:	0800124d 	.word	0x0800124d
 8001210:	08001265 	.word	0x08001265
 8001214:	0800127d 	.word	0x0800127d
 8001218:	08001295 	.word	0x08001295
		{
			case GPIOA :CLR_BIT(MGPIOA ->OTYPER,Copy_u8Pin);	break;
 800121c:	4b55      	ldr	r3, [pc, #340]	; (8001374 <MGPIO_vSetPinOutputType+0x198>)
 800121e:	685b      	ldr	r3, [r3, #4]
 8001220:	79ba      	ldrb	r2, [r7, #6]
 8001222:	2101      	movs	r1, #1
 8001224:	fa01 f202 	lsl.w	r2, r1, r2
 8001228:	43d2      	mvns	r2, r2
 800122a:	4611      	mov	r1, r2
 800122c:	4a51      	ldr	r2, [pc, #324]	; (8001374 <MGPIO_vSetPinOutputType+0x198>)
 800122e:	400b      	ands	r3, r1
 8001230:	6053      	str	r3, [r2, #4]
 8001232:	e098      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			case GPIOB :CLR_BIT(MGPIOB ->OTYPER,Copy_u8Pin);	break;
 8001234:	4b50      	ldr	r3, [pc, #320]	; (8001378 <MGPIO_vSetPinOutputType+0x19c>)
 8001236:	685b      	ldr	r3, [r3, #4]
 8001238:	79ba      	ldrb	r2, [r7, #6]
 800123a:	2101      	movs	r1, #1
 800123c:	fa01 f202 	lsl.w	r2, r1, r2
 8001240:	43d2      	mvns	r2, r2
 8001242:	4611      	mov	r1, r2
 8001244:	4a4c      	ldr	r2, [pc, #304]	; (8001378 <MGPIO_vSetPinOutputType+0x19c>)
 8001246:	400b      	ands	r3, r1
 8001248:	6053      	str	r3, [r2, #4]
 800124a:	e08c      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			case GPIOC :CLR_BIT(MGPIOC ->OTYPER,Copy_u8Pin);	break;
 800124c:	4b4b      	ldr	r3, [pc, #300]	; (800137c <MGPIO_vSetPinOutputType+0x1a0>)
 800124e:	685b      	ldr	r3, [r3, #4]
 8001250:	79ba      	ldrb	r2, [r7, #6]
 8001252:	2101      	movs	r1, #1
 8001254:	fa01 f202 	lsl.w	r2, r1, r2
 8001258:	43d2      	mvns	r2, r2
 800125a:	4611      	mov	r1, r2
 800125c:	4a47      	ldr	r2, [pc, #284]	; (800137c <MGPIO_vSetPinOutputType+0x1a0>)
 800125e:	400b      	ands	r3, r1
 8001260:	6053      	str	r3, [r2, #4]
 8001262:	e080      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			case GPIOD :CLR_BIT(MGPIOD ->OTYPER,Copy_u8Pin);	break;
 8001264:	4b46      	ldr	r3, [pc, #280]	; (8001380 <MGPIO_vSetPinOutputType+0x1a4>)
 8001266:	685b      	ldr	r3, [r3, #4]
 8001268:	79ba      	ldrb	r2, [r7, #6]
 800126a:	2101      	movs	r1, #1
 800126c:	fa01 f202 	lsl.w	r2, r1, r2
 8001270:	43d2      	mvns	r2, r2
 8001272:	4611      	mov	r1, r2
 8001274:	4a42      	ldr	r2, [pc, #264]	; (8001380 <MGPIO_vSetPinOutputType+0x1a4>)
 8001276:	400b      	ands	r3, r1
 8001278:	6053      	str	r3, [r2, #4]
 800127a:	e074      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			case GPIOE :CLR_BIT(MGPIOE ->OTYPER,Copy_u8Pin);	break;
 800127c:	4b41      	ldr	r3, [pc, #260]	; (8001384 <MGPIO_vSetPinOutputType+0x1a8>)
 800127e:	685b      	ldr	r3, [r3, #4]
 8001280:	79ba      	ldrb	r2, [r7, #6]
 8001282:	2101      	movs	r1, #1
 8001284:	fa01 f202 	lsl.w	r2, r1, r2
 8001288:	43d2      	mvns	r2, r2
 800128a:	4611      	mov	r1, r2
 800128c:	4a3d      	ldr	r2, [pc, #244]	; (8001384 <MGPIO_vSetPinOutputType+0x1a8>)
 800128e:	400b      	ands	r3, r1
 8001290:	6053      	str	r3, [r2, #4]
 8001292:	e068      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			case GPIOH :CLR_BIT(MGPIOH ->OTYPER,Copy_u8Pin);	break;
 8001294:	4b3c      	ldr	r3, [pc, #240]	; (8001388 <MGPIO_vSetPinOutputType+0x1ac>)
 8001296:	685b      	ldr	r3, [r3, #4]
 8001298:	79ba      	ldrb	r2, [r7, #6]
 800129a:	2101      	movs	r1, #1
 800129c:	fa01 f202 	lsl.w	r2, r1, r2
 80012a0:	43d2      	mvns	r2, r2
 80012a2:	4611      	mov	r1, r2
 80012a4:	4a38      	ldr	r2, [pc, #224]	; (8001388 <MGPIO_vSetPinOutputType+0x1ac>)
 80012a6:	400b      	ands	r3, r1
 80012a8:	6053      	str	r3, [r2, #4]
 80012aa:	e05c      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			default: /*  */ break;
		}
	}
	else if(Copy_u8OType == OPEN_DRAIN)
 80012ac:	797b      	ldrb	r3, [r7, #5]
 80012ae:	2b01      	cmp	r3, #1
 80012b0:	d156      	bne.n	8001360 <MGPIO_vSetPinOutputType+0x184>
	{
		switch(Copy_u8Port)
 80012b2:	79fb      	ldrb	r3, [r7, #7]
 80012b4:	2b05      	cmp	r3, #5
 80012b6:	d855      	bhi.n	8001364 <MGPIO_vSetPinOutputType+0x188>
 80012b8:	a201      	add	r2, pc, #4	; (adr r2, 80012c0 <MGPIO_vSetPinOutputType+0xe4>)
 80012ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80012be:	bf00      	nop
 80012c0:	080012d9 	.word	0x080012d9
 80012c4:	080012ef 	.word	0x080012ef
 80012c8:	08001305 	.word	0x08001305
 80012cc:	0800131b 	.word	0x0800131b
 80012d0:	08001331 	.word	0x08001331
 80012d4:	08001347 	.word	0x08001347
		{
			case GPIOA :SET_BIT(MGPIOA ->OTYPER,Copy_u8Pin);	break;
 80012d8:	4b26      	ldr	r3, [pc, #152]	; (8001374 <MGPIO_vSetPinOutputType+0x198>)
 80012da:	685b      	ldr	r3, [r3, #4]
 80012dc:	79ba      	ldrb	r2, [r7, #6]
 80012de:	2101      	movs	r1, #1
 80012e0:	fa01 f202 	lsl.w	r2, r1, r2
 80012e4:	4611      	mov	r1, r2
 80012e6:	4a23      	ldr	r2, [pc, #140]	; (8001374 <MGPIO_vSetPinOutputType+0x198>)
 80012e8:	430b      	orrs	r3, r1
 80012ea:	6053      	str	r3, [r2, #4]
 80012ec:	e03b      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			case GPIOB :SET_BIT(MGPIOB ->OTYPER,Copy_u8Pin);	break;
 80012ee:	4b22      	ldr	r3, [pc, #136]	; (8001378 <MGPIO_vSetPinOutputType+0x19c>)
 80012f0:	685b      	ldr	r3, [r3, #4]
 80012f2:	79ba      	ldrb	r2, [r7, #6]
 80012f4:	2101      	movs	r1, #1
 80012f6:	fa01 f202 	lsl.w	r2, r1, r2
 80012fa:	4611      	mov	r1, r2
 80012fc:	4a1e      	ldr	r2, [pc, #120]	; (8001378 <MGPIO_vSetPinOutputType+0x19c>)
 80012fe:	430b      	orrs	r3, r1
 8001300:	6053      	str	r3, [r2, #4]
 8001302:	e030      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			case GPIOC :SET_BIT(MGPIOC ->OTYPER,Copy_u8Pin);	break;
 8001304:	4b1d      	ldr	r3, [pc, #116]	; (800137c <MGPIO_vSetPinOutputType+0x1a0>)
 8001306:	685b      	ldr	r3, [r3, #4]
 8001308:	79ba      	ldrb	r2, [r7, #6]
 800130a:	2101      	movs	r1, #1
 800130c:	fa01 f202 	lsl.w	r2, r1, r2
 8001310:	4611      	mov	r1, r2
 8001312:	4a1a      	ldr	r2, [pc, #104]	; (800137c <MGPIO_vSetPinOutputType+0x1a0>)
 8001314:	430b      	orrs	r3, r1
 8001316:	6053      	str	r3, [r2, #4]
 8001318:	e025      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			case GPIOD :SET_BIT(MGPIOD ->OTYPER,Copy_u8Pin);	break;
 800131a:	4b19      	ldr	r3, [pc, #100]	; (8001380 <MGPIO_vSetPinOutputType+0x1a4>)
 800131c:	685b      	ldr	r3, [r3, #4]
 800131e:	79ba      	ldrb	r2, [r7, #6]
 8001320:	2101      	movs	r1, #1
 8001322:	fa01 f202 	lsl.w	r2, r1, r2
 8001326:	4611      	mov	r1, r2
 8001328:	4a15      	ldr	r2, [pc, #84]	; (8001380 <MGPIO_vSetPinOutputType+0x1a4>)
 800132a:	430b      	orrs	r3, r1
 800132c:	6053      	str	r3, [r2, #4]
 800132e:	e01a      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			case GPIOE :SET_BIT(MGPIOE ->OTYPER,Copy_u8Pin);	break;
 8001330:	4b14      	ldr	r3, [pc, #80]	; (8001384 <MGPIO_vSetPinOutputType+0x1a8>)
 8001332:	685b      	ldr	r3, [r3, #4]
 8001334:	79ba      	ldrb	r2, [r7, #6]
 8001336:	2101      	movs	r1, #1
 8001338:	fa01 f202 	lsl.w	r2, r1, r2
 800133c:	4611      	mov	r1, r2
 800133e:	4a11      	ldr	r2, [pc, #68]	; (8001384 <MGPIO_vSetPinOutputType+0x1a8>)
 8001340:	430b      	orrs	r3, r1
 8001342:	6053      	str	r3, [r2, #4]
 8001344:	e00f      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			case GPIOH :SET_BIT(MGPIOH ->OTYPER,Copy_u8Pin);	break;
 8001346:	4b10      	ldr	r3, [pc, #64]	; (8001388 <MGPIO_vSetPinOutputType+0x1ac>)
 8001348:	685b      	ldr	r3, [r3, #4]
 800134a:	79ba      	ldrb	r2, [r7, #6]
 800134c:	2101      	movs	r1, #1
 800134e:	fa01 f202 	lsl.w	r2, r1, r2
 8001352:	4611      	mov	r1, r2
 8001354:	4a0c      	ldr	r2, [pc, #48]	; (8001388 <MGPIO_vSetPinOutputType+0x1ac>)
 8001356:	430b      	orrs	r3, r1
 8001358:	6053      	str	r3, [r2, #4]
 800135a:	e004      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			default: /*  */ break;
 800135c:	bf00      	nop
 800135e:	e002      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			default: /*  */ break;
		}
	}
 8001360:	bf00      	nop
 8001362:	e000      	b.n	8001366 <MGPIO_vSetPinOutputType+0x18a>
			default: /*  */ break;
 8001364:	bf00      	nop
}
 8001366:	bf00      	nop
 8001368:	370c      	adds	r7, #12
 800136a:	46bd      	mov	sp, r7
 800136c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001370:	4770      	bx	lr
 8001372:	bf00      	nop
 8001374:	40020000 	.word	0x40020000
 8001378:	40020400 	.word	0x40020400
 800137c:	40020800 	.word	0x40020800
 8001380:	40020c00 	.word	0x40020c00
 8001384:	40021000 	.word	0x40021000
 8001388:	40021c00 	.word	0x40021c00

0800138c <MGPIO_vSetPinOutputSpeed>:
/*====================================================   END_FUNCTION   ====================================================*/
/*====================================================   Start_FUNCTION   ====================================================*/
void MGPIO_vSetPinOutputSpeed(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8OSpeed)
{
 800138c:	b480      	push	{r7}
 800138e:	b083      	sub	sp, #12
 8001390:	af00      	add	r7, sp, #0
 8001392:	4603      	mov	r3, r0
 8001394:	71fb      	strb	r3, [r7, #7]
 8001396:	460b      	mov	r3, r1
 8001398:	71bb      	strb	r3, [r7, #6]
 800139a:	4613      	mov	r3, r2
 800139c:	717b      	strb	r3, [r7, #5]
	switch(Copy_u8Port)
 800139e:	79fb      	ldrb	r3, [r7, #7]
 80013a0:	2b05      	cmp	r3, #5
 80013a2:	d857      	bhi.n	8001454 <MGPIO_vSetPinOutputSpeed+0xc8>
 80013a4:	a201      	add	r2, pc, #4	; (adr r2, 80013ac <MGPIO_vSetPinOutputSpeed+0x20>)
 80013a6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80013aa:	bf00      	nop
 80013ac:	080013c5 	.word	0x080013c5
 80013b0:	080013dd 	.word	0x080013dd
 80013b4:	080013f5 	.word	0x080013f5
 80013b8:	0800140d 	.word	0x0800140d
 80013bc:	08001425 	.word	0x08001425
 80013c0:	0800143d 	.word	0x0800143d
	{
		case GPIOA :(MGPIOA ->OSPEEDR)|= (u32)(Copy_u8OSpeed << (2*Copy_u8Pin)); break;
 80013c4:	4b27      	ldr	r3, [pc, #156]	; (8001464 <MGPIO_vSetPinOutputSpeed+0xd8>)
 80013c6:	689b      	ldr	r3, [r3, #8]
 80013c8:	7979      	ldrb	r1, [r7, #5]
 80013ca:	79ba      	ldrb	r2, [r7, #6]
 80013cc:	0052      	lsls	r2, r2, #1
 80013ce:	fa01 f202 	lsl.w	r2, r1, r2
 80013d2:	4611      	mov	r1, r2
 80013d4:	4a23      	ldr	r2, [pc, #140]	; (8001464 <MGPIO_vSetPinOutputSpeed+0xd8>)
 80013d6:	430b      	orrs	r3, r1
 80013d8:	6093      	str	r3, [r2, #8]
 80013da:	e03c      	b.n	8001456 <MGPIO_vSetPinOutputSpeed+0xca>
		case GPIOB :(MGPIOB ->OSPEEDR)|= (u32)(Copy_u8OSpeed << (2*Copy_u8Pin)); break;
 80013dc:	4b22      	ldr	r3, [pc, #136]	; (8001468 <MGPIO_vSetPinOutputSpeed+0xdc>)
 80013de:	689b      	ldr	r3, [r3, #8]
 80013e0:	7979      	ldrb	r1, [r7, #5]
 80013e2:	79ba      	ldrb	r2, [r7, #6]
 80013e4:	0052      	lsls	r2, r2, #1
 80013e6:	fa01 f202 	lsl.w	r2, r1, r2
 80013ea:	4611      	mov	r1, r2
 80013ec:	4a1e      	ldr	r2, [pc, #120]	; (8001468 <MGPIO_vSetPinOutputSpeed+0xdc>)
 80013ee:	430b      	orrs	r3, r1
 80013f0:	6093      	str	r3, [r2, #8]
 80013f2:	e030      	b.n	8001456 <MGPIO_vSetPinOutputSpeed+0xca>
		case GPIOC :(MGPIOC ->OSPEEDR)|= (u32)(Copy_u8OSpeed << (2*Copy_u8Pin)); break;
 80013f4:	4b1d      	ldr	r3, [pc, #116]	; (800146c <MGPIO_vSetPinOutputSpeed+0xe0>)
 80013f6:	689b      	ldr	r3, [r3, #8]
 80013f8:	7979      	ldrb	r1, [r7, #5]
 80013fa:	79ba      	ldrb	r2, [r7, #6]
 80013fc:	0052      	lsls	r2, r2, #1
 80013fe:	fa01 f202 	lsl.w	r2, r1, r2
 8001402:	4611      	mov	r1, r2
 8001404:	4a19      	ldr	r2, [pc, #100]	; (800146c <MGPIO_vSetPinOutputSpeed+0xe0>)
 8001406:	430b      	orrs	r3, r1
 8001408:	6093      	str	r3, [r2, #8]
 800140a:	e024      	b.n	8001456 <MGPIO_vSetPinOutputSpeed+0xca>
		case GPIOD :(MGPIOD ->OSPEEDR)|= (u32)(Copy_u8OSpeed << (2*Copy_u8Pin)); break;
 800140c:	4b18      	ldr	r3, [pc, #96]	; (8001470 <MGPIO_vSetPinOutputSpeed+0xe4>)
 800140e:	689b      	ldr	r3, [r3, #8]
 8001410:	7979      	ldrb	r1, [r7, #5]
 8001412:	79ba      	ldrb	r2, [r7, #6]
 8001414:	0052      	lsls	r2, r2, #1
 8001416:	fa01 f202 	lsl.w	r2, r1, r2
 800141a:	4611      	mov	r1, r2
 800141c:	4a14      	ldr	r2, [pc, #80]	; (8001470 <MGPIO_vSetPinOutputSpeed+0xe4>)
 800141e:	430b      	orrs	r3, r1
 8001420:	6093      	str	r3, [r2, #8]
 8001422:	e018      	b.n	8001456 <MGPIO_vSetPinOutputSpeed+0xca>
		case GPIOE :(MGPIOE ->OSPEEDR)|= (u32)(Copy_u8OSpeed << (2*Copy_u8Pin)); break;
 8001424:	4b13      	ldr	r3, [pc, #76]	; (8001474 <MGPIO_vSetPinOutputSpeed+0xe8>)
 8001426:	689b      	ldr	r3, [r3, #8]
 8001428:	7979      	ldrb	r1, [r7, #5]
 800142a:	79ba      	ldrb	r2, [r7, #6]
 800142c:	0052      	lsls	r2, r2, #1
 800142e:	fa01 f202 	lsl.w	r2, r1, r2
 8001432:	4611      	mov	r1, r2
 8001434:	4a0f      	ldr	r2, [pc, #60]	; (8001474 <MGPIO_vSetPinOutputSpeed+0xe8>)
 8001436:	430b      	orrs	r3, r1
 8001438:	6093      	str	r3, [r2, #8]
 800143a:	e00c      	b.n	8001456 <MGPIO_vSetPinOutputSpeed+0xca>
		case GPIOH :(MGPIOH ->OSPEEDR)|= (u32)(Copy_u8OSpeed << (2*Copy_u8Pin)); break;
 800143c:	4b0e      	ldr	r3, [pc, #56]	; (8001478 <MGPIO_vSetPinOutputSpeed+0xec>)
 800143e:	689b      	ldr	r3, [r3, #8]
 8001440:	7979      	ldrb	r1, [r7, #5]
 8001442:	79ba      	ldrb	r2, [r7, #6]
 8001444:	0052      	lsls	r2, r2, #1
 8001446:	fa01 f202 	lsl.w	r2, r1, r2
 800144a:	4611      	mov	r1, r2
 800144c:	4a0a      	ldr	r2, [pc, #40]	; (8001478 <MGPIO_vSetPinOutputSpeed+0xec>)
 800144e:	430b      	orrs	r3, r1
 8001450:	6093      	str	r3, [r2, #8]
 8001452:	e000      	b.n	8001456 <MGPIO_vSetPinOutputSpeed+0xca>
		default: /**/ break;
 8001454:	bf00      	nop
	}
}
 8001456:	bf00      	nop
 8001458:	370c      	adds	r7, #12
 800145a:	46bd      	mov	sp, r7
 800145c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001460:	4770      	bx	lr
 8001462:	bf00      	nop
 8001464:	40020000 	.word	0x40020000
 8001468:	40020400 	.word	0x40020400
 800146c:	40020800 	.word	0x40020800
 8001470:	40020c00 	.word	0x40020c00
 8001474:	40021000 	.word	0x40021000
 8001478:	40021c00 	.word	0x40021c00

0800147c <MGPIO_vSetPinPullType>:
/*====================================================   END_FUNCTION   ====================================================*/
/*====================================================   Start_FUNCTION   ====================================================*/
void MGPIO_vSetPinPullType(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8PullType)
{
 800147c:	b480      	push	{r7}
 800147e:	b083      	sub	sp, #12
 8001480:	af00      	add	r7, sp, #0
 8001482:	4603      	mov	r3, r0
 8001484:	71fb      	strb	r3, [r7, #7]
 8001486:	460b      	mov	r3, r1
 8001488:	71bb      	strb	r3, [r7, #6]
 800148a:	4613      	mov	r3, r2
 800148c:	717b      	strb	r3, [r7, #5]
	switch(Copy_u8Port)
 800148e:	79fb      	ldrb	r3, [r7, #7]
 8001490:	2b05      	cmp	r3, #5
 8001492:	d857      	bhi.n	8001544 <MGPIO_vSetPinPullType+0xc8>
 8001494:	a201      	add	r2, pc, #4	; (adr r2, 800149c <MGPIO_vSetPinPullType+0x20>)
 8001496:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800149a:	bf00      	nop
 800149c:	080014b5 	.word	0x080014b5
 80014a0:	080014cd 	.word	0x080014cd
 80014a4:	080014e5 	.word	0x080014e5
 80014a8:	080014fd 	.word	0x080014fd
 80014ac:	08001515 	.word	0x08001515
 80014b0:	0800152d 	.word	0x0800152d
	{
		case GPIOA :(MGPIOA ->PUPDR)|= (u32)(Copy_u8PullType << (2*Copy_u8Pin)); break;
 80014b4:	4b27      	ldr	r3, [pc, #156]	; (8001554 <MGPIO_vSetPinPullType+0xd8>)
 80014b6:	68db      	ldr	r3, [r3, #12]
 80014b8:	7979      	ldrb	r1, [r7, #5]
 80014ba:	79ba      	ldrb	r2, [r7, #6]
 80014bc:	0052      	lsls	r2, r2, #1
 80014be:	fa01 f202 	lsl.w	r2, r1, r2
 80014c2:	4611      	mov	r1, r2
 80014c4:	4a23      	ldr	r2, [pc, #140]	; (8001554 <MGPIO_vSetPinPullType+0xd8>)
 80014c6:	430b      	orrs	r3, r1
 80014c8:	60d3      	str	r3, [r2, #12]
 80014ca:	e03c      	b.n	8001546 <MGPIO_vSetPinPullType+0xca>
		case GPIOB :(MGPIOB ->PUPDR)|= (u32)(Copy_u8PullType << (2*Copy_u8Pin)); break;
 80014cc:	4b22      	ldr	r3, [pc, #136]	; (8001558 <MGPIO_vSetPinPullType+0xdc>)
 80014ce:	68db      	ldr	r3, [r3, #12]
 80014d0:	7979      	ldrb	r1, [r7, #5]
 80014d2:	79ba      	ldrb	r2, [r7, #6]
 80014d4:	0052      	lsls	r2, r2, #1
 80014d6:	fa01 f202 	lsl.w	r2, r1, r2
 80014da:	4611      	mov	r1, r2
 80014dc:	4a1e      	ldr	r2, [pc, #120]	; (8001558 <MGPIO_vSetPinPullType+0xdc>)
 80014de:	430b      	orrs	r3, r1
 80014e0:	60d3      	str	r3, [r2, #12]
 80014e2:	e030      	b.n	8001546 <MGPIO_vSetPinPullType+0xca>
		case GPIOC :(MGPIOC ->PUPDR)|= (u32)(Copy_u8PullType << (2*Copy_u8Pin)); break;
 80014e4:	4b1d      	ldr	r3, [pc, #116]	; (800155c <MGPIO_vSetPinPullType+0xe0>)
 80014e6:	68db      	ldr	r3, [r3, #12]
 80014e8:	7979      	ldrb	r1, [r7, #5]
 80014ea:	79ba      	ldrb	r2, [r7, #6]
 80014ec:	0052      	lsls	r2, r2, #1
 80014ee:	fa01 f202 	lsl.w	r2, r1, r2
 80014f2:	4611      	mov	r1, r2
 80014f4:	4a19      	ldr	r2, [pc, #100]	; (800155c <MGPIO_vSetPinPullType+0xe0>)
 80014f6:	430b      	orrs	r3, r1
 80014f8:	60d3      	str	r3, [r2, #12]
 80014fa:	e024      	b.n	8001546 <MGPIO_vSetPinPullType+0xca>
		case GPIOD :(MGPIOD ->PUPDR)|= (u32)(Copy_u8PullType << (2*Copy_u8Pin)); break;
 80014fc:	4b18      	ldr	r3, [pc, #96]	; (8001560 <MGPIO_vSetPinPullType+0xe4>)
 80014fe:	68db      	ldr	r3, [r3, #12]
 8001500:	7979      	ldrb	r1, [r7, #5]
 8001502:	79ba      	ldrb	r2, [r7, #6]
 8001504:	0052      	lsls	r2, r2, #1
 8001506:	fa01 f202 	lsl.w	r2, r1, r2
 800150a:	4611      	mov	r1, r2
 800150c:	4a14      	ldr	r2, [pc, #80]	; (8001560 <MGPIO_vSetPinPullType+0xe4>)
 800150e:	430b      	orrs	r3, r1
 8001510:	60d3      	str	r3, [r2, #12]
 8001512:	e018      	b.n	8001546 <MGPIO_vSetPinPullType+0xca>
		case GPIOE :(MGPIOE ->PUPDR)|= (u32)(Copy_u8PullType << (2*Copy_u8Pin)); break;
 8001514:	4b13      	ldr	r3, [pc, #76]	; (8001564 <MGPIO_vSetPinPullType+0xe8>)
 8001516:	68db      	ldr	r3, [r3, #12]
 8001518:	7979      	ldrb	r1, [r7, #5]
 800151a:	79ba      	ldrb	r2, [r7, #6]
 800151c:	0052      	lsls	r2, r2, #1
 800151e:	fa01 f202 	lsl.w	r2, r1, r2
 8001522:	4611      	mov	r1, r2
 8001524:	4a0f      	ldr	r2, [pc, #60]	; (8001564 <MGPIO_vSetPinPullType+0xe8>)
 8001526:	430b      	orrs	r3, r1
 8001528:	60d3      	str	r3, [r2, #12]
 800152a:	e00c      	b.n	8001546 <MGPIO_vSetPinPullType+0xca>
		case GPIOH :(MGPIOH ->PUPDR)|= (u32)(Copy_u8PullType << (2*Copy_u8Pin)); break;
 800152c:	4b0e      	ldr	r3, [pc, #56]	; (8001568 <MGPIO_vSetPinPullType+0xec>)
 800152e:	68db      	ldr	r3, [r3, #12]
 8001530:	7979      	ldrb	r1, [r7, #5]
 8001532:	79ba      	ldrb	r2, [r7, #6]
 8001534:	0052      	lsls	r2, r2, #1
 8001536:	fa01 f202 	lsl.w	r2, r1, r2
 800153a:	4611      	mov	r1, r2
 800153c:	4a0a      	ldr	r2, [pc, #40]	; (8001568 <MGPIO_vSetPinPullType+0xec>)
 800153e:	430b      	orrs	r3, r1
 8001540:	60d3      	str	r3, [r2, #12]
 8001542:	e000      	b.n	8001546 <MGPIO_vSetPinPullType+0xca>
		default: /**/ break;
 8001544:	bf00      	nop
	}
}
 8001546:	bf00      	nop
 8001548:	370c      	adds	r7, #12
 800154a:	46bd      	mov	sp, r7
 800154c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001550:	4770      	bx	lr
 8001552:	bf00      	nop
 8001554:	40020000 	.word	0x40020000
 8001558:	40020400 	.word	0x40020400
 800155c:	40020800 	.word	0x40020800
 8001560:	40020c00 	.word	0x40020c00
 8001564:	40021000 	.word	0x40021000
 8001568:	40021c00 	.word	0x40021c00

0800156c <MGPIO_vSetPinValueDirect>:
		}
}
/*====================================================   END_FUNCTION   ====================================================*/
/*====================================================   Start_FUNCTION   ====================================================*/
void MGPIO_vSetPinValueDirect(u8 Copy_u8Port , u8 Copy_u8Pin,u8 Copy_u8Mode)
{
 800156c:	b480      	push	{r7}
 800156e:	b083      	sub	sp, #12
 8001570:	af00      	add	r7, sp, #0
 8001572:	4603      	mov	r3, r0
 8001574:	71fb      	strb	r3, [r7, #7]
 8001576:	460b      	mov	r3, r1
 8001578:	71bb      	strb	r3, [r7, #6]
 800157a:	4613      	mov	r3, r2
 800157c:	717b      	strb	r3, [r7, #5]
	if(Copy_u8Mode == SET)
 800157e:	797b      	ldrb	r3, [r7, #5]
 8001580:	2b00      	cmp	r3, #0
 8001582:	d135      	bne.n	80015f0 <MGPIO_vSetPinValueDirect+0x84>
	{
		switch(Copy_u8Port)
 8001584:	79fb      	ldrb	r3, [r7, #7]
 8001586:	2b05      	cmp	r3, #5
 8001588:	d86e      	bhi.n	8001668 <MGPIO_vSetPinValueDirect+0xfc>
 800158a:	a201      	add	r2, pc, #4	; (adr r2, 8001590 <MGPIO_vSetPinValueDirect+0x24>)
 800158c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001590:	080015a9 	.word	0x080015a9
 8001594:	080015b5 	.word	0x080015b5
 8001598:	080015c1 	.word	0x080015c1
 800159c:	080015cd 	.word	0x080015cd
 80015a0:	080015d9 	.word	0x080015d9
 80015a4:	080015e5 	.word	0x080015e5
		{
		case GPIOA :(MGPIOA ->BSRR)= (u32)(1 << (Copy_u8Pin)); break;
 80015a8:	79bb      	ldrb	r3, [r7, #6]
 80015aa:	2201      	movs	r2, #1
 80015ac:	409a      	lsls	r2, r3
 80015ae:	4b34      	ldr	r3, [pc, #208]	; (8001680 <MGPIO_vSetPinValueDirect+0x114>)
 80015b0:	619a      	str	r2, [r3, #24]
 80015b2:	e05e      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
		case GPIOB :(MGPIOB ->BSRR)= (u32)(1 << (Copy_u8Pin)); break;
 80015b4:	79bb      	ldrb	r3, [r7, #6]
 80015b6:	2201      	movs	r2, #1
 80015b8:	409a      	lsls	r2, r3
 80015ba:	4b32      	ldr	r3, [pc, #200]	; (8001684 <MGPIO_vSetPinValueDirect+0x118>)
 80015bc:	619a      	str	r2, [r3, #24]
 80015be:	e058      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
		case GPIOC :(MGPIOC ->BSRR)= (u32)(1 << (Copy_u8Pin)); break;
 80015c0:	79bb      	ldrb	r3, [r7, #6]
 80015c2:	2201      	movs	r2, #1
 80015c4:	409a      	lsls	r2, r3
 80015c6:	4b30      	ldr	r3, [pc, #192]	; (8001688 <MGPIO_vSetPinValueDirect+0x11c>)
 80015c8:	619a      	str	r2, [r3, #24]
 80015ca:	e052      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
		case GPIOD :(MGPIOD ->BSRR)= (u32)(1 << (Copy_u8Pin)); break;
 80015cc:	79bb      	ldrb	r3, [r7, #6]
 80015ce:	2201      	movs	r2, #1
 80015d0:	409a      	lsls	r2, r3
 80015d2:	4b2e      	ldr	r3, [pc, #184]	; (800168c <MGPIO_vSetPinValueDirect+0x120>)
 80015d4:	619a      	str	r2, [r3, #24]
 80015d6:	e04c      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
		case GPIOE :(MGPIOE ->BSRR)= (u32)(1 << (Copy_u8Pin)); break;
 80015d8:	79bb      	ldrb	r3, [r7, #6]
 80015da:	2201      	movs	r2, #1
 80015dc:	409a      	lsls	r2, r3
 80015de:	4b2c      	ldr	r3, [pc, #176]	; (8001690 <MGPIO_vSetPinValueDirect+0x124>)
 80015e0:	619a      	str	r2, [r3, #24]
 80015e2:	e046      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
		case GPIOH :(MGPIOH ->BSRR)= (u32)(1 << (Copy_u8Pin)); break;
 80015e4:	79bb      	ldrb	r3, [r7, #6]
 80015e6:	2201      	movs	r2, #1
 80015e8:	409a      	lsls	r2, r3
 80015ea:	4b2a      	ldr	r3, [pc, #168]	; (8001694 <MGPIO_vSetPinValueDirect+0x128>)
 80015ec:	619a      	str	r2, [r3, #24]
 80015ee:	e040      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
			default: /*  */ break;
		}
	}
	else if(Copy_u8Mode == RESET)
 80015f0:	797b      	ldrb	r3, [r7, #5]
 80015f2:	2b01      	cmp	r3, #1
 80015f4:	d13a      	bne.n	800166c <MGPIO_vSetPinValueDirect+0x100>
	{
		Copy_u8Pin +=16;
 80015f6:	79bb      	ldrb	r3, [r7, #6]
 80015f8:	3310      	adds	r3, #16
 80015fa:	71bb      	strb	r3, [r7, #6]
		switch(Copy_u8Port)
 80015fc:	79fb      	ldrb	r3, [r7, #7]
 80015fe:	2b05      	cmp	r3, #5
 8001600:	d836      	bhi.n	8001670 <MGPIO_vSetPinValueDirect+0x104>
 8001602:	a201      	add	r2, pc, #4	; (adr r2, 8001608 <MGPIO_vSetPinValueDirect+0x9c>)
 8001604:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001608:	08001621 	.word	0x08001621
 800160c:	0800162d 	.word	0x0800162d
 8001610:	08001639 	.word	0x08001639
 8001614:	08001645 	.word	0x08001645
 8001618:	08001651 	.word	0x08001651
 800161c:	0800165d 	.word	0x0800165d
		{
		case GPIOA :(MGPIOA ->BSRR)= (u32)(1 << (Copy_u8Pin)); break;
 8001620:	79bb      	ldrb	r3, [r7, #6]
 8001622:	2201      	movs	r2, #1
 8001624:	409a      	lsls	r2, r3
 8001626:	4b16      	ldr	r3, [pc, #88]	; (8001680 <MGPIO_vSetPinValueDirect+0x114>)
 8001628:	619a      	str	r2, [r3, #24]
 800162a:	e022      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
		case GPIOB :(MGPIOB ->BSRR)= (u32)(1 << (Copy_u8Pin)); break;
 800162c:	79bb      	ldrb	r3, [r7, #6]
 800162e:	2201      	movs	r2, #1
 8001630:	409a      	lsls	r2, r3
 8001632:	4b14      	ldr	r3, [pc, #80]	; (8001684 <MGPIO_vSetPinValueDirect+0x118>)
 8001634:	619a      	str	r2, [r3, #24]
 8001636:	e01c      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
		case GPIOC :(MGPIOC ->BSRR)= (u32)(1 << (Copy_u8Pin)); break;
 8001638:	79bb      	ldrb	r3, [r7, #6]
 800163a:	2201      	movs	r2, #1
 800163c:	409a      	lsls	r2, r3
 800163e:	4b12      	ldr	r3, [pc, #72]	; (8001688 <MGPIO_vSetPinValueDirect+0x11c>)
 8001640:	619a      	str	r2, [r3, #24]
 8001642:	e016      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
		case GPIOD :(MGPIOD ->BSRR)= (u32)(1 << (Copy_u8Pin)); break;
 8001644:	79bb      	ldrb	r3, [r7, #6]
 8001646:	2201      	movs	r2, #1
 8001648:	409a      	lsls	r2, r3
 800164a:	4b10      	ldr	r3, [pc, #64]	; (800168c <MGPIO_vSetPinValueDirect+0x120>)
 800164c:	619a      	str	r2, [r3, #24]
 800164e:	e010      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
		case GPIOE :(MGPIOE ->BSRR)= (u32)(1 << (Copy_u8Pin)); break;
 8001650:	79bb      	ldrb	r3, [r7, #6]
 8001652:	2201      	movs	r2, #1
 8001654:	409a      	lsls	r2, r3
 8001656:	4b0e      	ldr	r3, [pc, #56]	; (8001690 <MGPIO_vSetPinValueDirect+0x124>)
 8001658:	619a      	str	r2, [r3, #24]
 800165a:	e00a      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
		case GPIOH :(MGPIOH ->BSRR)= (u32)(1 << (Copy_u8Pin)); break;
 800165c:	79bb      	ldrb	r3, [r7, #6]
 800165e:	2201      	movs	r2, #1
 8001660:	409a      	lsls	r2, r3
 8001662:	4b0c      	ldr	r3, [pc, #48]	; (8001694 <MGPIO_vSetPinValueDirect+0x128>)
 8001664:	619a      	str	r2, [r3, #24]
 8001666:	e004      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
			default: /*  */ break;
 8001668:	bf00      	nop
 800166a:	e002      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
			default: /*  */ break;
		}
	}
 800166c:	bf00      	nop
 800166e:	e000      	b.n	8001672 <MGPIO_vSetPinValueDirect+0x106>
			default: /*  */ break;
 8001670:	bf00      	nop
}
 8001672:	bf00      	nop
 8001674:	370c      	adds	r7, #12
 8001676:	46bd      	mov	sp, r7
 8001678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800167c:	4770      	bx	lr
 800167e:	bf00      	nop
 8001680:	40020000 	.word	0x40020000
 8001684:	40020400 	.word	0x40020400
 8001688:	40020800 	.word	0x40020800
 800168c:	40020c00 	.word	0x40020c00
 8001690:	40021000 	.word	0x40021000
 8001694:	40021c00 	.word	0x40021c00

08001698 <MNVIC_vEnableINT>:




void MNVIC_vEnableINT(u8 Copy_u8IntNUM)
{
 8001698:	b480      	push	{r7}
 800169a:	b083      	sub	sp, #12
 800169c:	af00      	add	r7, sp, #0
 800169e:	4603      	mov	r3, r0
 80016a0:	71fb      	strb	r3, [r7, #7]

	MNVIC->ISER[ Copy_u8IntNUM / 32 ] = 1 << ( Copy_u8IntNUM % 32 ) ;
 80016a2:	79fb      	ldrb	r3, [r7, #7]
 80016a4:	f003 031f 	and.w	r3, r3, #31
 80016a8:	2201      	movs	r2, #1
 80016aa:	fa02 f103 	lsl.w	r1, r2, r3
 80016ae:	4a06      	ldr	r2, [pc, #24]	; (80016c8 <MNVIC_vEnableINT+0x30>)
 80016b0:	79fb      	ldrb	r3, [r7, #7]
 80016b2:	095b      	lsrs	r3, r3, #5
 80016b4:	b2db      	uxtb	r3, r3
 80016b6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    //     NVIC_ISER_2 = (1U<<Copy_u8IntNUM);
    // }
    // else{
    //     /*ERROR*/
    // }
}
 80016ba:	bf00      	nop
 80016bc:	370c      	adds	r7, #12
 80016be:	46bd      	mov	sp, r7
 80016c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016c4:	4770      	bx	lr
 80016c6:	bf00      	nop
 80016c8:	e000e100 	.word	0xe000e100

080016cc <MNVIC_vSetPendingFlag>:
    // else{
    //     /*ERROR*/
    // }
}

void MNVIC_vSetPendingFlag(u8 Copy_u8IntNUM){
 80016cc:	b480      	push	{r7}
 80016ce:	b083      	sub	sp, #12
 80016d0:	af00      	add	r7, sp, #0
 80016d2:	4603      	mov	r3, r0
 80016d4:	71fb      	strb	r3, [r7, #7]

   	MNVIC->ISPR[ Copy_u8IntNUM / 32 ] = 1 << ( Copy_u8IntNUM % 32 ) ;
 80016d6:	79fb      	ldrb	r3, [r7, #7]
 80016d8:	f003 031f 	and.w	r3, r3, #31
 80016dc:	2201      	movs	r2, #1
 80016de:	fa02 f103 	lsl.w	r1, r2, r3
 80016e2:	4a06      	ldr	r2, [pc, #24]	; (80016fc <MNVIC_vSetPendingFlag+0x30>)
 80016e4:	79fb      	ldrb	r3, [r7, #7]
 80016e6:	095b      	lsrs	r3, r3, #5
 80016e8:	b2db      	uxtb	r3, r3
 80016ea:	3340      	adds	r3, #64	; 0x40
 80016ec:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    //     NVIC_ISPR_2 = (1U<<Copy_u8IntNUM);
    // }
    // else{
    //     /*ERROR*/
    // }
}
 80016f0:	bf00      	nop
 80016f2:	370c      	adds	r7, #12
 80016f4:	46bd      	mov	sp, r7
 80016f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016fa:	4770      	bx	lr
 80016fc:	e000e100 	.word	0xe000e100

08001700 <MRCC_vEnableClock>:
	
*/


void MRCC_vEnableClock(BusName_t BusName , u8 Copy_u8PerNum )
{
 8001700:	b480      	push	{r7}
 8001702:	b083      	sub	sp, #12
 8001704:	af00      	add	r7, sp, #0
 8001706:	4603      	mov	r3, r0
 8001708:	460a      	mov	r2, r1
 800170a:	71fb      	strb	r3, [r7, #7]
 800170c:	4613      	mov	r3, r2
 800170e:	71bb      	strb	r3, [r7, #6]
	
	switch(BusName)
 8001710:	79fb      	ldrb	r3, [r7, #7]
 8001712:	2b03      	cmp	r3, #3
 8001714:	d836      	bhi.n	8001784 <MRCC_vEnableClock+0x84>
 8001716:	a201      	add	r2, pc, #4	; (adr r2, 800171c <MRCC_vEnableClock+0x1c>)
 8001718:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800171c:	0800172d 	.word	0x0800172d
 8001720:	08001743 	.word	0x08001743
 8001724:	08001759 	.word	0x08001759
 8001728:	0800176f 	.word	0x0800176f
	{
		case AHB1_BUS:  SET_BIT(RCC_AHB1ENR,Copy_u8PerNum );         break ;
 800172c:	4b19      	ldr	r3, [pc, #100]	; (8001794 <MRCC_vEnableClock+0x94>)
 800172e:	681b      	ldr	r3, [r3, #0]
 8001730:	79ba      	ldrb	r2, [r7, #6]
 8001732:	2101      	movs	r1, #1
 8001734:	fa01 f202 	lsl.w	r2, r1, r2
 8001738:	4611      	mov	r1, r2
 800173a:	4a16      	ldr	r2, [pc, #88]	; (8001794 <MRCC_vEnableClock+0x94>)
 800173c:	430b      	orrs	r3, r1
 800173e:	6013      	str	r3, [r2, #0]
 8001740:	e021      	b.n	8001786 <MRCC_vEnableClock+0x86>
		case AHB2_BUS:  SET_BIT(RCC_AHB2ENR,Copy_u8PerNum );         break ;
 8001742:	4b15      	ldr	r3, [pc, #84]	; (8001798 <MRCC_vEnableClock+0x98>)
 8001744:	681b      	ldr	r3, [r3, #0]
 8001746:	79ba      	ldrb	r2, [r7, #6]
 8001748:	2101      	movs	r1, #1
 800174a:	fa01 f202 	lsl.w	r2, r1, r2
 800174e:	4611      	mov	r1, r2
 8001750:	4a11      	ldr	r2, [pc, #68]	; (8001798 <MRCC_vEnableClock+0x98>)
 8001752:	430b      	orrs	r3, r1
 8001754:	6013      	str	r3, [r2, #0]
 8001756:	e016      	b.n	8001786 <MRCC_vEnableClock+0x86>
		case APB1_BUS:  SET_BIT(RCC_APB1ENR,Copy_u8PerNum );         break ;
 8001758:	4b10      	ldr	r3, [pc, #64]	; (800179c <MRCC_vEnableClock+0x9c>)
 800175a:	681b      	ldr	r3, [r3, #0]
 800175c:	79ba      	ldrb	r2, [r7, #6]
 800175e:	2101      	movs	r1, #1
 8001760:	fa01 f202 	lsl.w	r2, r1, r2
 8001764:	4611      	mov	r1, r2
 8001766:	4a0d      	ldr	r2, [pc, #52]	; (800179c <MRCC_vEnableClock+0x9c>)
 8001768:	430b      	orrs	r3, r1
 800176a:	6013      	str	r3, [r2, #0]
 800176c:	e00b      	b.n	8001786 <MRCC_vEnableClock+0x86>
		case APB2_BUS:  SET_BIT(RCC_APB2ENR,Copy_u8PerNum );         break ;
 800176e:	4b0c      	ldr	r3, [pc, #48]	; (80017a0 <MRCC_vEnableClock+0xa0>)
 8001770:	681b      	ldr	r3, [r3, #0]
 8001772:	79ba      	ldrb	r2, [r7, #6]
 8001774:	2101      	movs	r1, #1
 8001776:	fa01 f202 	lsl.w	r2, r1, r2
 800177a:	4611      	mov	r1, r2
 800177c:	4a08      	ldr	r2, [pc, #32]	; (80017a0 <MRCC_vEnableClock+0xa0>)
 800177e:	430b      	orrs	r3, r1
 8001780:	6013      	str	r3, [r2, #0]
 8001782:	e000      	b.n	8001786 <MRCC_vEnableClock+0x86>
		default :     /*   ERROR   */          break ;
 8001784:	bf00      	nop
		
	}
	
	
}
 8001786:	bf00      	nop
 8001788:	370c      	adds	r7, #12
 800178a:	46bd      	mov	sp, r7
 800178c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001790:	4770      	bx	lr
 8001792:	bf00      	nop
 8001794:	40023830 	.word	0x40023830
 8001798:	40023834 	.word	0x40023834
 800179c:	40023840 	.word	0x40023840
 80017a0:	40023844 	.word	0x40023844

080017a4 <MRCC_vInitSystemCLK_Systick>:

/*====================================================   END_ FUNCTION   ====================================================*/


void MRCC_vInitSystemCLK_Systick(u8 Copy_u8Dev)
{
 80017a4:	b480      	push	{r7}
 80017a6:	b083      	sub	sp, #12
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	4603      	mov	r3, r0
 80017ac:	71fb      	strb	r3, [r7, #7]
   /* 1- EN HSI */
	SET_BIT(MRCC->CR , 0U);
 80017ae:	4b10      	ldr	r3, [pc, #64]	; (80017f0 <MRCC_vInitSystemCLK_Systick+0x4c>)
 80017b0:	681b      	ldr	r3, [r3, #0]
 80017b2:	4a0f      	ldr	r2, [pc, #60]	; (80017f0 <MRCC_vInitSystemCLK_Systick+0x4c>)
 80017b4:	f043 0301 	orr.w	r3, r3, #1
 80017b8:	6013      	str	r3, [r2, #0]
	/* 2- CLK SYS --> HSI */
	CLR_BIT(MRCC->CFGR, 0U);
 80017ba:	4b0d      	ldr	r3, [pc, #52]	; (80017f0 <MRCC_vInitSystemCLK_Systick+0x4c>)
 80017bc:	689b      	ldr	r3, [r3, #8]
 80017be:	4a0c      	ldr	r2, [pc, #48]	; (80017f0 <MRCC_vInitSystemCLK_Systick+0x4c>)
 80017c0:	f023 0301 	bic.w	r3, r3, #1
 80017c4:	6093      	str	r3, [r2, #8]
	CLR_BIT(MRCC->CFGR, 1U);
 80017c6:	4b0a      	ldr	r3, [pc, #40]	; (80017f0 <MRCC_vInitSystemCLK_Systick+0x4c>)
 80017c8:	689b      	ldr	r3, [r3, #8]
 80017ca:	4a09      	ldr	r2, [pc, #36]	; (80017f0 <MRCC_vInitSystemCLK_Systick+0x4c>)
 80017cc:	f023 0302 	bic.w	r3, r3, #2
 80017d0:	6093      	str	r3, [r2, #8]
	if(Copy_u8Dev == 1)
 80017d2:	79fb      	ldrb	r3, [r7, #7]
 80017d4:	2b01      	cmp	r3, #1
 80017d6:	d105      	bne.n	80017e4 <MRCC_vInitSystemCLK_Systick+0x40>
	{
		/* Div (AHB/2) */
		RCC_CFGR |=(0b1000<<4U);
 80017d8:	4b06      	ldr	r3, [pc, #24]	; (80017f4 <MRCC_vInitSystemCLK_Systick+0x50>)
 80017da:	681b      	ldr	r3, [r3, #0]
 80017dc:	4a05      	ldr	r2, [pc, #20]	; (80017f4 <MRCC_vInitSystemCLK_Systick+0x50>)
 80017de:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80017e2:	6013      	str	r3, [r2, #0]
		
	}
	else{/* - Misra */}
 80017e4:	bf00      	nop
 80017e6:	370c      	adds	r7, #12
 80017e8:	46bd      	mov	sp, r7
 80017ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ee:	4770      	bx	lr
 80017f0:	40023800 	.word	0x40023800
 80017f4:	40023808 	.word	0x40023808

080017f8 <MSTK_voidSetBusyWait>:
/************************************ Start_FUNCTION  ************************************/
/*
	Function Take Count or Ticks So Timer Count Them And you Config ( Tick = Time ) MSec  ---> Make Delay (Synchronous_Fun)
*/
void MSTK_voidSetBusyWait( u32 Copy_u32Ticks)
{
 80017f8:	b480      	push	{r7}
 80017fa:	b083      	sub	sp, #12
 80017fc:	af00      	add	r7, sp, #0
 80017fe:	6078      	str	r0, [r7, #4]
				/* Load ticks to load register */
	MSTK->LOAD = Copy_u32Ticks ;
 8001800:	4a11      	ldr	r2, [pc, #68]	; (8001848 <MSTK_voidSetBusyWait+0x50>)
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	6053      	str	r3, [r2, #4]
	
				/* Start Timer */
	MSTK->CTRL |=(1U<<0);
 8001806:	4b10      	ldr	r3, [pc, #64]	; (8001848 <MSTK_voidSetBusyWait+0x50>)
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	4a0f      	ldr	r2, [pc, #60]	; (8001848 <MSTK_voidSetBusyWait+0x50>)
 800180c:	f043 0301 	orr.w	r3, r3, #1
 8001810:	6013      	str	r3, [r2, #0]
	
				/* Wait till flag is raised */
	
	while( (GET_BIT(MSTK->CTRL,16)) == 0){};
 8001812:	bf00      	nop
 8001814:	4b0c      	ldr	r3, [pc, #48]	; (8001848 <MSTK_voidSetBusyWait+0x50>)
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	0c1b      	lsrs	r3, r3, #16
 800181a:	f003 0301 	and.w	r3, r3, #1
 800181e:	2b00      	cmp	r3, #0
 8001820:	d0f8      	beq.n	8001814 <MSTK_voidSetBusyWait+0x1c>

				/* Stop Timer */
	MSTK->CTRL &=~(1U<<0);
 8001822:	4b09      	ldr	r3, [pc, #36]	; (8001848 <MSTK_voidSetBusyWait+0x50>)
 8001824:	681b      	ldr	r3, [r3, #0]
 8001826:	4a08      	ldr	r2, [pc, #32]	; (8001848 <MSTK_voidSetBusyWait+0x50>)
 8001828:	f023 0301 	bic.w	r3, r3, #1
 800182c:	6013      	str	r3, [r2, #0]
	MSTK -> LOAD = 0;
 800182e:	4b06      	ldr	r3, [pc, #24]	; (8001848 <MSTK_voidSetBusyWait+0x50>)
 8001830:	2200      	movs	r2, #0
 8001832:	605a      	str	r2, [r3, #4]
	MSTK -> VAL  = 0;
 8001834:	4b04      	ldr	r3, [pc, #16]	; (8001848 <MSTK_voidSetBusyWait+0x50>)
 8001836:	2200      	movs	r2, #0
 8001838:	609a      	str	r2, [r3, #8]
	
}
 800183a:	bf00      	nop
 800183c:	370c      	adds	r7, #12
 800183e:	46bd      	mov	sp, r7
 8001840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001844:	4770      	bx	lr
 8001846:	bf00      	nop
 8001848:	e000e010 	.word	0xe000e010

0800184c <SysTick_Handler>:
/*********************************************************** Start_FUNCTION  ***********************************************************/



void SysTick_Handler(void)
{
 800184c:	b580      	push	{r7, lr}
 800184e:	b082      	sub	sp, #8
 8001850:	af00      	add	r7, sp, #0
	u8 Local_u8Temporary;
	
	if (MSTK_u8ModeOfInterval == MSTK_SINGLE_INTERVAL)
 8001852:	4b12      	ldr	r3, [pc, #72]	; (800189c <SysTick_Handler+0x50>)
 8001854:	781b      	ldrb	r3, [r3, #0]
 8001856:	2b00      	cmp	r3, #0
 8001858:	d111      	bne.n	800187e <SysTick_Handler+0x32>
	{
		/* Disable STK Interrupt */
		CLR_BIT(MSTK->CTRL, 1U);
 800185a:	4b11      	ldr	r3, [pc, #68]	; (80018a0 <SysTick_Handler+0x54>)
 800185c:	681b      	ldr	r3, [r3, #0]
 800185e:	4a10      	ldr	r2, [pc, #64]	; (80018a0 <SysTick_Handler+0x54>)
 8001860:	f023 0302 	bic.w	r3, r3, #2
 8001864:	6013      	str	r3, [r2, #0]
	
		/* Stop Timer */
		SET_BIT(MSTK->CTRL, 0U);
 8001866:	4b0e      	ldr	r3, [pc, #56]	; (80018a0 <SysTick_Handler+0x54>)
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	4a0d      	ldr	r2, [pc, #52]	; (80018a0 <SysTick_Handler+0x54>)
 800186c:	f043 0301 	orr.w	r3, r3, #1
 8001870:	6013      	str	r3, [r2, #0]
		MSTK -> LOAD = 0U;
 8001872:	4b0b      	ldr	r3, [pc, #44]	; (80018a0 <SysTick_Handler+0x54>)
 8001874:	2200      	movs	r2, #0
 8001876:	605a      	str	r2, [r3, #4]
		MSTK -> VAL  = 0U;
 8001878:	4b09      	ldr	r3, [pc, #36]	; (80018a0 <SysTick_Handler+0x54>)
 800187a:	2200      	movs	r2, #0
 800187c:	609a      	str	r2, [r3, #8]
	}
	
	/* Callback notification */
	MSTK_CallBack();
 800187e:	4b09      	ldr	r3, [pc, #36]	; (80018a4 <SysTick_Handler+0x58>)
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	4798      	blx	r3
	
	/* Clear interrupt flag */
	Local_u8Temporary = GET_BIT(MSTK->CTRL,16U);
 8001884:	4b06      	ldr	r3, [pc, #24]	; (80018a0 <SysTick_Handler+0x54>)
 8001886:	681b      	ldr	r3, [r3, #0]
 8001888:	0c1b      	lsrs	r3, r3, #16
 800188a:	b2db      	uxtb	r3, r3
 800188c:	f003 0301 	and.w	r3, r3, #1
 8001890:	71fb      	strb	r3, [r7, #7]
}
 8001892:	bf00      	nop
 8001894:	3708      	adds	r7, #8
 8001896:	46bd      	mov	sp, r7
 8001898:	bd80      	pop	{r7, pc}
 800189a:	bf00      	nop
 800189c:	200000c0 	.word	0x200000c0
 80018a0:	e000e010 	.word	0xe000e010
 80018a4:	200000bc 	.word	0x200000bc

080018a8 <SunCalc_u32SunriseTime>:
        * Function Description : Calculates
        *
		***************************************************************/


u32 SunCalc_u32SunriseTime(u32 Copy_u32DayID, sunrise *ptr) {
 80018a8:	b5b0      	push	{r4, r5, r7, lr}
 80018aa:	b088      	sub	sp, #32
 80018ac:	af00      	add	r7, sp, #0
 80018ae:	6078      	str	r0, [r7, #4]
 80018b0:	6039      	str	r1, [r7, #0]
	f32 local_f32SunriseAngle;
	f32 local_f32SunriseHour;
	f32 local_f32Value;
	u32 result;
	local_f32DeclinationAngle = 23.45
			* sin(degree * ((284 + Copy_u32DayID) * ((f32) 360 / 365)));
 80018b2:	687b      	ldr	r3, [r7, #4]
 80018b4:	f503 738e 	add.w	r3, r3, #284	; 0x11c
 80018b8:	ee07 3a90 	vmov	s15, r3
 80018bc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80018c0:	ed9f 7a69 	vldr	s14, [pc, #420]	; 8001a68 <SunCalc_u32SunriseTime+0x1c0>
 80018c4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80018c8:	ee17 0a90 	vmov	r0, s15
 80018cc:	f7fe fde8 	bl	80004a0 <__aeabi_f2d>
 80018d0:	a35f      	add	r3, pc, #380	; (adr r3, 8001a50 <SunCalc_u32SunriseTime+0x1a8>)
 80018d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80018d6:	f7fe fe3b 	bl	8000550 <__aeabi_dmul>
 80018da:	4602      	mov	r2, r0
 80018dc:	460b      	mov	r3, r1
 80018de:	ec43 2b17 	vmov	d7, r2, r3
 80018e2:	eeb0 0a47 	vmov.f32	s0, s14
 80018e6:	eef0 0a67 	vmov.f32	s1, s15
 80018ea:	f000 fc11 	bl	8002110 <sin>
 80018ee:	ec51 0b10 	vmov	r0, r1, d0
 80018f2:	a359      	add	r3, pc, #356	; (adr r3, 8001a58 <SunCalc_u32SunriseTime+0x1b0>)
 80018f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80018f8:	f7fe fe2a 	bl	8000550 <__aeabi_dmul>
 80018fc:	4602      	mov	r2, r0
 80018fe:	460b      	mov	r3, r1
	local_f32DeclinationAngle = 23.45
 8001900:	4610      	mov	r0, r2
 8001902:	4619      	mov	r1, r3
 8001904:	f7ff f8fc 	bl	8000b00 <__aeabi_d2f>
 8001908:	4603      	mov	r3, r0
 800190a:	61fb      	str	r3, [r7, #28]
	local_f32SunriseAngle = (-acos(
			-tan(degree * LATITUDE) * tan(degree * local_f32DeclinationAngle))
 800190c:	69f8      	ldr	r0, [r7, #28]
 800190e:	f7fe fdc7 	bl	80004a0 <__aeabi_f2d>
 8001912:	a34f      	add	r3, pc, #316	; (adr r3, 8001a50 <SunCalc_u32SunriseTime+0x1a8>)
 8001914:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001918:	f7fe fe1a 	bl	8000550 <__aeabi_dmul>
 800191c:	4602      	mov	r2, r0
 800191e:	460b      	mov	r3, r1
 8001920:	ec43 2b17 	vmov	d7, r2, r3
 8001924:	eeb0 0a47 	vmov.f32	s0, s14
 8001928:	eef0 0a67 	vmov.f32	s1, s15
 800192c:	f000 fc48 	bl	80021c0 <tan>
 8001930:	ec51 0b10 	vmov	r0, r1, d0
	local_f32SunriseAngle = (-acos(
 8001934:	a34a      	add	r3, pc, #296	; (adr r3, 8001a60 <SunCalc_u32SunriseTime+0x1b8>)
 8001936:	e9d3 2300 	ldrd	r2, r3, [r3]
 800193a:	f7fe fe09 	bl	8000550 <__aeabi_dmul>
 800193e:	4602      	mov	r2, r0
 8001940:	460b      	mov	r3, r1
 8001942:	ec43 2b17 	vmov	d7, r2, r3
 8001946:	eeb0 0a47 	vmov.f32	s0, s14
 800194a:	eef0 0a67 	vmov.f32	s1, s15
 800194e:	f000 fc6b 	bl	8002228 <acos>
 8001952:	ec53 2b10 	vmov	r2, r3, d0
 8001956:	4614      	mov	r4, r2
 8001958:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
			/ (degree));
 800195c:	a33c      	add	r3, pc, #240	; (adr r3, 8001a50 <SunCalc_u32SunriseTime+0x1a8>)
 800195e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001962:	4620      	mov	r0, r4
 8001964:	4629      	mov	r1, r5
 8001966:	f7fe ff1d 	bl	80007a4 <__aeabi_ddiv>
 800196a:	4602      	mov	r2, r0
 800196c:	460b      	mov	r3, r1
	local_f32SunriseAngle = (-acos(
 800196e:	4610      	mov	r0, r2
 8001970:	4619      	mov	r1, r3
 8001972:	f7ff f8c5 	bl	8000b00 <__aeabi_d2f>
 8001976:	4603      	mov	r3, r0
 8001978:	61bb      	str	r3, [r7, #24]
	local_f32SunriseHour = (12 + ((f32) local_f32SunriseAngle / 15));
 800197a:	ed97 7a06 	vldr	s14, [r7, #24]
 800197e:	eef2 6a0e 	vmov.f32	s13, #46	; 0x41700000  15.0
 8001982:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001986:	eeb2 7a08 	vmov.f32	s14, #40	; 0x41400000  12.0
 800198a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800198e:	edc7 7a05 	vstr	s15, [r7, #20]

	local_f32Value = local_f32SunriseHour; //5.3
 8001992:	697b      	ldr	r3, [r7, #20]
 8001994:	613b      	str	r3, [r7, #16]
	ptr->Hour = (u32) local_f32Value; //5
 8001996:	edd7 7a04 	vldr	s15, [r7, #16]
 800199a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800199e:	ee17 2a90 	vmov	r2, s15
 80019a2:	683b      	ldr	r3, [r7, #0]
 80019a4:	601a      	str	r2, [r3, #0]
	local_f32Value -= (f32) ptr->Hour; //0.3
 80019a6:	683b      	ldr	r3, [r7, #0]
 80019a8:	681b      	ldr	r3, [r3, #0]
 80019aa:	ee07 3a90 	vmov	s15, r3
 80019ae:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80019b2:	ed97 7a04 	vldr	s14, [r7, #16]
 80019b6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80019ba:	edc7 7a04 	vstr	s15, [r7, #16]
	local_f32Value *= 60; //0.3*60
 80019be:	edd7 7a04 	vldr	s15, [r7, #16]
 80019c2:	ed9f 7a2a 	vldr	s14, [pc, #168]	; 8001a6c <SunCalc_u32SunriseTime+0x1c4>
 80019c6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80019ca:	edc7 7a04 	vstr	s15, [r7, #16]
	ptr->Min = (u32) local_f32Value;
 80019ce:	edd7 7a04 	vldr	s15, [r7, #16]
 80019d2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80019d6:	ee17 2a90 	vmov	r2, s15
 80019da:	683b      	ldr	r3, [r7, #0]
 80019dc:	605a      	str	r2, [r3, #4]
	local_f32Value -= (f32) ptr->Min;
 80019de:	683b      	ldr	r3, [r7, #0]
 80019e0:	685b      	ldr	r3, [r3, #4]
 80019e2:	ee07 3a90 	vmov	s15, r3
 80019e6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80019ea:	ed97 7a04 	vldr	s14, [r7, #16]
 80019ee:	ee77 7a67 	vsub.f32	s15, s14, s15
 80019f2:	edc7 7a04 	vstr	s15, [r7, #16]
	local_f32Value *= 60;
 80019f6:	edd7 7a04 	vldr	s15, [r7, #16]
 80019fa:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8001a6c <SunCalc_u32SunriseTime+0x1c4>
 80019fe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001a02:	edc7 7a04 	vstr	s15, [r7, #16]
	ptr->Sec = (u32) local_f32Value;
 8001a06:	edd7 7a04 	vldr	s15, [r7, #16]
 8001a0a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001a0e:	ee17 2a90 	vmov	r2, s15
 8001a12:	683b      	ldr	r3, [r7, #0]
 8001a14:	609a      	str	r2, [r3, #8]

	result = (ptr->Hour) * 60 * 60 + (ptr->Min) * 60 + ptr->Sec;
 8001a16:	683b      	ldr	r3, [r7, #0]
 8001a18:	681b      	ldr	r3, [r3, #0]
 8001a1a:	f44f 6261 	mov.w	r2, #3600	; 0xe10
 8001a1e:	fb02 f103 	mul.w	r1, r2, r3
 8001a22:	683b      	ldr	r3, [r7, #0]
 8001a24:	685a      	ldr	r2, [r3, #4]
 8001a26:	4613      	mov	r3, r2
 8001a28:	011b      	lsls	r3, r3, #4
 8001a2a:	1a9b      	subs	r3, r3, r2
 8001a2c:	009b      	lsls	r3, r3, #2
 8001a2e:	18ca      	adds	r2, r1, r3
 8001a30:	683b      	ldr	r3, [r7, #0]
 8001a32:	689b      	ldr	r3, [r3, #8]
 8001a34:	4413      	add	r3, r2
 8001a36:	60fb      	str	r3, [r7, #12]
	return result * tickspersec;
 8001a38:	68fa      	ldr	r2, [r7, #12]
 8001a3a:	4613      	mov	r3, r2
 8001a3c:	015b      	lsls	r3, r3, #5
 8001a3e:	1a9b      	subs	r3, r3, r2
 8001a40:	009b      	lsls	r3, r3, #2
 8001a42:	4413      	add	r3, r2
}
 8001a44:	4618      	mov	r0, r3
 8001a46:	3720      	adds	r7, #32
 8001a48:	46bd      	mov	sp, r7
 8001a4a:	bdb0      	pop	{r4, r5, r7, pc}
 8001a4c:	f3af 8000 	nop.w
 8001a50:	a2529d39 	.word	0xa2529d39
 8001a54:	3f91df46 	.word	0x3f91df46
 8001a58:	33333333 	.word	0x33333333
 8001a5c:	40377333 	.word	0x40377333
 8001a60:	17bd26d8 	.word	0x17bd26d8
 8001a64:	bfe2821f 	.word	0xbfe2821f
 8001a68:	3f7c7e3f 	.word	0x3f7c7e3f
 8001a6c:	42700000 	.word	0x42700000

08001a70 <SunCalc_u32SunsetTime>:

u32 SunCalc_u32SunsetTime(u32 Copy_u32DayID, sunset *ptr) {
 8001a70:	b580      	push	{r7, lr}
 8001a72:	b088      	sub	sp, #32
 8001a74:	af00      	add	r7, sp, #0
 8001a76:	6078      	str	r0, [r7, #4]
 8001a78:	6039      	str	r1, [r7, #0]
	f32 local_f32SunsetHour;
	f32 local_f32Value;
	u32 result;

	local_f32DeclinationAngle = 23.45
			* sin(degree * ((284 + Copy_u32DayID) * ((f32) 360 / 365)));
 8001a7a:	687b      	ldr	r3, [r7, #4]
 8001a7c:	f503 738e 	add.w	r3, r3, #284	; 0x11c
 8001a80:	ee07 3a90 	vmov	s15, r3
 8001a84:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001a88:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8001c28 <SunCalc_u32SunsetTime+0x1b8>
 8001a8c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001a90:	ee17 0a90 	vmov	r0, s15
 8001a94:	f7fe fd04 	bl	80004a0 <__aeabi_f2d>
 8001a98:	a35d      	add	r3, pc, #372	; (adr r3, 8001c10 <SunCalc_u32SunsetTime+0x1a0>)
 8001a9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a9e:	f7fe fd57 	bl	8000550 <__aeabi_dmul>
 8001aa2:	4602      	mov	r2, r0
 8001aa4:	460b      	mov	r3, r1
 8001aa6:	ec43 2b17 	vmov	d7, r2, r3
 8001aaa:	eeb0 0a47 	vmov.f32	s0, s14
 8001aae:	eef0 0a67 	vmov.f32	s1, s15
 8001ab2:	f000 fb2d 	bl	8002110 <sin>
 8001ab6:	ec51 0b10 	vmov	r0, r1, d0
 8001aba:	a357      	add	r3, pc, #348	; (adr r3, 8001c18 <SunCalc_u32SunsetTime+0x1a8>)
 8001abc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ac0:	f7fe fd46 	bl	8000550 <__aeabi_dmul>
 8001ac4:	4602      	mov	r2, r0
 8001ac6:	460b      	mov	r3, r1
	local_f32DeclinationAngle = 23.45
 8001ac8:	4610      	mov	r0, r2
 8001aca:	4619      	mov	r1, r3
 8001acc:	f7ff f818 	bl	8000b00 <__aeabi_d2f>
 8001ad0:	4603      	mov	r3, r0
 8001ad2:	61fb      	str	r3, [r7, #28]
	local_f32SunsetAngle = (acos(
			-tan(degree * LATITUDE) * tan(degree * local_f32DeclinationAngle))
 8001ad4:	69f8      	ldr	r0, [r7, #28]
 8001ad6:	f7fe fce3 	bl	80004a0 <__aeabi_f2d>
 8001ada:	a34d      	add	r3, pc, #308	; (adr r3, 8001c10 <SunCalc_u32SunsetTime+0x1a0>)
 8001adc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ae0:	f7fe fd36 	bl	8000550 <__aeabi_dmul>
 8001ae4:	4602      	mov	r2, r0
 8001ae6:	460b      	mov	r3, r1
 8001ae8:	ec43 2b17 	vmov	d7, r2, r3
 8001aec:	eeb0 0a47 	vmov.f32	s0, s14
 8001af0:	eef0 0a67 	vmov.f32	s1, s15
 8001af4:	f000 fb64 	bl	80021c0 <tan>
 8001af8:	ec51 0b10 	vmov	r0, r1, d0
	local_f32SunsetAngle = (acos(
 8001afc:	a348      	add	r3, pc, #288	; (adr r3, 8001c20 <SunCalc_u32SunsetTime+0x1b0>)
 8001afe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b02:	f7fe fd25 	bl	8000550 <__aeabi_dmul>
 8001b06:	4602      	mov	r2, r0
 8001b08:	460b      	mov	r3, r1
 8001b0a:	ec43 2b17 	vmov	d7, r2, r3
 8001b0e:	eeb0 0a47 	vmov.f32	s0, s14
 8001b12:	eef0 0a67 	vmov.f32	s1, s15
 8001b16:	f000 fb87 	bl	8002228 <acos>
 8001b1a:	ec51 0b10 	vmov	r0, r1, d0
			/ (degree));
 8001b1e:	a33c      	add	r3, pc, #240	; (adr r3, 8001c10 <SunCalc_u32SunsetTime+0x1a0>)
 8001b20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b24:	f7fe fe3e 	bl	80007a4 <__aeabi_ddiv>
 8001b28:	4602      	mov	r2, r0
 8001b2a:	460b      	mov	r3, r1
	local_f32SunsetAngle = (acos(
 8001b2c:	4610      	mov	r0, r2
 8001b2e:	4619      	mov	r1, r3
 8001b30:	f7fe ffe6 	bl	8000b00 <__aeabi_d2f>
 8001b34:	4603      	mov	r3, r0
 8001b36:	61bb      	str	r3, [r7, #24]
	local_f32SunsetHour = (12 + ((f32) local_f32SunsetAngle / 15));
 8001b38:	ed97 7a06 	vldr	s14, [r7, #24]
 8001b3c:	eef2 6a0e 	vmov.f32	s13, #46	; 0x41700000  15.0
 8001b40:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001b44:	eeb2 7a08 	vmov.f32	s14, #40	; 0x41400000  12.0
 8001b48:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001b4c:	edc7 7a05 	vstr	s15, [r7, #20]

	local_f32Value = local_f32SunsetHour;
 8001b50:	697b      	ldr	r3, [r7, #20]
 8001b52:	613b      	str	r3, [r7, #16]
	ptr->Hour = (u32) local_f32Value;
 8001b54:	edd7 7a04 	vldr	s15, [r7, #16]
 8001b58:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001b5c:	ee17 2a90 	vmov	r2, s15
 8001b60:	683b      	ldr	r3, [r7, #0]
 8001b62:	601a      	str	r2, [r3, #0]
	local_f32Value -= (f32) ptr->Hour;
 8001b64:	683b      	ldr	r3, [r7, #0]
 8001b66:	681b      	ldr	r3, [r3, #0]
 8001b68:	ee07 3a90 	vmov	s15, r3
 8001b6c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001b70:	ed97 7a04 	vldr	s14, [r7, #16]
 8001b74:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001b78:	edc7 7a04 	vstr	s15, [r7, #16]
	local_f32Value *= 60;
 8001b7c:	edd7 7a04 	vldr	s15, [r7, #16]
 8001b80:	ed9f 7a2a 	vldr	s14, [pc, #168]	; 8001c2c <SunCalc_u32SunsetTime+0x1bc>
 8001b84:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001b88:	edc7 7a04 	vstr	s15, [r7, #16]
	ptr->Min = (u32) local_f32Value;
 8001b8c:	edd7 7a04 	vldr	s15, [r7, #16]
 8001b90:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001b94:	ee17 2a90 	vmov	r2, s15
 8001b98:	683b      	ldr	r3, [r7, #0]
 8001b9a:	605a      	str	r2, [r3, #4]
	local_f32Value -= (f32) ptr->Min;
 8001b9c:	683b      	ldr	r3, [r7, #0]
 8001b9e:	685b      	ldr	r3, [r3, #4]
 8001ba0:	ee07 3a90 	vmov	s15, r3
 8001ba4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001ba8:	ed97 7a04 	vldr	s14, [r7, #16]
 8001bac:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001bb0:	edc7 7a04 	vstr	s15, [r7, #16]
	local_f32Value *= 60;
 8001bb4:	edd7 7a04 	vldr	s15, [r7, #16]
 8001bb8:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8001c2c <SunCalc_u32SunsetTime+0x1bc>
 8001bbc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001bc0:	edc7 7a04 	vstr	s15, [r7, #16]
	ptr->Sec = (u32) local_f32Value;
 8001bc4:	edd7 7a04 	vldr	s15, [r7, #16]
 8001bc8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001bcc:	ee17 2a90 	vmov	r2, s15
 8001bd0:	683b      	ldr	r3, [r7, #0]
 8001bd2:	609a      	str	r2, [r3, #8]

	result = (ptr->Hour) * 60 * 60 + (ptr->Min) * 60 + ptr->Sec;
 8001bd4:	683b      	ldr	r3, [r7, #0]
 8001bd6:	681b      	ldr	r3, [r3, #0]
 8001bd8:	f44f 6261 	mov.w	r2, #3600	; 0xe10
 8001bdc:	fb02 f103 	mul.w	r1, r2, r3
 8001be0:	683b      	ldr	r3, [r7, #0]
 8001be2:	685a      	ldr	r2, [r3, #4]
 8001be4:	4613      	mov	r3, r2
 8001be6:	011b      	lsls	r3, r3, #4
 8001be8:	1a9b      	subs	r3, r3, r2
 8001bea:	009b      	lsls	r3, r3, #2
 8001bec:	18ca      	adds	r2, r1, r3
 8001bee:	683b      	ldr	r3, [r7, #0]
 8001bf0:	689b      	ldr	r3, [r3, #8]
 8001bf2:	4413      	add	r3, r2
 8001bf4:	60fb      	str	r3, [r7, #12]
	return result * tickspersec;
 8001bf6:	68fa      	ldr	r2, [r7, #12]
 8001bf8:	4613      	mov	r3, r2
 8001bfa:	015b      	lsls	r3, r3, #5
 8001bfc:	1a9b      	subs	r3, r3, r2
 8001bfe:	009b      	lsls	r3, r3, #2
 8001c00:	4413      	add	r3, r2
}
 8001c02:	4618      	mov	r0, r3
 8001c04:	3720      	adds	r7, #32
 8001c06:	46bd      	mov	sp, r7
 8001c08:	bd80      	pop	{r7, pc}
 8001c0a:	bf00      	nop
 8001c0c:	f3af 8000 	nop.w
 8001c10:	a2529d39 	.word	0xa2529d39
 8001c14:	3f91df46 	.word	0x3f91df46
 8001c18:	33333333 	.word	0x33333333
 8001c1c:	40377333 	.word	0x40377333
 8001c20:	17bd26d8 	.word	0x17bd26d8
 8001c24:	bfe2821f 	.word	0xbfe2821f
 8001c28:	3f7c7e3f 	.word	0x3f7c7e3f
 8001c2c:	42700000 	.word	0x42700000

08001c30 <TIM2_vInit>:

static void (*TIM2_CallBack)(void); //INT ID 28
static void (*TIM3_CallBack)(void); //INT ID 29
static void (*TIM5_CallBack)(void); //INT ID 50
	/*	Timer Intialization		*/
void TIM2_vInit(void) {
 8001c30:	b480      	push	{r7}
 8001c32:	af00      	add	r7, sp, #0
	CLR_BIT(MTIM2->CR1, 0);// Disable Timer2
 8001c34:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c38:	681b      	ldr	r3, [r3, #0]
 8001c3a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c3e:	f023 0301 	bic.w	r3, r3, #1
 8001c42:	6013      	str	r3, [r2, #0]
	CLR_BIT(MTIM2->CR1, 4);//direction up count
 8001c44:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c48:	681b      	ldr	r3, [r3, #0]
 8001c4a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c4e:	f023 0310 	bic.w	r3, r3, #16
 8001c52:	6013      	str	r3, [r2, #0]
	SET_BIT(MTIM2->CR1, 7);//Auto-reload
 8001c54:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c58:	681b      	ldr	r3, [r3, #0]
 8001c5a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c5e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001c62:	6013      	str	r3, [r2, #0]
	SET_BIT(MTIM2->EGR, 0);//init after overflow
 8001c64:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c68:	695b      	ldr	r3, [r3, #20]
 8001c6a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c6e:	f043 0301 	orr.w	r3, r3, #1
 8001c72:	6153      	str	r3, [r2, #20]
	SET_BIT(MTIM2->DIER, 0);
 8001c74:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c78:	68db      	ldr	r3, [r3, #12]
 8001c7a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c7e:	f043 0301 	orr.w	r3, r3, #1
 8001c82:	60d3      	str	r3, [r2, #12]
	MTIM2->PSC= PRESCALAR;
 8001c84:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c88:	f44f 427a 	mov.w	r2, #64000	; 0xfa00
 8001c8c:	629a      	str	r2, [r3, #40]	; 0x28
	SET_BIT(MTIM2->CR1, 0);
 8001c8e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c98:	f043 0301 	orr.w	r3, r3, #1
 8001c9c:	6013      	str	r3, [r2, #0]
}
 8001c9e:	bf00      	nop
 8001ca0:	46bd      	mov	sp, r7
 8001ca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ca6:	4770      	bx	lr

08001ca8 <TIM3_vInit>:

void TIM3_vInit(void) {
 8001ca8:	b480      	push	{r7}
 8001caa:	af00      	add	r7, sp, #0
	CLR_BIT(MTIM3->CR1, 0);// Disable Timer2
 8001cac:	4b16      	ldr	r3, [pc, #88]	; (8001d08 <TIM3_vInit+0x60>)
 8001cae:	681b      	ldr	r3, [r3, #0]
 8001cb0:	4a15      	ldr	r2, [pc, #84]	; (8001d08 <TIM3_vInit+0x60>)
 8001cb2:	f023 0301 	bic.w	r3, r3, #1
 8001cb6:	6013      	str	r3, [r2, #0]
	CLR_BIT(MTIM3->CR1, 4);//direction up count
 8001cb8:	4b13      	ldr	r3, [pc, #76]	; (8001d08 <TIM3_vInit+0x60>)
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	4a12      	ldr	r2, [pc, #72]	; (8001d08 <TIM3_vInit+0x60>)
 8001cbe:	f023 0310 	bic.w	r3, r3, #16
 8001cc2:	6013      	str	r3, [r2, #0]
	SET_BIT(MTIM3->CR1, 7);//Auto-reload
 8001cc4:	4b10      	ldr	r3, [pc, #64]	; (8001d08 <TIM3_vInit+0x60>)
 8001cc6:	681b      	ldr	r3, [r3, #0]
 8001cc8:	4a0f      	ldr	r2, [pc, #60]	; (8001d08 <TIM3_vInit+0x60>)
 8001cca:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001cce:	6013      	str	r3, [r2, #0]
	SET_BIT(MTIM3->EGR, 0);//init after overflow
 8001cd0:	4b0d      	ldr	r3, [pc, #52]	; (8001d08 <TIM3_vInit+0x60>)
 8001cd2:	695b      	ldr	r3, [r3, #20]
 8001cd4:	4a0c      	ldr	r2, [pc, #48]	; (8001d08 <TIM3_vInit+0x60>)
 8001cd6:	f043 0301 	orr.w	r3, r3, #1
 8001cda:	6153      	str	r3, [r2, #20]
	SET_BIT(MTIM3->DIER, 0);
 8001cdc:	4b0a      	ldr	r3, [pc, #40]	; (8001d08 <TIM3_vInit+0x60>)
 8001cde:	68db      	ldr	r3, [r3, #12]
 8001ce0:	4a09      	ldr	r2, [pc, #36]	; (8001d08 <TIM3_vInit+0x60>)
 8001ce2:	f043 0301 	orr.w	r3, r3, #1
 8001ce6:	60d3      	str	r3, [r2, #12]
	MTIM3->PSC= PRESCALAR;
 8001ce8:	4b07      	ldr	r3, [pc, #28]	; (8001d08 <TIM3_vInit+0x60>)
 8001cea:	f44f 427a 	mov.w	r2, #64000	; 0xfa00
 8001cee:	629a      	str	r2, [r3, #40]	; 0x28
	SET_BIT(MTIM3->CR1, 0);
 8001cf0:	4b05      	ldr	r3, [pc, #20]	; (8001d08 <TIM3_vInit+0x60>)
 8001cf2:	681b      	ldr	r3, [r3, #0]
 8001cf4:	4a04      	ldr	r2, [pc, #16]	; (8001d08 <TIM3_vInit+0x60>)
 8001cf6:	f043 0301 	orr.w	r3, r3, #1
 8001cfa:	6013      	str	r3, [r2, #0]
}
 8001cfc:	bf00      	nop
 8001cfe:	46bd      	mov	sp, r7
 8001d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d04:	4770      	bx	lr
 8001d06:	bf00      	nop
 8001d08:	40000400 	.word	0x40000400

08001d0c <TIM5_vInit>:

void TIM5_vInit(void) {
 8001d0c:	b480      	push	{r7}
 8001d0e:	af00      	add	r7, sp, #0
	CLR_BIT(MTIM5->CR1, 0);// Disable Timer2
 8001d10:	4b16      	ldr	r3, [pc, #88]	; (8001d6c <TIM5_vInit+0x60>)
 8001d12:	681b      	ldr	r3, [r3, #0]
 8001d14:	4a15      	ldr	r2, [pc, #84]	; (8001d6c <TIM5_vInit+0x60>)
 8001d16:	f023 0301 	bic.w	r3, r3, #1
 8001d1a:	6013      	str	r3, [r2, #0]
	CLR_BIT(MTIM5->CR1, 4);//direction up count
 8001d1c:	4b13      	ldr	r3, [pc, #76]	; (8001d6c <TIM5_vInit+0x60>)
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	4a12      	ldr	r2, [pc, #72]	; (8001d6c <TIM5_vInit+0x60>)
 8001d22:	f023 0310 	bic.w	r3, r3, #16
 8001d26:	6013      	str	r3, [r2, #0]
	SET_BIT(MTIM5->CR1, 7);//Auto-reload
 8001d28:	4b10      	ldr	r3, [pc, #64]	; (8001d6c <TIM5_vInit+0x60>)
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	4a0f      	ldr	r2, [pc, #60]	; (8001d6c <TIM5_vInit+0x60>)
 8001d2e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001d32:	6013      	str	r3, [r2, #0]
	SET_BIT(MTIM5->EGR, 0);//init after overflow
 8001d34:	4b0d      	ldr	r3, [pc, #52]	; (8001d6c <TIM5_vInit+0x60>)
 8001d36:	695b      	ldr	r3, [r3, #20]
 8001d38:	4a0c      	ldr	r2, [pc, #48]	; (8001d6c <TIM5_vInit+0x60>)
 8001d3a:	f043 0301 	orr.w	r3, r3, #1
 8001d3e:	6153      	str	r3, [r2, #20]
	SET_BIT(MTIM5->DIER, 0);
 8001d40:	4b0a      	ldr	r3, [pc, #40]	; (8001d6c <TIM5_vInit+0x60>)
 8001d42:	68db      	ldr	r3, [r3, #12]
 8001d44:	4a09      	ldr	r2, [pc, #36]	; (8001d6c <TIM5_vInit+0x60>)
 8001d46:	f043 0301 	orr.w	r3, r3, #1
 8001d4a:	60d3      	str	r3, [r2, #12]
	MTIM5->PSC= PRESCALAR;
 8001d4c:	4b07      	ldr	r3, [pc, #28]	; (8001d6c <TIM5_vInit+0x60>)
 8001d4e:	f44f 427a 	mov.w	r2, #64000	; 0xfa00
 8001d52:	629a      	str	r2, [r3, #40]	; 0x28
	SET_BIT(MTIM5->CR1, 0);
 8001d54:	4b05      	ldr	r3, [pc, #20]	; (8001d6c <TIM5_vInit+0x60>)
 8001d56:	681b      	ldr	r3, [r3, #0]
 8001d58:	4a04      	ldr	r2, [pc, #16]	; (8001d6c <TIM5_vInit+0x60>)
 8001d5a:	f043 0301 	orr.w	r3, r3, #1
 8001d5e:	6013      	str	r3, [r2, #0]
}
 8001d60:	bf00      	nop
 8001d62:	46bd      	mov	sp, r7
 8001d64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d68:	4770      	bx	lr
 8001d6a:	bf00      	nop
 8001d6c:	40000c00 	.word	0x40000c00

08001d70 <TIM2_vEnableCount>:

	/*	 Timer Enable 	*/
void TIM2_vEnableCount(u32 copy_u32ourARR) {
 8001d70:	b480      	push	{r7}
 8001d72:	b083      	sub	sp, #12
 8001d74:	af00      	add	r7, sp, #0
 8001d76:	6078      	str	r0, [r7, #4]
	MTIM2->ARR= copy_u32ourARR;
 8001d78:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001d7c:	687b      	ldr	r3, [r7, #4]
 8001d7e:	62d3      	str	r3, [r2, #44]	; 0x2c


}
 8001d80:	bf00      	nop
 8001d82:	370c      	adds	r7, #12
 8001d84:	46bd      	mov	sp, r7
 8001d86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d8a:	4770      	bx	lr

08001d8c <TIM5_vEnableCount>:
	MTIM3->ARR= copy_u32ourARR;


}

void TIM5_vEnableCount(u32 copy_u32ourARR) {
 8001d8c:	b480      	push	{r7}
 8001d8e:	b083      	sub	sp, #12
 8001d90:	af00      	add	r7, sp, #0
 8001d92:	6078      	str	r0, [r7, #4]
	MTIM5->ARR= copy_u32ourARR;
 8001d94:	4a04      	ldr	r2, [pc, #16]	; (8001da8 <TIM5_vEnableCount+0x1c>)
 8001d96:	687b      	ldr	r3, [r7, #4]
 8001d98:	62d3      	str	r3, [r2, #44]	; 0x2c


}
 8001d9a:	bf00      	nop
 8001d9c:	370c      	adds	r7, #12
 8001d9e:	46bd      	mov	sp, r7
 8001da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001da4:	4770      	bx	lr
 8001da6:	bf00      	nop
 8001da8:	40000c00 	.word	0x40000c00

08001dac <TIM2_vSetCallBack>:
}




void TIM2_vSetCallBack(void (*ptr)(void)) {
 8001dac:	b480      	push	{r7}
 8001dae:	b083      	sub	sp, #12
 8001db0:	af00      	add	r7, sp, #0
 8001db2:	6078      	str	r0, [r7, #4]
	TIM2_CallBack = ptr;
 8001db4:	4a04      	ldr	r2, [pc, #16]	; (8001dc8 <TIM2_vSetCallBack+0x1c>)
 8001db6:	687b      	ldr	r3, [r7, #4]
 8001db8:	6013      	str	r3, [r2, #0]
}
 8001dba:	bf00      	nop
 8001dbc:	370c      	adds	r7, #12
 8001dbe:	46bd      	mov	sp, r7
 8001dc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dc4:	4770      	bx	lr
 8001dc6:	bf00      	nop
 8001dc8:	200000c4 	.word	0x200000c4

08001dcc <TIM3_vSetCallBack>:
void TIM3_vSetCallBack(void (*ptr)(void)) {
 8001dcc:	b480      	push	{r7}
 8001dce:	b083      	sub	sp, #12
 8001dd0:	af00      	add	r7, sp, #0
 8001dd2:	6078      	str	r0, [r7, #4]
	TIM3_CallBack = ptr;
 8001dd4:	4a04      	ldr	r2, [pc, #16]	; (8001de8 <TIM3_vSetCallBack+0x1c>)
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	6013      	str	r3, [r2, #0]
}
 8001dda:	bf00      	nop
 8001ddc:	370c      	adds	r7, #12
 8001dde:	46bd      	mov	sp, r7
 8001de0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001de4:	4770      	bx	lr
 8001de6:	bf00      	nop
 8001de8:	200000c8 	.word	0x200000c8

08001dec <TIM5_vSetCallBack>:
void TIM5_vSetCallBack(void (*ptr)(void)) {
 8001dec:	b480      	push	{r7}
 8001dee:	b083      	sub	sp, #12
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	6078      	str	r0, [r7, #4]
	TIM5_CallBack = ptr;
 8001df4:	4a04      	ldr	r2, [pc, #16]	; (8001e08 <TIM5_vSetCallBack+0x1c>)
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	6013      	str	r3, [r2, #0]
}
 8001dfa:	bf00      	nop
 8001dfc:	370c      	adds	r7, #12
 8001dfe:	46bd      	mov	sp, r7
 8001e00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e04:	4770      	bx	lr
 8001e06:	bf00      	nop
 8001e08:	200000cc 	.word	0x200000cc

08001e0c <TIM2_IRQHandler>:
	/*	Time handler 	*/
 void TIM2_IRQHandler(void) {			// this func count the day
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	af00      	add	r7, sp, #0
	TIM2_CallBack();
 8001e10:	4b06      	ldr	r3, [pc, #24]	; (8001e2c <TIM2_IRQHandler+0x20>)
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	4798      	blx	r3

	CLR_BIT(MTIM2->SR, 0);
 8001e16:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001e1a:	691b      	ldr	r3, [r3, #16]
 8001e1c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001e20:	f023 0301 	bic.w	r3, r3, #1
 8001e24:	6113      	str	r3, [r2, #16]
}
 8001e26:	bf00      	nop
 8001e28:	bd80      	pop	{r7, pc}
 8001e2a:	bf00      	nop
 8001e2c:	200000c4 	.word	0x200000c4

08001e30 <TIM3_IRQHandler>:

 void TIM3_IRQHandler(void) {			//	This func count step
 8001e30:	b580      	push	{r7, lr}
 8001e32:	af00      	add	r7, sp, #0
	TIM3_CallBack();
 8001e34:	4b05      	ldr	r3, [pc, #20]	; (8001e4c <TIM3_IRQHandler+0x1c>)
 8001e36:	681b      	ldr	r3, [r3, #0]
 8001e38:	4798      	blx	r3

	CLR_BIT(MTIM3->SR, 0);
 8001e3a:	4b05      	ldr	r3, [pc, #20]	; (8001e50 <TIM3_IRQHandler+0x20>)
 8001e3c:	691b      	ldr	r3, [r3, #16]
 8001e3e:	4a04      	ldr	r2, [pc, #16]	; (8001e50 <TIM3_IRQHandler+0x20>)
 8001e40:	f023 0301 	bic.w	r3, r3, #1
 8001e44:	6113      	str	r3, [r2, #16]
}
 8001e46:	bf00      	nop
 8001e48:	bd80      	pop	{r7, pc}
 8001e4a:	bf00      	nop
 8001e4c:	200000c8 	.word	0x200000c8
 8001e50:	40000400 	.word	0x40000400

08001e54 <TIM5_IRQHandler>:

 void TIM5_IRQHandler(void) {			//	This func count sunrise and sunset
 8001e54:	b580      	push	{r7, lr}
 8001e56:	af00      	add	r7, sp, #0
	TIM5_CallBack();
 8001e58:	4b05      	ldr	r3, [pc, #20]	; (8001e70 <TIM5_IRQHandler+0x1c>)
 8001e5a:	681b      	ldr	r3, [r3, #0]
 8001e5c:	4798      	blx	r3

	CLR_BIT(MTIM5->SR, 0);
 8001e5e:	4b05      	ldr	r3, [pc, #20]	; (8001e74 <TIM5_IRQHandler+0x20>)
 8001e60:	691b      	ldr	r3, [r3, #16]
 8001e62:	4a04      	ldr	r2, [pc, #16]	; (8001e74 <TIM5_IRQHandler+0x20>)
 8001e64:	f023 0301 	bic.w	r3, r3, #1
 8001e68:	6113      	str	r3, [r2, #16]
}
 8001e6a:	bf00      	nop
 8001e6c:	bd80      	pop	{r7, pc}
 8001e6e:	bf00      	nop
 8001e70:	200000cc 	.word	0x200000cc
 8001e74:	40000c00 	.word	0x40000c00

08001e78 <main>:

#include "ECU.h"
#include "NVIC_interface.h"
#include  "STK_interface.h"
int main()
{
 8001e78:	b580      	push	{r7, lr}
 8001e7a:	af00      	add	r7, sp, #0
	SysInit();
 8001e7c:	f7fe ffee 	bl	8000e5c <SysInit>
	setCallBacks();
 8001e80:	f7ff f922 	bl	80010c8 <setCallBacks>
	//setPending flags

	while (1)
	{
		MNVIC_vSetPendingFlag(28);
 8001e84:	201c      	movs	r0, #28
 8001e86:	f7ff fc21 	bl	80016cc <MNVIC_vSetPendingFlag>
		MSTK_voidSetBusyWait( 1000);
 8001e8a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001e8e:	f7ff fcb3 	bl	80017f8 <MSTK_voidSetBusyWait>
		MNVIC_vSetPendingFlag(50);
 8001e92:	2032      	movs	r0, #50	; 0x32
 8001e94:	f7ff fc1a 	bl	80016cc <MNVIC_vSetPendingFlag>
		MSTK_voidSetBusyWait( 1000);
 8001e98:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001e9c:	f7ff fcac 	bl	80017f8 <MSTK_voidSetBusyWait>
		MNVIC_vSetPendingFlag(29);
 8001ea0:	201d      	movs	r0, #29
 8001ea2:	f7ff fc13 	bl	80016cc <MNVIC_vSetPendingFlag>
		MSTK_voidSetBusyWait( 1000);
 8001ea6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001eaa:	f7ff fca5 	bl	80017f8 <MSTK_voidSetBusyWait>
		ECU_start();
 8001eae:	f7fe ffce 	bl	8000e4e <ECU_start>
		MNVIC_vSetPendingFlag(28);
 8001eb2:	e7e7      	b.n	8001e84 <main+0xc>

08001eb4 <MOTOR_vSetXPostion>:

#include "STD_TYPES.h"
#include "GPIO_interface.h"
#include "motor_interface.h"
void MOTOR_vSetXPostion (u32 step)
{
 8001eb4:	b580      	push	{r7, lr}
 8001eb6:	b082      	sub	sp, #8
 8001eb8:	af00      	add	r7, sp, #0
 8001eba:	6078      	str	r0, [r7, #4]
	switch(step)
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	3b01      	subs	r3, #1
 8001ec0:	2b03      	cmp	r3, #3
 8001ec2:	d85f      	bhi.n	8001f84 <MOTOR_vSetXPostion+0xd0>
 8001ec4:	a201      	add	r2, pc, #4	; (adr r2, 8001ecc <MOTOR_vSetXPostion+0x18>)
 8001ec6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001eca:	bf00      	nop
 8001ecc:	08001edd 	.word	0x08001edd
 8001ed0:	08001f07 	.word	0x08001f07
 8001ed4:	08001f31 	.word	0x08001f31
 8001ed8:	08001f5b 	.word	0x08001f5b
	{
	case 1:

		MGPIO_vSetPinValueDirect(GPIOA, 8,SET);
 8001edc:	2200      	movs	r2, #0
 8001ede:	2108      	movs	r1, #8
 8001ee0:	2000      	movs	r0, #0
 8001ee2:	f7ff fb43 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA,9,RESET);
 8001ee6:	2201      	movs	r2, #1
 8001ee8:	2109      	movs	r1, #9
 8001eea:	2000      	movs	r0, #0
 8001eec:	f7ff fb3e 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 10,RESET);
 8001ef0:	2201      	movs	r2, #1
 8001ef2:	210a      	movs	r1, #10
 8001ef4:	2000      	movs	r0, #0
 8001ef6:	f7ff fb39 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 11,RESET);
 8001efa:	2201      	movs	r2, #1
 8001efc:	210b      	movs	r1, #11
 8001efe:	2000      	movs	r0, #0
 8001f00:	f7ff fb34 	bl	800156c <MGPIO_vSetPinValueDirect>
		break;
 8001f04:	e03e      	b.n	8001f84 <MOTOR_vSetXPostion+0xd0>


	case 2:
		MGPIO_vSetPinValueDirect(GPIOA, 8,SET);
 8001f06:	2200      	movs	r2, #0
 8001f08:	2108      	movs	r1, #8
 8001f0a:	2000      	movs	r0, #0
 8001f0c:	f7ff fb2e 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 9,RESET);
 8001f10:	2201      	movs	r2, #1
 8001f12:	2109      	movs	r1, #9
 8001f14:	2000      	movs	r0, #0
 8001f16:	f7ff fb29 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 10,SET);
 8001f1a:	2200      	movs	r2, #0
 8001f1c:	210a      	movs	r1, #10
 8001f1e:	2000      	movs	r0, #0
 8001f20:	f7ff fb24 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 11,RESET);
 8001f24:	2201      	movs	r2, #1
 8001f26:	210b      	movs	r1, #11
 8001f28:	2000      	movs	r0, #0
 8001f2a:	f7ff fb1f 	bl	800156c <MGPIO_vSetPinValueDirect>
		break;
 8001f2e:	e029      	b.n	8001f84 <MOTOR_vSetXPostion+0xd0>


	case 3:
		MGPIO_vSetPinValueDirect(GPIOA, 8,RESET);
 8001f30:	2201      	movs	r2, #1
 8001f32:	2108      	movs	r1, #8
 8001f34:	2000      	movs	r0, #0
 8001f36:	f7ff fb19 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 9,RESET);
 8001f3a:	2201      	movs	r2, #1
 8001f3c:	2109      	movs	r1, #9
 8001f3e:	2000      	movs	r0, #0
 8001f40:	f7ff fb14 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 10,SET);
 8001f44:	2200      	movs	r2, #0
 8001f46:	210a      	movs	r1, #10
 8001f48:	2000      	movs	r0, #0
 8001f4a:	f7ff fb0f 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 11,RESET);
 8001f4e:	2201      	movs	r2, #1
 8001f50:	210b      	movs	r1, #11
 8001f52:	2000      	movs	r0, #0
 8001f54:	f7ff fb0a 	bl	800156c <MGPIO_vSetPinValueDirect>
	    break;
 8001f58:	e014      	b.n	8001f84 <MOTOR_vSetXPostion+0xd0>


	case 4:
		MGPIO_vSetPinValueDirect(GPIOA, 8,SET);
 8001f5a:	2200      	movs	r2, #0
 8001f5c:	2108      	movs	r1, #8
 8001f5e:	2000      	movs	r0, #0
 8001f60:	f7ff fb04 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 9,RESET);
 8001f64:	2201      	movs	r2, #1
 8001f66:	2109      	movs	r1, #9
 8001f68:	2000      	movs	r0, #0
 8001f6a:	f7ff faff 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 10,SET);
 8001f6e:	2200      	movs	r2, #0
 8001f70:	210a      	movs	r1, #10
 8001f72:	2000      	movs	r0, #0
 8001f74:	f7ff fafa 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 11,RESET);
 8001f78:	2201      	movs	r2, #1
 8001f7a:	210b      	movs	r1, #11
 8001f7c:	2000      	movs	r0, #0
 8001f7e:	f7ff faf5 	bl	800156c <MGPIO_vSetPinValueDirect>
		break;
 8001f82:	bf00      	nop
	}
}
 8001f84:	bf00      	nop
 8001f86:	3708      	adds	r7, #8
 8001f88:	46bd      	mov	sp, r7
 8001f8a:	bd80      	pop	{r7, pc}

08001f8c <MOTOR_vSetYPostion>:

void MOTOR_vSetYPostion (u32 step)
{
 8001f8c:	b580      	push	{r7, lr}
 8001f8e:	b082      	sub	sp, #8
 8001f90:	af00      	add	r7, sp, #0
 8001f92:	6078      	str	r0, [r7, #4]
	switch(step)
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	3b01      	subs	r3, #1
 8001f98:	2b03      	cmp	r3, #3
 8001f9a:	d85f      	bhi.n	800205c <MOTOR_vSetYPostion+0xd0>
 8001f9c:	a201      	add	r2, pc, #4	; (adr r2, 8001fa4 <MOTOR_vSetYPostion+0x18>)
 8001f9e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001fa2:	bf00      	nop
 8001fa4:	08001fb5 	.word	0x08001fb5
 8001fa8:	08001fdf 	.word	0x08001fdf
 8001fac:	08002009 	.word	0x08002009
 8001fb0:	08002033 	.word	0x08002033
	{
	case 1:

		MGPIO_vSetPinValueDirect(GPIOA, 12,SET);
 8001fb4:	2200      	movs	r2, #0
 8001fb6:	210c      	movs	r1, #12
 8001fb8:	2000      	movs	r0, #0
 8001fba:	f7ff fad7 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA,13,RESET);
 8001fbe:	2201      	movs	r2, #1
 8001fc0:	210d      	movs	r1, #13
 8001fc2:	2000      	movs	r0, #0
 8001fc4:	f7ff fad2 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 14,RESET);
 8001fc8:	2201      	movs	r2, #1
 8001fca:	210e      	movs	r1, #14
 8001fcc:	2000      	movs	r0, #0
 8001fce:	f7ff facd 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 15,RESET);
 8001fd2:	2201      	movs	r2, #1
 8001fd4:	210f      	movs	r1, #15
 8001fd6:	2000      	movs	r0, #0
 8001fd8:	f7ff fac8 	bl	800156c <MGPIO_vSetPinValueDirect>
		break;
 8001fdc:	e03e      	b.n	800205c <MOTOR_vSetYPostion+0xd0>


	case 2:
		MGPIO_vSetPinValueDirect(GPIOA, 12,SET);
 8001fde:	2200      	movs	r2, #0
 8001fe0:	210c      	movs	r1, #12
 8001fe2:	2000      	movs	r0, #0
 8001fe4:	f7ff fac2 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 13,RESET);
 8001fe8:	2201      	movs	r2, #1
 8001fea:	210d      	movs	r1, #13
 8001fec:	2000      	movs	r0, #0
 8001fee:	f7ff fabd 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 14,SET);
 8001ff2:	2200      	movs	r2, #0
 8001ff4:	210e      	movs	r1, #14
 8001ff6:	2000      	movs	r0, #0
 8001ff8:	f7ff fab8 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 15,RESET);
 8001ffc:	2201      	movs	r2, #1
 8001ffe:	210f      	movs	r1, #15
 8002000:	2000      	movs	r0, #0
 8002002:	f7ff fab3 	bl	800156c <MGPIO_vSetPinValueDirect>
		break;
 8002006:	e029      	b.n	800205c <MOTOR_vSetYPostion+0xd0>


	case 3:
		MGPIO_vSetPinValueDirect(GPIOA, 12,RESET);
 8002008:	2201      	movs	r2, #1
 800200a:	210c      	movs	r1, #12
 800200c:	2000      	movs	r0, #0
 800200e:	f7ff faad 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 13,RESET);
 8002012:	2201      	movs	r2, #1
 8002014:	210d      	movs	r1, #13
 8002016:	2000      	movs	r0, #0
 8002018:	f7ff faa8 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 14,SET);
 800201c:	2200      	movs	r2, #0
 800201e:	210e      	movs	r1, #14
 8002020:	2000      	movs	r0, #0
 8002022:	f7ff faa3 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 15,RESET);
 8002026:	2201      	movs	r2, #1
 8002028:	210f      	movs	r1, #15
 800202a:	2000      	movs	r0, #0
 800202c:	f7ff fa9e 	bl	800156c <MGPIO_vSetPinValueDirect>
	    break;
 8002030:	e014      	b.n	800205c <MOTOR_vSetYPostion+0xd0>


	case 4:
		MGPIO_vSetPinValueDirect(GPIOA, 12,SET);
 8002032:	2200      	movs	r2, #0
 8002034:	210c      	movs	r1, #12
 8002036:	2000      	movs	r0, #0
 8002038:	f7ff fa98 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 13,RESET);
 800203c:	2201      	movs	r2, #1
 800203e:	210d      	movs	r1, #13
 8002040:	2000      	movs	r0, #0
 8002042:	f7ff fa93 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 14,SET);
 8002046:	2200      	movs	r2, #0
 8002048:	210e      	movs	r1, #14
 800204a:	2000      	movs	r0, #0
 800204c:	f7ff fa8e 	bl	800156c <MGPIO_vSetPinValueDirect>
		MGPIO_vSetPinValueDirect(GPIOA, 15,RESET);
 8002050:	2201      	movs	r2, #1
 8002052:	210f      	movs	r1, #15
 8002054:	2000      	movs	r0, #0
 8002056:	f7ff fa89 	bl	800156c <MGPIO_vSetPinValueDirect>
		break;
 800205a:	bf00      	nop
	}
}
 800205c:	bf00      	nop
 800205e:	3708      	adds	r7, #8
 8002060:	46bd      	mov	sp, r7
 8002062:	bd80      	pop	{r7, pc}

08002064 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002064:	480d      	ldr	r0, [pc, #52]	; (800209c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002066:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8002068:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800206c:	480c      	ldr	r0, [pc, #48]	; (80020a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800206e:	490d      	ldr	r1, [pc, #52]	; (80020a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002070:	4a0d      	ldr	r2, [pc, #52]	; (80020a8 <LoopForever+0xe>)
  movs r3, #0
 8002072:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002074:	e002      	b.n	800207c <LoopCopyDataInit>

08002076 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002076:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002078:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800207a:	3304      	adds	r3, #4

0800207c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800207c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800207e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002080:	d3f9      	bcc.n	8002076 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002082:	4a0a      	ldr	r2, [pc, #40]	; (80020ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8002084:	4c0a      	ldr	r4, [pc, #40]	; (80020b0 <LoopForever+0x16>)
  movs r3, #0
 8002086:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002088:	e001      	b.n	800208e <LoopFillZerobss>

0800208a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800208a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800208c:	3204      	adds	r2, #4

0800208e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800208e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002090:	d3fb      	bcc.n	800208a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002092:	f000 f817 	bl	80020c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002096:	f7ff feef 	bl	8001e78 <main>

0800209a <LoopForever>:

LoopForever:
    b LoopForever
 800209a:	e7fe      	b.n	800209a <LoopForever>
  ldr   r0, =_estack
 800209c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80020a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80020a4:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 80020a8:	08003ec8 	.word	0x08003ec8
  ldr r2, =_sbss
 80020ac:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 80020b0:	200000d0 	.word	0x200000d0

080020b4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80020b4:	e7fe      	b.n	80020b4 <ADC_IRQHandler>
	...

080020b8 <__errno>:
 80020b8:	4b01      	ldr	r3, [pc, #4]	; (80020c0 <__errno+0x8>)
 80020ba:	6818      	ldr	r0, [r3, #0]
 80020bc:	4770      	bx	lr
 80020be:	bf00      	nop
 80020c0:	20000004 	.word	0x20000004

080020c4 <__libc_init_array>:
 80020c4:	b570      	push	{r4, r5, r6, lr}
 80020c6:	4d0d      	ldr	r5, [pc, #52]	; (80020fc <__libc_init_array+0x38>)
 80020c8:	4c0d      	ldr	r4, [pc, #52]	; (8002100 <__libc_init_array+0x3c>)
 80020ca:	1b64      	subs	r4, r4, r5
 80020cc:	10a4      	asrs	r4, r4, #2
 80020ce:	2600      	movs	r6, #0
 80020d0:	42a6      	cmp	r6, r4
 80020d2:	d109      	bne.n	80020e8 <__libc_init_array+0x24>
 80020d4:	4d0b      	ldr	r5, [pc, #44]	; (8002104 <__libc_init_array+0x40>)
 80020d6:	4c0c      	ldr	r4, [pc, #48]	; (8002108 <__libc_init_array+0x44>)
 80020d8:	f001 fdf4 	bl	8003cc4 <_init>
 80020dc:	1b64      	subs	r4, r4, r5
 80020de:	10a4      	asrs	r4, r4, #2
 80020e0:	2600      	movs	r6, #0
 80020e2:	42a6      	cmp	r6, r4
 80020e4:	d105      	bne.n	80020f2 <__libc_init_array+0x2e>
 80020e6:	bd70      	pop	{r4, r5, r6, pc}
 80020e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80020ec:	4798      	blx	r3
 80020ee:	3601      	adds	r6, #1
 80020f0:	e7ee      	b.n	80020d0 <__libc_init_array+0xc>
 80020f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80020f6:	4798      	blx	r3
 80020f8:	3601      	adds	r6, #1
 80020fa:	e7f2      	b.n	80020e2 <__libc_init_array+0x1e>
 80020fc:	08003ec0 	.word	0x08003ec0
 8002100:	08003ec0 	.word	0x08003ec0
 8002104:	08003ec0 	.word	0x08003ec0
 8002108:	08003ec4 	.word	0x08003ec4
 800210c:	00000000 	.word	0x00000000

08002110 <sin>:
 8002110:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002112:	ec53 2b10 	vmov	r2, r3, d0
 8002116:	4828      	ldr	r0, [pc, #160]	; (80021b8 <sin+0xa8>)
 8002118:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800211c:	4281      	cmp	r1, r0
 800211e:	dc07      	bgt.n	8002130 <sin+0x20>
 8002120:	ed9f 1b23 	vldr	d1, [pc, #140]	; 80021b0 <sin+0xa0>
 8002124:	2000      	movs	r0, #0
 8002126:	b005      	add	sp, #20
 8002128:	f85d eb04 	ldr.w	lr, [sp], #4
 800212c:	f001 b9e8 	b.w	8003500 <__kernel_sin>
 8002130:	4822      	ldr	r0, [pc, #136]	; (80021bc <sin+0xac>)
 8002132:	4281      	cmp	r1, r0
 8002134:	dd09      	ble.n	800214a <sin+0x3a>
 8002136:	ee10 0a10 	vmov	r0, s0
 800213a:	4619      	mov	r1, r3
 800213c:	f7fe f850 	bl	80001e0 <__aeabi_dsub>
 8002140:	ec41 0b10 	vmov	d0, r0, r1
 8002144:	b005      	add	sp, #20
 8002146:	f85d fb04 	ldr.w	pc, [sp], #4
 800214a:	4668      	mov	r0, sp
 800214c:	f000 fb00 	bl	8002750 <__ieee754_rem_pio2>
 8002150:	f000 0003 	and.w	r0, r0, #3
 8002154:	2801      	cmp	r0, #1
 8002156:	d00c      	beq.n	8002172 <sin+0x62>
 8002158:	2802      	cmp	r0, #2
 800215a:	d011      	beq.n	8002180 <sin+0x70>
 800215c:	b9f0      	cbnz	r0, 800219c <sin+0x8c>
 800215e:	ed9d 1b02 	vldr	d1, [sp, #8]
 8002162:	ed9d 0b00 	vldr	d0, [sp]
 8002166:	2001      	movs	r0, #1
 8002168:	f001 f9ca 	bl	8003500 <__kernel_sin>
 800216c:	ec51 0b10 	vmov	r0, r1, d0
 8002170:	e7e6      	b.n	8002140 <sin+0x30>
 8002172:	ed9d 1b02 	vldr	d1, [sp, #8]
 8002176:	ed9d 0b00 	vldr	d0, [sp]
 800217a:	f000 fda9 	bl	8002cd0 <__kernel_cos>
 800217e:	e7f5      	b.n	800216c <sin+0x5c>
 8002180:	ed9d 1b02 	vldr	d1, [sp, #8]
 8002184:	ed9d 0b00 	vldr	d0, [sp]
 8002188:	2001      	movs	r0, #1
 800218a:	f001 f9b9 	bl	8003500 <__kernel_sin>
 800218e:	ec53 2b10 	vmov	r2, r3, d0
 8002192:	ee10 0a10 	vmov	r0, s0
 8002196:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800219a:	e7d1      	b.n	8002140 <sin+0x30>
 800219c:	ed9d 1b02 	vldr	d1, [sp, #8]
 80021a0:	ed9d 0b00 	vldr	d0, [sp]
 80021a4:	f000 fd94 	bl	8002cd0 <__kernel_cos>
 80021a8:	e7f1      	b.n	800218e <sin+0x7e>
 80021aa:	bf00      	nop
 80021ac:	f3af 8000 	nop.w
	...
 80021b8:	3fe921fb 	.word	0x3fe921fb
 80021bc:	7fefffff 	.word	0x7fefffff

080021c0 <tan>:
 80021c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80021c2:	ec53 2b10 	vmov	r2, r3, d0
 80021c6:	4816      	ldr	r0, [pc, #88]	; (8002220 <tan+0x60>)
 80021c8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80021cc:	4281      	cmp	r1, r0
 80021ce:	dc07      	bgt.n	80021e0 <tan+0x20>
 80021d0:	ed9f 1b11 	vldr	d1, [pc, #68]	; 8002218 <tan+0x58>
 80021d4:	2001      	movs	r0, #1
 80021d6:	b005      	add	sp, #20
 80021d8:	f85d eb04 	ldr.w	lr, [sp], #4
 80021dc:	f001 ba50 	b.w	8003680 <__kernel_tan>
 80021e0:	4810      	ldr	r0, [pc, #64]	; (8002224 <tan+0x64>)
 80021e2:	4281      	cmp	r1, r0
 80021e4:	dd09      	ble.n	80021fa <tan+0x3a>
 80021e6:	ee10 0a10 	vmov	r0, s0
 80021ea:	4619      	mov	r1, r3
 80021ec:	f7fd fff8 	bl	80001e0 <__aeabi_dsub>
 80021f0:	ec41 0b10 	vmov	d0, r0, r1
 80021f4:	b005      	add	sp, #20
 80021f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80021fa:	4668      	mov	r0, sp
 80021fc:	f000 faa8 	bl	8002750 <__ieee754_rem_pio2>
 8002200:	0040      	lsls	r0, r0, #1
 8002202:	f000 0002 	and.w	r0, r0, #2
 8002206:	ed9d 1b02 	vldr	d1, [sp, #8]
 800220a:	ed9d 0b00 	vldr	d0, [sp]
 800220e:	f1c0 0001 	rsb	r0, r0, #1
 8002212:	f001 fa35 	bl	8003680 <__kernel_tan>
 8002216:	e7ed      	b.n	80021f4 <tan+0x34>
	...
 8002220:	3fe921fb 	.word	0x3fe921fb
 8002224:	7fefffff 	.word	0x7fefffff

08002228 <acos>:
 8002228:	b538      	push	{r3, r4, r5, lr}
 800222a:	ed2d 8b02 	vpush	{d8}
 800222e:	ec55 4b10 	vmov	r4, r5, d0
 8002232:	f000 f82d 	bl	8002290 <__ieee754_acos>
 8002236:	4622      	mov	r2, r4
 8002238:	462b      	mov	r3, r5
 800223a:	4620      	mov	r0, r4
 800223c:	4629      	mov	r1, r5
 800223e:	eeb0 8a40 	vmov.f32	s16, s0
 8002242:	eef0 8a60 	vmov.f32	s17, s1
 8002246:	f7fe fc1d 	bl	8000a84 <__aeabi_dcmpun>
 800224a:	b9a8      	cbnz	r0, 8002278 <acos+0x50>
 800224c:	ec45 4b10 	vmov	d0, r4, r5
 8002250:	f001 fc20 	bl	8003a94 <fabs>
 8002254:	4b0c      	ldr	r3, [pc, #48]	; (8002288 <acos+0x60>)
 8002256:	ec51 0b10 	vmov	r0, r1, d0
 800225a:	2200      	movs	r2, #0
 800225c:	f7fe fc08 	bl	8000a70 <__aeabi_dcmpgt>
 8002260:	b150      	cbz	r0, 8002278 <acos+0x50>
 8002262:	f7ff ff29 	bl	80020b8 <__errno>
 8002266:	ecbd 8b02 	vpop	{d8}
 800226a:	2321      	movs	r3, #33	; 0x21
 800226c:	6003      	str	r3, [r0, #0]
 800226e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002272:	4806      	ldr	r0, [pc, #24]	; (800228c <acos+0x64>)
 8002274:	f001 bc98 	b.w	8003ba8 <nan>
 8002278:	eeb0 0a48 	vmov.f32	s0, s16
 800227c:	eef0 0a68 	vmov.f32	s1, s17
 8002280:	ecbd 8b02 	vpop	{d8}
 8002284:	bd38      	pop	{r3, r4, r5, pc}
 8002286:	bf00      	nop
 8002288:	3ff00000 	.word	0x3ff00000
 800228c:	08003ce0 	.word	0x08003ce0

08002290 <__ieee754_acos>:
 8002290:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002294:	ec55 4b10 	vmov	r4, r5, d0
 8002298:	49b7      	ldr	r1, [pc, #732]	; (8002578 <__ieee754_acos+0x2e8>)
 800229a:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800229e:	428b      	cmp	r3, r1
 80022a0:	dd1b      	ble.n	80022da <__ieee754_acos+0x4a>
 80022a2:	f103 4340 	add.w	r3, r3, #3221225472	; 0xc0000000
 80022a6:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 80022aa:	4323      	orrs	r3, r4
 80022ac:	d106      	bne.n	80022bc <__ieee754_acos+0x2c>
 80022ae:	2d00      	cmp	r5, #0
 80022b0:	f300 8211 	bgt.w	80026d6 <__ieee754_acos+0x446>
 80022b4:	ed9f 0b96 	vldr	d0, [pc, #600]	; 8002510 <__ieee754_acos+0x280>
 80022b8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80022bc:	ee10 2a10 	vmov	r2, s0
 80022c0:	462b      	mov	r3, r5
 80022c2:	ee10 0a10 	vmov	r0, s0
 80022c6:	4629      	mov	r1, r5
 80022c8:	f7fd ff8a 	bl	80001e0 <__aeabi_dsub>
 80022cc:	4602      	mov	r2, r0
 80022ce:	460b      	mov	r3, r1
 80022d0:	f7fe fa68 	bl	80007a4 <__aeabi_ddiv>
 80022d4:	ec41 0b10 	vmov	d0, r0, r1
 80022d8:	e7ee      	b.n	80022b8 <__ieee754_acos+0x28>
 80022da:	49a8      	ldr	r1, [pc, #672]	; (800257c <__ieee754_acos+0x2ec>)
 80022dc:	428b      	cmp	r3, r1
 80022de:	f300 8087 	bgt.w	80023f0 <__ieee754_acos+0x160>
 80022e2:	4aa7      	ldr	r2, [pc, #668]	; (8002580 <__ieee754_acos+0x2f0>)
 80022e4:	4293      	cmp	r3, r2
 80022e6:	f340 81f9 	ble.w	80026dc <__ieee754_acos+0x44c>
 80022ea:	ee10 2a10 	vmov	r2, s0
 80022ee:	ee10 0a10 	vmov	r0, s0
 80022f2:	462b      	mov	r3, r5
 80022f4:	4629      	mov	r1, r5
 80022f6:	f7fe f92b 	bl	8000550 <__aeabi_dmul>
 80022fa:	a387      	add	r3, pc, #540	; (adr r3, 8002518 <__ieee754_acos+0x288>)
 80022fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002300:	4606      	mov	r6, r0
 8002302:	460f      	mov	r7, r1
 8002304:	f7fe f924 	bl	8000550 <__aeabi_dmul>
 8002308:	a385      	add	r3, pc, #532	; (adr r3, 8002520 <__ieee754_acos+0x290>)
 800230a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800230e:	f7fd ff69 	bl	80001e4 <__adddf3>
 8002312:	4632      	mov	r2, r6
 8002314:	463b      	mov	r3, r7
 8002316:	f7fe f91b 	bl	8000550 <__aeabi_dmul>
 800231a:	a383      	add	r3, pc, #524	; (adr r3, 8002528 <__ieee754_acos+0x298>)
 800231c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002320:	f7fd ff5e 	bl	80001e0 <__aeabi_dsub>
 8002324:	4632      	mov	r2, r6
 8002326:	463b      	mov	r3, r7
 8002328:	f7fe f912 	bl	8000550 <__aeabi_dmul>
 800232c:	a380      	add	r3, pc, #512	; (adr r3, 8002530 <__ieee754_acos+0x2a0>)
 800232e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002332:	f7fd ff57 	bl	80001e4 <__adddf3>
 8002336:	4632      	mov	r2, r6
 8002338:	463b      	mov	r3, r7
 800233a:	f7fe f909 	bl	8000550 <__aeabi_dmul>
 800233e:	a37e      	add	r3, pc, #504	; (adr r3, 8002538 <__ieee754_acos+0x2a8>)
 8002340:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002344:	f7fd ff4c 	bl	80001e0 <__aeabi_dsub>
 8002348:	4632      	mov	r2, r6
 800234a:	463b      	mov	r3, r7
 800234c:	f7fe f900 	bl	8000550 <__aeabi_dmul>
 8002350:	a37b      	add	r3, pc, #492	; (adr r3, 8002540 <__ieee754_acos+0x2b0>)
 8002352:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002356:	f7fd ff45 	bl	80001e4 <__adddf3>
 800235a:	4632      	mov	r2, r6
 800235c:	463b      	mov	r3, r7
 800235e:	f7fe f8f7 	bl	8000550 <__aeabi_dmul>
 8002362:	a379      	add	r3, pc, #484	; (adr r3, 8002548 <__ieee754_acos+0x2b8>)
 8002364:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002368:	4680      	mov	r8, r0
 800236a:	4689      	mov	r9, r1
 800236c:	4630      	mov	r0, r6
 800236e:	4639      	mov	r1, r7
 8002370:	f7fe f8ee 	bl	8000550 <__aeabi_dmul>
 8002374:	a376      	add	r3, pc, #472	; (adr r3, 8002550 <__ieee754_acos+0x2c0>)
 8002376:	e9d3 2300 	ldrd	r2, r3, [r3]
 800237a:	f7fd ff31 	bl	80001e0 <__aeabi_dsub>
 800237e:	4632      	mov	r2, r6
 8002380:	463b      	mov	r3, r7
 8002382:	f7fe f8e5 	bl	8000550 <__aeabi_dmul>
 8002386:	a374      	add	r3, pc, #464	; (adr r3, 8002558 <__ieee754_acos+0x2c8>)
 8002388:	e9d3 2300 	ldrd	r2, r3, [r3]
 800238c:	f7fd ff2a 	bl	80001e4 <__adddf3>
 8002390:	4632      	mov	r2, r6
 8002392:	463b      	mov	r3, r7
 8002394:	f7fe f8dc 	bl	8000550 <__aeabi_dmul>
 8002398:	a371      	add	r3, pc, #452	; (adr r3, 8002560 <__ieee754_acos+0x2d0>)
 800239a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800239e:	f7fd ff1f 	bl	80001e0 <__aeabi_dsub>
 80023a2:	4632      	mov	r2, r6
 80023a4:	463b      	mov	r3, r7
 80023a6:	f7fe f8d3 	bl	8000550 <__aeabi_dmul>
 80023aa:	4b76      	ldr	r3, [pc, #472]	; (8002584 <__ieee754_acos+0x2f4>)
 80023ac:	2200      	movs	r2, #0
 80023ae:	f7fd ff19 	bl	80001e4 <__adddf3>
 80023b2:	4602      	mov	r2, r0
 80023b4:	460b      	mov	r3, r1
 80023b6:	4640      	mov	r0, r8
 80023b8:	4649      	mov	r1, r9
 80023ba:	f7fe f9f3 	bl	80007a4 <__aeabi_ddiv>
 80023be:	4622      	mov	r2, r4
 80023c0:	462b      	mov	r3, r5
 80023c2:	f7fe f8c5 	bl	8000550 <__aeabi_dmul>
 80023c6:	4602      	mov	r2, r0
 80023c8:	460b      	mov	r3, r1
 80023ca:	a167      	add	r1, pc, #412	; (adr r1, 8002568 <__ieee754_acos+0x2d8>)
 80023cc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80023d0:	f7fd ff06 	bl	80001e0 <__aeabi_dsub>
 80023d4:	4602      	mov	r2, r0
 80023d6:	460b      	mov	r3, r1
 80023d8:	4620      	mov	r0, r4
 80023da:	4629      	mov	r1, r5
 80023dc:	f7fd ff00 	bl	80001e0 <__aeabi_dsub>
 80023e0:	4602      	mov	r2, r0
 80023e2:	460b      	mov	r3, r1
 80023e4:	a162      	add	r1, pc, #392	; (adr r1, 8002570 <__ieee754_acos+0x2e0>)
 80023e6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80023ea:	f7fd fef9 	bl	80001e0 <__aeabi_dsub>
 80023ee:	e771      	b.n	80022d4 <__ieee754_acos+0x44>
 80023f0:	2d00      	cmp	r5, #0
 80023f2:	f280 80cb 	bge.w	800258c <__ieee754_acos+0x2fc>
 80023f6:	ee10 0a10 	vmov	r0, s0
 80023fa:	4b62      	ldr	r3, [pc, #392]	; (8002584 <__ieee754_acos+0x2f4>)
 80023fc:	2200      	movs	r2, #0
 80023fe:	4629      	mov	r1, r5
 8002400:	f7fd fef0 	bl	80001e4 <__adddf3>
 8002404:	4b60      	ldr	r3, [pc, #384]	; (8002588 <__ieee754_acos+0x2f8>)
 8002406:	2200      	movs	r2, #0
 8002408:	f7fe f8a2 	bl	8000550 <__aeabi_dmul>
 800240c:	a342      	add	r3, pc, #264	; (adr r3, 8002518 <__ieee754_acos+0x288>)
 800240e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002412:	4604      	mov	r4, r0
 8002414:	460d      	mov	r5, r1
 8002416:	f7fe f89b 	bl	8000550 <__aeabi_dmul>
 800241a:	a341      	add	r3, pc, #260	; (adr r3, 8002520 <__ieee754_acos+0x290>)
 800241c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002420:	f7fd fee0 	bl	80001e4 <__adddf3>
 8002424:	4622      	mov	r2, r4
 8002426:	462b      	mov	r3, r5
 8002428:	f7fe f892 	bl	8000550 <__aeabi_dmul>
 800242c:	a33e      	add	r3, pc, #248	; (adr r3, 8002528 <__ieee754_acos+0x298>)
 800242e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002432:	f7fd fed5 	bl	80001e0 <__aeabi_dsub>
 8002436:	4622      	mov	r2, r4
 8002438:	462b      	mov	r3, r5
 800243a:	f7fe f889 	bl	8000550 <__aeabi_dmul>
 800243e:	a33c      	add	r3, pc, #240	; (adr r3, 8002530 <__ieee754_acos+0x2a0>)
 8002440:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002444:	f7fd fece 	bl	80001e4 <__adddf3>
 8002448:	4622      	mov	r2, r4
 800244a:	462b      	mov	r3, r5
 800244c:	f7fe f880 	bl	8000550 <__aeabi_dmul>
 8002450:	a339      	add	r3, pc, #228	; (adr r3, 8002538 <__ieee754_acos+0x2a8>)
 8002452:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002456:	f7fd fec3 	bl	80001e0 <__aeabi_dsub>
 800245a:	4622      	mov	r2, r4
 800245c:	462b      	mov	r3, r5
 800245e:	f7fe f877 	bl	8000550 <__aeabi_dmul>
 8002462:	a337      	add	r3, pc, #220	; (adr r3, 8002540 <__ieee754_acos+0x2b0>)
 8002464:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002468:	f7fd febc 	bl	80001e4 <__adddf3>
 800246c:	4622      	mov	r2, r4
 800246e:	462b      	mov	r3, r5
 8002470:	f7fe f86e 	bl	8000550 <__aeabi_dmul>
 8002474:	ec45 4b10 	vmov	d0, r4, r5
 8002478:	4680      	mov	r8, r0
 800247a:	4689      	mov	r9, r1
 800247c:	f000 fb74 	bl	8002b68 <__ieee754_sqrt>
 8002480:	a331      	add	r3, pc, #196	; (adr r3, 8002548 <__ieee754_acos+0x2b8>)
 8002482:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002486:	4620      	mov	r0, r4
 8002488:	4629      	mov	r1, r5
 800248a:	ec57 6b10 	vmov	r6, r7, d0
 800248e:	f7fe f85f 	bl	8000550 <__aeabi_dmul>
 8002492:	a32f      	add	r3, pc, #188	; (adr r3, 8002550 <__ieee754_acos+0x2c0>)
 8002494:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002498:	f7fd fea2 	bl	80001e0 <__aeabi_dsub>
 800249c:	4622      	mov	r2, r4
 800249e:	462b      	mov	r3, r5
 80024a0:	f7fe f856 	bl	8000550 <__aeabi_dmul>
 80024a4:	a32c      	add	r3, pc, #176	; (adr r3, 8002558 <__ieee754_acos+0x2c8>)
 80024a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024aa:	f7fd fe9b 	bl	80001e4 <__adddf3>
 80024ae:	4622      	mov	r2, r4
 80024b0:	462b      	mov	r3, r5
 80024b2:	f7fe f84d 	bl	8000550 <__aeabi_dmul>
 80024b6:	a32a      	add	r3, pc, #168	; (adr r3, 8002560 <__ieee754_acos+0x2d0>)
 80024b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024bc:	f7fd fe90 	bl	80001e0 <__aeabi_dsub>
 80024c0:	4622      	mov	r2, r4
 80024c2:	462b      	mov	r3, r5
 80024c4:	f7fe f844 	bl	8000550 <__aeabi_dmul>
 80024c8:	4b2e      	ldr	r3, [pc, #184]	; (8002584 <__ieee754_acos+0x2f4>)
 80024ca:	2200      	movs	r2, #0
 80024cc:	f7fd fe8a 	bl	80001e4 <__adddf3>
 80024d0:	4602      	mov	r2, r0
 80024d2:	460b      	mov	r3, r1
 80024d4:	4640      	mov	r0, r8
 80024d6:	4649      	mov	r1, r9
 80024d8:	f7fe f964 	bl	80007a4 <__aeabi_ddiv>
 80024dc:	4632      	mov	r2, r6
 80024de:	463b      	mov	r3, r7
 80024e0:	f7fe f836 	bl	8000550 <__aeabi_dmul>
 80024e4:	a320      	add	r3, pc, #128	; (adr r3, 8002568 <__ieee754_acos+0x2d8>)
 80024e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024ea:	f7fd fe79 	bl	80001e0 <__aeabi_dsub>
 80024ee:	4632      	mov	r2, r6
 80024f0:	463b      	mov	r3, r7
 80024f2:	f7fd fe77 	bl	80001e4 <__adddf3>
 80024f6:	4602      	mov	r2, r0
 80024f8:	460b      	mov	r3, r1
 80024fa:	f7fd fe73 	bl	80001e4 <__adddf3>
 80024fe:	4602      	mov	r2, r0
 8002500:	460b      	mov	r3, r1
 8002502:	a103      	add	r1, pc, #12	; (adr r1, 8002510 <__ieee754_acos+0x280>)
 8002504:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002508:	e76f      	b.n	80023ea <__ieee754_acos+0x15a>
 800250a:	bf00      	nop
 800250c:	f3af 8000 	nop.w
 8002510:	54442d18 	.word	0x54442d18
 8002514:	400921fb 	.word	0x400921fb
 8002518:	0dfdf709 	.word	0x0dfdf709
 800251c:	3f023de1 	.word	0x3f023de1
 8002520:	7501b288 	.word	0x7501b288
 8002524:	3f49efe0 	.word	0x3f49efe0
 8002528:	b5688f3b 	.word	0xb5688f3b
 800252c:	3fa48228 	.word	0x3fa48228
 8002530:	0e884455 	.word	0x0e884455
 8002534:	3fc9c155 	.word	0x3fc9c155
 8002538:	03eb6f7d 	.word	0x03eb6f7d
 800253c:	3fd4d612 	.word	0x3fd4d612
 8002540:	55555555 	.word	0x55555555
 8002544:	3fc55555 	.word	0x3fc55555
 8002548:	b12e9282 	.word	0xb12e9282
 800254c:	3fb3b8c5 	.word	0x3fb3b8c5
 8002550:	1b8d0159 	.word	0x1b8d0159
 8002554:	3fe6066c 	.word	0x3fe6066c
 8002558:	9c598ac8 	.word	0x9c598ac8
 800255c:	40002ae5 	.word	0x40002ae5
 8002560:	1c8a2d4b 	.word	0x1c8a2d4b
 8002564:	40033a27 	.word	0x40033a27
 8002568:	33145c07 	.word	0x33145c07
 800256c:	3c91a626 	.word	0x3c91a626
 8002570:	54442d18 	.word	0x54442d18
 8002574:	3ff921fb 	.word	0x3ff921fb
 8002578:	3fefffff 	.word	0x3fefffff
 800257c:	3fdfffff 	.word	0x3fdfffff
 8002580:	3c600000 	.word	0x3c600000
 8002584:	3ff00000 	.word	0x3ff00000
 8002588:	3fe00000 	.word	0x3fe00000
 800258c:	ee10 2a10 	vmov	r2, s0
 8002590:	462b      	mov	r3, r5
 8002592:	496d      	ldr	r1, [pc, #436]	; (8002748 <__ieee754_acos+0x4b8>)
 8002594:	2000      	movs	r0, #0
 8002596:	f7fd fe23 	bl	80001e0 <__aeabi_dsub>
 800259a:	4b6c      	ldr	r3, [pc, #432]	; (800274c <__ieee754_acos+0x4bc>)
 800259c:	2200      	movs	r2, #0
 800259e:	f7fd ffd7 	bl	8000550 <__aeabi_dmul>
 80025a2:	4604      	mov	r4, r0
 80025a4:	460d      	mov	r5, r1
 80025a6:	ec45 4b10 	vmov	d0, r4, r5
 80025aa:	f000 fadd 	bl	8002b68 <__ieee754_sqrt>
 80025ae:	a34e      	add	r3, pc, #312	; (adr r3, 80026e8 <__ieee754_acos+0x458>)
 80025b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025b4:	4620      	mov	r0, r4
 80025b6:	4629      	mov	r1, r5
 80025b8:	ec59 8b10 	vmov	r8, r9, d0
 80025bc:	f7fd ffc8 	bl	8000550 <__aeabi_dmul>
 80025c0:	a34b      	add	r3, pc, #300	; (adr r3, 80026f0 <__ieee754_acos+0x460>)
 80025c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025c6:	f7fd fe0d 	bl	80001e4 <__adddf3>
 80025ca:	4622      	mov	r2, r4
 80025cc:	462b      	mov	r3, r5
 80025ce:	f7fd ffbf 	bl	8000550 <__aeabi_dmul>
 80025d2:	a349      	add	r3, pc, #292	; (adr r3, 80026f8 <__ieee754_acos+0x468>)
 80025d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025d8:	f7fd fe02 	bl	80001e0 <__aeabi_dsub>
 80025dc:	4622      	mov	r2, r4
 80025de:	462b      	mov	r3, r5
 80025e0:	f7fd ffb6 	bl	8000550 <__aeabi_dmul>
 80025e4:	a346      	add	r3, pc, #280	; (adr r3, 8002700 <__ieee754_acos+0x470>)
 80025e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025ea:	f7fd fdfb 	bl	80001e4 <__adddf3>
 80025ee:	4622      	mov	r2, r4
 80025f0:	462b      	mov	r3, r5
 80025f2:	f7fd ffad 	bl	8000550 <__aeabi_dmul>
 80025f6:	a344      	add	r3, pc, #272	; (adr r3, 8002708 <__ieee754_acos+0x478>)
 80025f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025fc:	f7fd fdf0 	bl	80001e0 <__aeabi_dsub>
 8002600:	4622      	mov	r2, r4
 8002602:	462b      	mov	r3, r5
 8002604:	f7fd ffa4 	bl	8000550 <__aeabi_dmul>
 8002608:	a341      	add	r3, pc, #260	; (adr r3, 8002710 <__ieee754_acos+0x480>)
 800260a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800260e:	f7fd fde9 	bl	80001e4 <__adddf3>
 8002612:	4622      	mov	r2, r4
 8002614:	462b      	mov	r3, r5
 8002616:	f7fd ff9b 	bl	8000550 <__aeabi_dmul>
 800261a:	a33f      	add	r3, pc, #252	; (adr r3, 8002718 <__ieee754_acos+0x488>)
 800261c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002620:	4682      	mov	sl, r0
 8002622:	468b      	mov	fp, r1
 8002624:	4620      	mov	r0, r4
 8002626:	4629      	mov	r1, r5
 8002628:	f7fd ff92 	bl	8000550 <__aeabi_dmul>
 800262c:	a33c      	add	r3, pc, #240	; (adr r3, 8002720 <__ieee754_acos+0x490>)
 800262e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002632:	f7fd fdd5 	bl	80001e0 <__aeabi_dsub>
 8002636:	4622      	mov	r2, r4
 8002638:	462b      	mov	r3, r5
 800263a:	f7fd ff89 	bl	8000550 <__aeabi_dmul>
 800263e:	a33a      	add	r3, pc, #232	; (adr r3, 8002728 <__ieee754_acos+0x498>)
 8002640:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002644:	f7fd fdce 	bl	80001e4 <__adddf3>
 8002648:	4622      	mov	r2, r4
 800264a:	462b      	mov	r3, r5
 800264c:	f7fd ff80 	bl	8000550 <__aeabi_dmul>
 8002650:	a337      	add	r3, pc, #220	; (adr r3, 8002730 <__ieee754_acos+0x4a0>)
 8002652:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002656:	f7fd fdc3 	bl	80001e0 <__aeabi_dsub>
 800265a:	4622      	mov	r2, r4
 800265c:	462b      	mov	r3, r5
 800265e:	f7fd ff77 	bl	8000550 <__aeabi_dmul>
 8002662:	4b39      	ldr	r3, [pc, #228]	; (8002748 <__ieee754_acos+0x4b8>)
 8002664:	2200      	movs	r2, #0
 8002666:	f7fd fdbd 	bl	80001e4 <__adddf3>
 800266a:	4602      	mov	r2, r0
 800266c:	460b      	mov	r3, r1
 800266e:	4650      	mov	r0, sl
 8002670:	4659      	mov	r1, fp
 8002672:	f7fe f897 	bl	80007a4 <__aeabi_ddiv>
 8002676:	4642      	mov	r2, r8
 8002678:	464b      	mov	r3, r9
 800267a:	f7fd ff69 	bl	8000550 <__aeabi_dmul>
 800267e:	2600      	movs	r6, #0
 8002680:	4682      	mov	sl, r0
 8002682:	468b      	mov	fp, r1
 8002684:	4632      	mov	r2, r6
 8002686:	464b      	mov	r3, r9
 8002688:	4630      	mov	r0, r6
 800268a:	4649      	mov	r1, r9
 800268c:	f7fd ff60 	bl	8000550 <__aeabi_dmul>
 8002690:	4602      	mov	r2, r0
 8002692:	460b      	mov	r3, r1
 8002694:	4620      	mov	r0, r4
 8002696:	4629      	mov	r1, r5
 8002698:	f7fd fda2 	bl	80001e0 <__aeabi_dsub>
 800269c:	4632      	mov	r2, r6
 800269e:	4604      	mov	r4, r0
 80026a0:	460d      	mov	r5, r1
 80026a2:	464b      	mov	r3, r9
 80026a4:	4640      	mov	r0, r8
 80026a6:	4649      	mov	r1, r9
 80026a8:	f7fd fd9c 	bl	80001e4 <__adddf3>
 80026ac:	4602      	mov	r2, r0
 80026ae:	460b      	mov	r3, r1
 80026b0:	4620      	mov	r0, r4
 80026b2:	4629      	mov	r1, r5
 80026b4:	f7fe f876 	bl	80007a4 <__aeabi_ddiv>
 80026b8:	4602      	mov	r2, r0
 80026ba:	460b      	mov	r3, r1
 80026bc:	4650      	mov	r0, sl
 80026be:	4659      	mov	r1, fp
 80026c0:	f7fd fd90 	bl	80001e4 <__adddf3>
 80026c4:	4632      	mov	r2, r6
 80026c6:	464b      	mov	r3, r9
 80026c8:	f7fd fd8c 	bl	80001e4 <__adddf3>
 80026cc:	4602      	mov	r2, r0
 80026ce:	460b      	mov	r3, r1
 80026d0:	f7fd fd88 	bl	80001e4 <__adddf3>
 80026d4:	e5fe      	b.n	80022d4 <__ieee754_acos+0x44>
 80026d6:	ed9f 0b18 	vldr	d0, [pc, #96]	; 8002738 <__ieee754_acos+0x4a8>
 80026da:	e5ed      	b.n	80022b8 <__ieee754_acos+0x28>
 80026dc:	ed9f 0b18 	vldr	d0, [pc, #96]	; 8002740 <__ieee754_acos+0x4b0>
 80026e0:	e5ea      	b.n	80022b8 <__ieee754_acos+0x28>
 80026e2:	bf00      	nop
 80026e4:	f3af 8000 	nop.w
 80026e8:	0dfdf709 	.word	0x0dfdf709
 80026ec:	3f023de1 	.word	0x3f023de1
 80026f0:	7501b288 	.word	0x7501b288
 80026f4:	3f49efe0 	.word	0x3f49efe0
 80026f8:	b5688f3b 	.word	0xb5688f3b
 80026fc:	3fa48228 	.word	0x3fa48228
 8002700:	0e884455 	.word	0x0e884455
 8002704:	3fc9c155 	.word	0x3fc9c155
 8002708:	03eb6f7d 	.word	0x03eb6f7d
 800270c:	3fd4d612 	.word	0x3fd4d612
 8002710:	55555555 	.word	0x55555555
 8002714:	3fc55555 	.word	0x3fc55555
 8002718:	b12e9282 	.word	0xb12e9282
 800271c:	3fb3b8c5 	.word	0x3fb3b8c5
 8002720:	1b8d0159 	.word	0x1b8d0159
 8002724:	3fe6066c 	.word	0x3fe6066c
 8002728:	9c598ac8 	.word	0x9c598ac8
 800272c:	40002ae5 	.word	0x40002ae5
 8002730:	1c8a2d4b 	.word	0x1c8a2d4b
 8002734:	40033a27 	.word	0x40033a27
	...
 8002740:	54442d18 	.word	0x54442d18
 8002744:	3ff921fb 	.word	0x3ff921fb
 8002748:	3ff00000 	.word	0x3ff00000
 800274c:	3fe00000 	.word	0x3fe00000

08002750 <__ieee754_rem_pio2>:
 8002750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002754:	ed2d 8b02 	vpush	{d8}
 8002758:	ec55 4b10 	vmov	r4, r5, d0
 800275c:	4bca      	ldr	r3, [pc, #808]	; (8002a88 <__ieee754_rem_pio2+0x338>)
 800275e:	b08b      	sub	sp, #44	; 0x2c
 8002760:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 8002764:	4598      	cmp	r8, r3
 8002766:	4682      	mov	sl, r0
 8002768:	9502      	str	r5, [sp, #8]
 800276a:	dc08      	bgt.n	800277e <__ieee754_rem_pio2+0x2e>
 800276c:	2200      	movs	r2, #0
 800276e:	2300      	movs	r3, #0
 8002770:	ed80 0b00 	vstr	d0, [r0]
 8002774:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8002778:	f04f 0b00 	mov.w	fp, #0
 800277c:	e028      	b.n	80027d0 <__ieee754_rem_pio2+0x80>
 800277e:	4bc3      	ldr	r3, [pc, #780]	; (8002a8c <__ieee754_rem_pio2+0x33c>)
 8002780:	4598      	cmp	r8, r3
 8002782:	dc78      	bgt.n	8002876 <__ieee754_rem_pio2+0x126>
 8002784:	9b02      	ldr	r3, [sp, #8]
 8002786:	4ec2      	ldr	r6, [pc, #776]	; (8002a90 <__ieee754_rem_pio2+0x340>)
 8002788:	2b00      	cmp	r3, #0
 800278a:	ee10 0a10 	vmov	r0, s0
 800278e:	a3b0      	add	r3, pc, #704	; (adr r3, 8002a50 <__ieee754_rem_pio2+0x300>)
 8002790:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002794:	4629      	mov	r1, r5
 8002796:	dd39      	ble.n	800280c <__ieee754_rem_pio2+0xbc>
 8002798:	f7fd fd22 	bl	80001e0 <__aeabi_dsub>
 800279c:	45b0      	cmp	r8, r6
 800279e:	4604      	mov	r4, r0
 80027a0:	460d      	mov	r5, r1
 80027a2:	d01b      	beq.n	80027dc <__ieee754_rem_pio2+0x8c>
 80027a4:	a3ac      	add	r3, pc, #688	; (adr r3, 8002a58 <__ieee754_rem_pio2+0x308>)
 80027a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027aa:	f7fd fd19 	bl	80001e0 <__aeabi_dsub>
 80027ae:	4602      	mov	r2, r0
 80027b0:	460b      	mov	r3, r1
 80027b2:	e9ca 2300 	strd	r2, r3, [sl]
 80027b6:	4620      	mov	r0, r4
 80027b8:	4629      	mov	r1, r5
 80027ba:	f7fd fd11 	bl	80001e0 <__aeabi_dsub>
 80027be:	a3a6      	add	r3, pc, #664	; (adr r3, 8002a58 <__ieee754_rem_pio2+0x308>)
 80027c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027c4:	f7fd fd0c 	bl	80001e0 <__aeabi_dsub>
 80027c8:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80027cc:	f04f 0b01 	mov.w	fp, #1
 80027d0:	4658      	mov	r0, fp
 80027d2:	b00b      	add	sp, #44	; 0x2c
 80027d4:	ecbd 8b02 	vpop	{d8}
 80027d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80027dc:	a3a0      	add	r3, pc, #640	; (adr r3, 8002a60 <__ieee754_rem_pio2+0x310>)
 80027de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027e2:	f7fd fcfd 	bl	80001e0 <__aeabi_dsub>
 80027e6:	a3a0      	add	r3, pc, #640	; (adr r3, 8002a68 <__ieee754_rem_pio2+0x318>)
 80027e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027ec:	4604      	mov	r4, r0
 80027ee:	460d      	mov	r5, r1
 80027f0:	f7fd fcf6 	bl	80001e0 <__aeabi_dsub>
 80027f4:	4602      	mov	r2, r0
 80027f6:	460b      	mov	r3, r1
 80027f8:	e9ca 2300 	strd	r2, r3, [sl]
 80027fc:	4620      	mov	r0, r4
 80027fe:	4629      	mov	r1, r5
 8002800:	f7fd fcee 	bl	80001e0 <__aeabi_dsub>
 8002804:	a398      	add	r3, pc, #608	; (adr r3, 8002a68 <__ieee754_rem_pio2+0x318>)
 8002806:	e9d3 2300 	ldrd	r2, r3, [r3]
 800280a:	e7db      	b.n	80027c4 <__ieee754_rem_pio2+0x74>
 800280c:	f7fd fcea 	bl	80001e4 <__adddf3>
 8002810:	45b0      	cmp	r8, r6
 8002812:	4604      	mov	r4, r0
 8002814:	460d      	mov	r5, r1
 8002816:	d016      	beq.n	8002846 <__ieee754_rem_pio2+0xf6>
 8002818:	a38f      	add	r3, pc, #572	; (adr r3, 8002a58 <__ieee754_rem_pio2+0x308>)
 800281a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800281e:	f7fd fce1 	bl	80001e4 <__adddf3>
 8002822:	4602      	mov	r2, r0
 8002824:	460b      	mov	r3, r1
 8002826:	e9ca 2300 	strd	r2, r3, [sl]
 800282a:	4620      	mov	r0, r4
 800282c:	4629      	mov	r1, r5
 800282e:	f7fd fcd7 	bl	80001e0 <__aeabi_dsub>
 8002832:	a389      	add	r3, pc, #548	; (adr r3, 8002a58 <__ieee754_rem_pio2+0x308>)
 8002834:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002838:	f7fd fcd4 	bl	80001e4 <__adddf3>
 800283c:	f04f 3bff 	mov.w	fp, #4294967295
 8002840:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8002844:	e7c4      	b.n	80027d0 <__ieee754_rem_pio2+0x80>
 8002846:	a386      	add	r3, pc, #536	; (adr r3, 8002a60 <__ieee754_rem_pio2+0x310>)
 8002848:	e9d3 2300 	ldrd	r2, r3, [r3]
 800284c:	f7fd fcca 	bl	80001e4 <__adddf3>
 8002850:	a385      	add	r3, pc, #532	; (adr r3, 8002a68 <__ieee754_rem_pio2+0x318>)
 8002852:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002856:	4604      	mov	r4, r0
 8002858:	460d      	mov	r5, r1
 800285a:	f7fd fcc3 	bl	80001e4 <__adddf3>
 800285e:	4602      	mov	r2, r0
 8002860:	460b      	mov	r3, r1
 8002862:	e9ca 2300 	strd	r2, r3, [sl]
 8002866:	4620      	mov	r0, r4
 8002868:	4629      	mov	r1, r5
 800286a:	f7fd fcb9 	bl	80001e0 <__aeabi_dsub>
 800286e:	a37e      	add	r3, pc, #504	; (adr r3, 8002a68 <__ieee754_rem_pio2+0x318>)
 8002870:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002874:	e7e0      	b.n	8002838 <__ieee754_rem_pio2+0xe8>
 8002876:	4b87      	ldr	r3, [pc, #540]	; (8002a94 <__ieee754_rem_pio2+0x344>)
 8002878:	4598      	cmp	r8, r3
 800287a:	f300 80d9 	bgt.w	8002a30 <__ieee754_rem_pio2+0x2e0>
 800287e:	f001 f909 	bl	8003a94 <fabs>
 8002882:	ec55 4b10 	vmov	r4, r5, d0
 8002886:	ee10 0a10 	vmov	r0, s0
 800288a:	a379      	add	r3, pc, #484	; (adr r3, 8002a70 <__ieee754_rem_pio2+0x320>)
 800288c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002890:	4629      	mov	r1, r5
 8002892:	f7fd fe5d 	bl	8000550 <__aeabi_dmul>
 8002896:	4b80      	ldr	r3, [pc, #512]	; (8002a98 <__ieee754_rem_pio2+0x348>)
 8002898:	2200      	movs	r2, #0
 800289a:	f7fd fca3 	bl	80001e4 <__adddf3>
 800289e:	f7fe f907 	bl	8000ab0 <__aeabi_d2iz>
 80028a2:	4683      	mov	fp, r0
 80028a4:	f7fd fdea 	bl	800047c <__aeabi_i2d>
 80028a8:	4602      	mov	r2, r0
 80028aa:	460b      	mov	r3, r1
 80028ac:	ec43 2b18 	vmov	d8, r2, r3
 80028b0:	a367      	add	r3, pc, #412	; (adr r3, 8002a50 <__ieee754_rem_pio2+0x300>)
 80028b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028b6:	f7fd fe4b 	bl	8000550 <__aeabi_dmul>
 80028ba:	4602      	mov	r2, r0
 80028bc:	460b      	mov	r3, r1
 80028be:	4620      	mov	r0, r4
 80028c0:	4629      	mov	r1, r5
 80028c2:	f7fd fc8d 	bl	80001e0 <__aeabi_dsub>
 80028c6:	a364      	add	r3, pc, #400	; (adr r3, 8002a58 <__ieee754_rem_pio2+0x308>)
 80028c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028cc:	4606      	mov	r6, r0
 80028ce:	460f      	mov	r7, r1
 80028d0:	ec51 0b18 	vmov	r0, r1, d8
 80028d4:	f7fd fe3c 	bl	8000550 <__aeabi_dmul>
 80028d8:	f1bb 0f1f 	cmp.w	fp, #31
 80028dc:	4604      	mov	r4, r0
 80028de:	460d      	mov	r5, r1
 80028e0:	dc0d      	bgt.n	80028fe <__ieee754_rem_pio2+0x1ae>
 80028e2:	4b6e      	ldr	r3, [pc, #440]	; (8002a9c <__ieee754_rem_pio2+0x34c>)
 80028e4:	f10b 32ff 	add.w	r2, fp, #4294967295
 80028e8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80028ec:	4543      	cmp	r3, r8
 80028ee:	d006      	beq.n	80028fe <__ieee754_rem_pio2+0x1ae>
 80028f0:	4622      	mov	r2, r4
 80028f2:	462b      	mov	r3, r5
 80028f4:	4630      	mov	r0, r6
 80028f6:	4639      	mov	r1, r7
 80028f8:	f7fd fc72 	bl	80001e0 <__aeabi_dsub>
 80028fc:	e00f      	b.n	800291e <__ieee754_rem_pio2+0x1ce>
 80028fe:	462b      	mov	r3, r5
 8002900:	4622      	mov	r2, r4
 8002902:	4630      	mov	r0, r6
 8002904:	4639      	mov	r1, r7
 8002906:	f7fd fc6b 	bl	80001e0 <__aeabi_dsub>
 800290a:	ea4f 5328 	mov.w	r3, r8, asr #20
 800290e:	9303      	str	r3, [sp, #12]
 8002910:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8002914:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 8002918:	f1b8 0f10 	cmp.w	r8, #16
 800291c:	dc02      	bgt.n	8002924 <__ieee754_rem_pio2+0x1d4>
 800291e:	e9ca 0100 	strd	r0, r1, [sl]
 8002922:	e039      	b.n	8002998 <__ieee754_rem_pio2+0x248>
 8002924:	a34e      	add	r3, pc, #312	; (adr r3, 8002a60 <__ieee754_rem_pio2+0x310>)
 8002926:	e9d3 2300 	ldrd	r2, r3, [r3]
 800292a:	ec51 0b18 	vmov	r0, r1, d8
 800292e:	f7fd fe0f 	bl	8000550 <__aeabi_dmul>
 8002932:	4604      	mov	r4, r0
 8002934:	460d      	mov	r5, r1
 8002936:	4602      	mov	r2, r0
 8002938:	460b      	mov	r3, r1
 800293a:	4630      	mov	r0, r6
 800293c:	4639      	mov	r1, r7
 800293e:	f7fd fc4f 	bl	80001e0 <__aeabi_dsub>
 8002942:	4602      	mov	r2, r0
 8002944:	460b      	mov	r3, r1
 8002946:	4680      	mov	r8, r0
 8002948:	4689      	mov	r9, r1
 800294a:	4630      	mov	r0, r6
 800294c:	4639      	mov	r1, r7
 800294e:	f7fd fc47 	bl	80001e0 <__aeabi_dsub>
 8002952:	4622      	mov	r2, r4
 8002954:	462b      	mov	r3, r5
 8002956:	f7fd fc43 	bl	80001e0 <__aeabi_dsub>
 800295a:	a343      	add	r3, pc, #268	; (adr r3, 8002a68 <__ieee754_rem_pio2+0x318>)
 800295c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002960:	4604      	mov	r4, r0
 8002962:	460d      	mov	r5, r1
 8002964:	ec51 0b18 	vmov	r0, r1, d8
 8002968:	f7fd fdf2 	bl	8000550 <__aeabi_dmul>
 800296c:	4622      	mov	r2, r4
 800296e:	462b      	mov	r3, r5
 8002970:	f7fd fc36 	bl	80001e0 <__aeabi_dsub>
 8002974:	4602      	mov	r2, r0
 8002976:	460b      	mov	r3, r1
 8002978:	4604      	mov	r4, r0
 800297a:	460d      	mov	r5, r1
 800297c:	4640      	mov	r0, r8
 800297e:	4649      	mov	r1, r9
 8002980:	f7fd fc2e 	bl	80001e0 <__aeabi_dsub>
 8002984:	9a03      	ldr	r2, [sp, #12]
 8002986:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800298a:	1ad3      	subs	r3, r2, r3
 800298c:	2b31      	cmp	r3, #49	; 0x31
 800298e:	dc24      	bgt.n	80029da <__ieee754_rem_pio2+0x28a>
 8002990:	e9ca 0100 	strd	r0, r1, [sl]
 8002994:	4646      	mov	r6, r8
 8002996:	464f      	mov	r7, r9
 8002998:	e9da 8900 	ldrd	r8, r9, [sl]
 800299c:	4630      	mov	r0, r6
 800299e:	4642      	mov	r2, r8
 80029a0:	464b      	mov	r3, r9
 80029a2:	4639      	mov	r1, r7
 80029a4:	f7fd fc1c 	bl	80001e0 <__aeabi_dsub>
 80029a8:	462b      	mov	r3, r5
 80029aa:	4622      	mov	r2, r4
 80029ac:	f7fd fc18 	bl	80001e0 <__aeabi_dsub>
 80029b0:	9b02      	ldr	r3, [sp, #8]
 80029b2:	2b00      	cmp	r3, #0
 80029b4:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80029b8:	f6bf af0a 	bge.w	80027d0 <__ieee754_rem_pio2+0x80>
 80029bc:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80029c0:	f8ca 3004 	str.w	r3, [sl, #4]
 80029c4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80029c8:	f8ca 8000 	str.w	r8, [sl]
 80029cc:	f8ca 0008 	str.w	r0, [sl, #8]
 80029d0:	f8ca 300c 	str.w	r3, [sl, #12]
 80029d4:	f1cb 0b00 	rsb	fp, fp, #0
 80029d8:	e6fa      	b.n	80027d0 <__ieee754_rem_pio2+0x80>
 80029da:	a327      	add	r3, pc, #156	; (adr r3, 8002a78 <__ieee754_rem_pio2+0x328>)
 80029dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80029e0:	ec51 0b18 	vmov	r0, r1, d8
 80029e4:	f7fd fdb4 	bl	8000550 <__aeabi_dmul>
 80029e8:	4604      	mov	r4, r0
 80029ea:	460d      	mov	r5, r1
 80029ec:	4602      	mov	r2, r0
 80029ee:	460b      	mov	r3, r1
 80029f0:	4640      	mov	r0, r8
 80029f2:	4649      	mov	r1, r9
 80029f4:	f7fd fbf4 	bl	80001e0 <__aeabi_dsub>
 80029f8:	4602      	mov	r2, r0
 80029fa:	460b      	mov	r3, r1
 80029fc:	4606      	mov	r6, r0
 80029fe:	460f      	mov	r7, r1
 8002a00:	4640      	mov	r0, r8
 8002a02:	4649      	mov	r1, r9
 8002a04:	f7fd fbec 	bl	80001e0 <__aeabi_dsub>
 8002a08:	4622      	mov	r2, r4
 8002a0a:	462b      	mov	r3, r5
 8002a0c:	f7fd fbe8 	bl	80001e0 <__aeabi_dsub>
 8002a10:	a31b      	add	r3, pc, #108	; (adr r3, 8002a80 <__ieee754_rem_pio2+0x330>)
 8002a12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002a16:	4604      	mov	r4, r0
 8002a18:	460d      	mov	r5, r1
 8002a1a:	ec51 0b18 	vmov	r0, r1, d8
 8002a1e:	f7fd fd97 	bl	8000550 <__aeabi_dmul>
 8002a22:	4622      	mov	r2, r4
 8002a24:	462b      	mov	r3, r5
 8002a26:	f7fd fbdb 	bl	80001e0 <__aeabi_dsub>
 8002a2a:	4604      	mov	r4, r0
 8002a2c:	460d      	mov	r5, r1
 8002a2e:	e75f      	b.n	80028f0 <__ieee754_rem_pio2+0x1a0>
 8002a30:	4b1b      	ldr	r3, [pc, #108]	; (8002aa0 <__ieee754_rem_pio2+0x350>)
 8002a32:	4598      	cmp	r8, r3
 8002a34:	dd36      	ble.n	8002aa4 <__ieee754_rem_pio2+0x354>
 8002a36:	ee10 2a10 	vmov	r2, s0
 8002a3a:	462b      	mov	r3, r5
 8002a3c:	4620      	mov	r0, r4
 8002a3e:	4629      	mov	r1, r5
 8002a40:	f7fd fbce 	bl	80001e0 <__aeabi_dsub>
 8002a44:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8002a48:	e9ca 0100 	strd	r0, r1, [sl]
 8002a4c:	e694      	b.n	8002778 <__ieee754_rem_pio2+0x28>
 8002a4e:	bf00      	nop
 8002a50:	54400000 	.word	0x54400000
 8002a54:	3ff921fb 	.word	0x3ff921fb
 8002a58:	1a626331 	.word	0x1a626331
 8002a5c:	3dd0b461 	.word	0x3dd0b461
 8002a60:	1a600000 	.word	0x1a600000
 8002a64:	3dd0b461 	.word	0x3dd0b461
 8002a68:	2e037073 	.word	0x2e037073
 8002a6c:	3ba3198a 	.word	0x3ba3198a
 8002a70:	6dc9c883 	.word	0x6dc9c883
 8002a74:	3fe45f30 	.word	0x3fe45f30
 8002a78:	2e000000 	.word	0x2e000000
 8002a7c:	3ba3198a 	.word	0x3ba3198a
 8002a80:	252049c1 	.word	0x252049c1
 8002a84:	397b839a 	.word	0x397b839a
 8002a88:	3fe921fb 	.word	0x3fe921fb
 8002a8c:	4002d97b 	.word	0x4002d97b
 8002a90:	3ff921fb 	.word	0x3ff921fb
 8002a94:	413921fb 	.word	0x413921fb
 8002a98:	3fe00000 	.word	0x3fe00000
 8002a9c:	08003ce4 	.word	0x08003ce4
 8002aa0:	7fefffff 	.word	0x7fefffff
 8002aa4:	ea4f 5428 	mov.w	r4, r8, asr #20
 8002aa8:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 8002aac:	ee10 0a10 	vmov	r0, s0
 8002ab0:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 8002ab4:	ee10 6a10 	vmov	r6, s0
 8002ab8:	460f      	mov	r7, r1
 8002aba:	f7fd fff9 	bl	8000ab0 <__aeabi_d2iz>
 8002abe:	f7fd fcdd 	bl	800047c <__aeabi_i2d>
 8002ac2:	4602      	mov	r2, r0
 8002ac4:	460b      	mov	r3, r1
 8002ac6:	4630      	mov	r0, r6
 8002ac8:	4639      	mov	r1, r7
 8002aca:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002ace:	f7fd fb87 	bl	80001e0 <__aeabi_dsub>
 8002ad2:	4b23      	ldr	r3, [pc, #140]	; (8002b60 <__ieee754_rem_pio2+0x410>)
 8002ad4:	2200      	movs	r2, #0
 8002ad6:	f7fd fd3b 	bl	8000550 <__aeabi_dmul>
 8002ada:	460f      	mov	r7, r1
 8002adc:	4606      	mov	r6, r0
 8002ade:	f7fd ffe7 	bl	8000ab0 <__aeabi_d2iz>
 8002ae2:	f7fd fccb 	bl	800047c <__aeabi_i2d>
 8002ae6:	4602      	mov	r2, r0
 8002ae8:	460b      	mov	r3, r1
 8002aea:	4630      	mov	r0, r6
 8002aec:	4639      	mov	r1, r7
 8002aee:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8002af2:	f7fd fb75 	bl	80001e0 <__aeabi_dsub>
 8002af6:	4b1a      	ldr	r3, [pc, #104]	; (8002b60 <__ieee754_rem_pio2+0x410>)
 8002af8:	2200      	movs	r2, #0
 8002afa:	f7fd fd29 	bl	8000550 <__aeabi_dmul>
 8002afe:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8002b02:	ad04      	add	r5, sp, #16
 8002b04:	f04f 0803 	mov.w	r8, #3
 8002b08:	46a9      	mov	r9, r5
 8002b0a:	2600      	movs	r6, #0
 8002b0c:	2700      	movs	r7, #0
 8002b0e:	4632      	mov	r2, r6
 8002b10:	463b      	mov	r3, r7
 8002b12:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 8002b16:	46c3      	mov	fp, r8
 8002b18:	3d08      	subs	r5, #8
 8002b1a:	f108 38ff 	add.w	r8, r8, #4294967295
 8002b1e:	f7fd ff7f 	bl	8000a20 <__aeabi_dcmpeq>
 8002b22:	2800      	cmp	r0, #0
 8002b24:	d1f3      	bne.n	8002b0e <__ieee754_rem_pio2+0x3be>
 8002b26:	4b0f      	ldr	r3, [pc, #60]	; (8002b64 <__ieee754_rem_pio2+0x414>)
 8002b28:	9301      	str	r3, [sp, #4]
 8002b2a:	2302      	movs	r3, #2
 8002b2c:	9300      	str	r3, [sp, #0]
 8002b2e:	4622      	mov	r2, r4
 8002b30:	465b      	mov	r3, fp
 8002b32:	4651      	mov	r1, sl
 8002b34:	4648      	mov	r0, r9
 8002b36:	f000 f993 	bl	8002e60 <__kernel_rem_pio2>
 8002b3a:	9b02      	ldr	r3, [sp, #8]
 8002b3c:	2b00      	cmp	r3, #0
 8002b3e:	4683      	mov	fp, r0
 8002b40:	f6bf ae46 	bge.w	80027d0 <__ieee754_rem_pio2+0x80>
 8002b44:	e9da 2100 	ldrd	r2, r1, [sl]
 8002b48:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002b4c:	e9ca 2300 	strd	r2, r3, [sl]
 8002b50:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 8002b54:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002b58:	e9ca 2302 	strd	r2, r3, [sl, #8]
 8002b5c:	e73a      	b.n	80029d4 <__ieee754_rem_pio2+0x284>
 8002b5e:	bf00      	nop
 8002b60:	41700000 	.word	0x41700000
 8002b64:	08003d64 	.word	0x08003d64

08002b68 <__ieee754_sqrt>:
 8002b68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002b6c:	ec55 4b10 	vmov	r4, r5, d0
 8002b70:	4e55      	ldr	r6, [pc, #340]	; (8002cc8 <__ieee754_sqrt+0x160>)
 8002b72:	43ae      	bics	r6, r5
 8002b74:	ee10 0a10 	vmov	r0, s0
 8002b78:	ee10 3a10 	vmov	r3, s0
 8002b7c:	462a      	mov	r2, r5
 8002b7e:	4629      	mov	r1, r5
 8002b80:	d110      	bne.n	8002ba4 <__ieee754_sqrt+0x3c>
 8002b82:	ee10 2a10 	vmov	r2, s0
 8002b86:	462b      	mov	r3, r5
 8002b88:	f7fd fce2 	bl	8000550 <__aeabi_dmul>
 8002b8c:	4602      	mov	r2, r0
 8002b8e:	460b      	mov	r3, r1
 8002b90:	4620      	mov	r0, r4
 8002b92:	4629      	mov	r1, r5
 8002b94:	f7fd fb26 	bl	80001e4 <__adddf3>
 8002b98:	4604      	mov	r4, r0
 8002b9a:	460d      	mov	r5, r1
 8002b9c:	ec45 4b10 	vmov	d0, r4, r5
 8002ba0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002ba4:	2d00      	cmp	r5, #0
 8002ba6:	dc10      	bgt.n	8002bca <__ieee754_sqrt+0x62>
 8002ba8:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8002bac:	4330      	orrs	r0, r6
 8002bae:	d0f5      	beq.n	8002b9c <__ieee754_sqrt+0x34>
 8002bb0:	b15d      	cbz	r5, 8002bca <__ieee754_sqrt+0x62>
 8002bb2:	ee10 2a10 	vmov	r2, s0
 8002bb6:	462b      	mov	r3, r5
 8002bb8:	ee10 0a10 	vmov	r0, s0
 8002bbc:	f7fd fb10 	bl	80001e0 <__aeabi_dsub>
 8002bc0:	4602      	mov	r2, r0
 8002bc2:	460b      	mov	r3, r1
 8002bc4:	f7fd fdee 	bl	80007a4 <__aeabi_ddiv>
 8002bc8:	e7e6      	b.n	8002b98 <__ieee754_sqrt+0x30>
 8002bca:	1512      	asrs	r2, r2, #20
 8002bcc:	d074      	beq.n	8002cb8 <__ieee754_sqrt+0x150>
 8002bce:	07d4      	lsls	r4, r2, #31
 8002bd0:	f3c1 0113 	ubfx	r1, r1, #0, #20
 8002bd4:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 8002bd8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8002bdc:	bf5e      	ittt	pl
 8002bde:	0fda      	lsrpl	r2, r3, #31
 8002be0:	005b      	lslpl	r3, r3, #1
 8002be2:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 8002be6:	2400      	movs	r4, #0
 8002be8:	0fda      	lsrs	r2, r3, #31
 8002bea:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8002bee:	107f      	asrs	r7, r7, #1
 8002bf0:	005b      	lsls	r3, r3, #1
 8002bf2:	2516      	movs	r5, #22
 8002bf4:	4620      	mov	r0, r4
 8002bf6:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8002bfa:	1886      	adds	r6, r0, r2
 8002bfc:	428e      	cmp	r6, r1
 8002bfe:	bfde      	ittt	le
 8002c00:	1b89      	suble	r1, r1, r6
 8002c02:	18b0      	addle	r0, r6, r2
 8002c04:	18a4      	addle	r4, r4, r2
 8002c06:	0049      	lsls	r1, r1, #1
 8002c08:	3d01      	subs	r5, #1
 8002c0a:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 8002c0e:	ea4f 0252 	mov.w	r2, r2, lsr #1
 8002c12:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8002c16:	d1f0      	bne.n	8002bfa <__ieee754_sqrt+0x92>
 8002c18:	462a      	mov	r2, r5
 8002c1a:	f04f 0e20 	mov.w	lr, #32
 8002c1e:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8002c22:	4281      	cmp	r1, r0
 8002c24:	eb06 0c05 	add.w	ip, r6, r5
 8002c28:	dc02      	bgt.n	8002c30 <__ieee754_sqrt+0xc8>
 8002c2a:	d113      	bne.n	8002c54 <__ieee754_sqrt+0xec>
 8002c2c:	459c      	cmp	ip, r3
 8002c2e:	d811      	bhi.n	8002c54 <__ieee754_sqrt+0xec>
 8002c30:	f1bc 0f00 	cmp.w	ip, #0
 8002c34:	eb0c 0506 	add.w	r5, ip, r6
 8002c38:	da43      	bge.n	8002cc2 <__ieee754_sqrt+0x15a>
 8002c3a:	2d00      	cmp	r5, #0
 8002c3c:	db41      	blt.n	8002cc2 <__ieee754_sqrt+0x15a>
 8002c3e:	f100 0801 	add.w	r8, r0, #1
 8002c42:	1a09      	subs	r1, r1, r0
 8002c44:	459c      	cmp	ip, r3
 8002c46:	bf88      	it	hi
 8002c48:	f101 31ff 	addhi.w	r1, r1, #4294967295
 8002c4c:	eba3 030c 	sub.w	r3, r3, ip
 8002c50:	4432      	add	r2, r6
 8002c52:	4640      	mov	r0, r8
 8002c54:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 8002c58:	f1be 0e01 	subs.w	lr, lr, #1
 8002c5c:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 8002c60:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8002c64:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8002c68:	d1db      	bne.n	8002c22 <__ieee754_sqrt+0xba>
 8002c6a:	430b      	orrs	r3, r1
 8002c6c:	d006      	beq.n	8002c7c <__ieee754_sqrt+0x114>
 8002c6e:	1c50      	adds	r0, r2, #1
 8002c70:	bf13      	iteet	ne
 8002c72:	3201      	addne	r2, #1
 8002c74:	3401      	addeq	r4, #1
 8002c76:	4672      	moveq	r2, lr
 8002c78:	f022 0201 	bicne.w	r2, r2, #1
 8002c7c:	1063      	asrs	r3, r4, #1
 8002c7e:	0852      	lsrs	r2, r2, #1
 8002c80:	07e1      	lsls	r1, r4, #31
 8002c82:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8002c86:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8002c8a:	bf48      	it	mi
 8002c8c:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 8002c90:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 8002c94:	4614      	mov	r4, r2
 8002c96:	e781      	b.n	8002b9c <__ieee754_sqrt+0x34>
 8002c98:	0ad9      	lsrs	r1, r3, #11
 8002c9a:	3815      	subs	r0, #21
 8002c9c:	055b      	lsls	r3, r3, #21
 8002c9e:	2900      	cmp	r1, #0
 8002ca0:	d0fa      	beq.n	8002c98 <__ieee754_sqrt+0x130>
 8002ca2:	02cd      	lsls	r5, r1, #11
 8002ca4:	d50a      	bpl.n	8002cbc <__ieee754_sqrt+0x154>
 8002ca6:	f1c2 0420 	rsb	r4, r2, #32
 8002caa:	fa23 f404 	lsr.w	r4, r3, r4
 8002cae:	1e55      	subs	r5, r2, #1
 8002cb0:	4093      	lsls	r3, r2
 8002cb2:	4321      	orrs	r1, r4
 8002cb4:	1b42      	subs	r2, r0, r5
 8002cb6:	e78a      	b.n	8002bce <__ieee754_sqrt+0x66>
 8002cb8:	4610      	mov	r0, r2
 8002cba:	e7f0      	b.n	8002c9e <__ieee754_sqrt+0x136>
 8002cbc:	0049      	lsls	r1, r1, #1
 8002cbe:	3201      	adds	r2, #1
 8002cc0:	e7ef      	b.n	8002ca2 <__ieee754_sqrt+0x13a>
 8002cc2:	4680      	mov	r8, r0
 8002cc4:	e7bd      	b.n	8002c42 <__ieee754_sqrt+0xda>
 8002cc6:	bf00      	nop
 8002cc8:	7ff00000 	.word	0x7ff00000
 8002ccc:	00000000 	.word	0x00000000

08002cd0 <__kernel_cos>:
 8002cd0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cd4:	ec57 6b10 	vmov	r6, r7, d0
 8002cd8:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8002cdc:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8002ce0:	ed8d 1b00 	vstr	d1, [sp]
 8002ce4:	da07      	bge.n	8002cf6 <__kernel_cos+0x26>
 8002ce6:	ee10 0a10 	vmov	r0, s0
 8002cea:	4639      	mov	r1, r7
 8002cec:	f7fd fee0 	bl	8000ab0 <__aeabi_d2iz>
 8002cf0:	2800      	cmp	r0, #0
 8002cf2:	f000 8088 	beq.w	8002e06 <__kernel_cos+0x136>
 8002cf6:	4632      	mov	r2, r6
 8002cf8:	463b      	mov	r3, r7
 8002cfa:	4630      	mov	r0, r6
 8002cfc:	4639      	mov	r1, r7
 8002cfe:	f7fd fc27 	bl	8000550 <__aeabi_dmul>
 8002d02:	4b51      	ldr	r3, [pc, #324]	; (8002e48 <__kernel_cos+0x178>)
 8002d04:	2200      	movs	r2, #0
 8002d06:	4604      	mov	r4, r0
 8002d08:	460d      	mov	r5, r1
 8002d0a:	f7fd fc21 	bl	8000550 <__aeabi_dmul>
 8002d0e:	a340      	add	r3, pc, #256	; (adr r3, 8002e10 <__kernel_cos+0x140>)
 8002d10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d14:	4682      	mov	sl, r0
 8002d16:	468b      	mov	fp, r1
 8002d18:	4620      	mov	r0, r4
 8002d1a:	4629      	mov	r1, r5
 8002d1c:	f7fd fc18 	bl	8000550 <__aeabi_dmul>
 8002d20:	a33d      	add	r3, pc, #244	; (adr r3, 8002e18 <__kernel_cos+0x148>)
 8002d22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d26:	f7fd fa5d 	bl	80001e4 <__adddf3>
 8002d2a:	4622      	mov	r2, r4
 8002d2c:	462b      	mov	r3, r5
 8002d2e:	f7fd fc0f 	bl	8000550 <__aeabi_dmul>
 8002d32:	a33b      	add	r3, pc, #236	; (adr r3, 8002e20 <__kernel_cos+0x150>)
 8002d34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d38:	f7fd fa52 	bl	80001e0 <__aeabi_dsub>
 8002d3c:	4622      	mov	r2, r4
 8002d3e:	462b      	mov	r3, r5
 8002d40:	f7fd fc06 	bl	8000550 <__aeabi_dmul>
 8002d44:	a338      	add	r3, pc, #224	; (adr r3, 8002e28 <__kernel_cos+0x158>)
 8002d46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d4a:	f7fd fa4b 	bl	80001e4 <__adddf3>
 8002d4e:	4622      	mov	r2, r4
 8002d50:	462b      	mov	r3, r5
 8002d52:	f7fd fbfd 	bl	8000550 <__aeabi_dmul>
 8002d56:	a336      	add	r3, pc, #216	; (adr r3, 8002e30 <__kernel_cos+0x160>)
 8002d58:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d5c:	f7fd fa40 	bl	80001e0 <__aeabi_dsub>
 8002d60:	4622      	mov	r2, r4
 8002d62:	462b      	mov	r3, r5
 8002d64:	f7fd fbf4 	bl	8000550 <__aeabi_dmul>
 8002d68:	a333      	add	r3, pc, #204	; (adr r3, 8002e38 <__kernel_cos+0x168>)
 8002d6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d6e:	f7fd fa39 	bl	80001e4 <__adddf3>
 8002d72:	4622      	mov	r2, r4
 8002d74:	462b      	mov	r3, r5
 8002d76:	f7fd fbeb 	bl	8000550 <__aeabi_dmul>
 8002d7a:	4622      	mov	r2, r4
 8002d7c:	462b      	mov	r3, r5
 8002d7e:	f7fd fbe7 	bl	8000550 <__aeabi_dmul>
 8002d82:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002d86:	4604      	mov	r4, r0
 8002d88:	460d      	mov	r5, r1
 8002d8a:	4630      	mov	r0, r6
 8002d8c:	4639      	mov	r1, r7
 8002d8e:	f7fd fbdf 	bl	8000550 <__aeabi_dmul>
 8002d92:	460b      	mov	r3, r1
 8002d94:	4602      	mov	r2, r0
 8002d96:	4629      	mov	r1, r5
 8002d98:	4620      	mov	r0, r4
 8002d9a:	f7fd fa21 	bl	80001e0 <__aeabi_dsub>
 8002d9e:	4b2b      	ldr	r3, [pc, #172]	; (8002e4c <__kernel_cos+0x17c>)
 8002da0:	4598      	cmp	r8, r3
 8002da2:	4606      	mov	r6, r0
 8002da4:	460f      	mov	r7, r1
 8002da6:	dc10      	bgt.n	8002dca <__kernel_cos+0xfa>
 8002da8:	4602      	mov	r2, r0
 8002daa:	460b      	mov	r3, r1
 8002dac:	4650      	mov	r0, sl
 8002dae:	4659      	mov	r1, fp
 8002db0:	f7fd fa16 	bl	80001e0 <__aeabi_dsub>
 8002db4:	460b      	mov	r3, r1
 8002db6:	4926      	ldr	r1, [pc, #152]	; (8002e50 <__kernel_cos+0x180>)
 8002db8:	4602      	mov	r2, r0
 8002dba:	2000      	movs	r0, #0
 8002dbc:	f7fd fa10 	bl	80001e0 <__aeabi_dsub>
 8002dc0:	ec41 0b10 	vmov	d0, r0, r1
 8002dc4:	b003      	add	sp, #12
 8002dc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002dca:	4b22      	ldr	r3, [pc, #136]	; (8002e54 <__kernel_cos+0x184>)
 8002dcc:	4920      	ldr	r1, [pc, #128]	; (8002e50 <__kernel_cos+0x180>)
 8002dce:	4598      	cmp	r8, r3
 8002dd0:	bfcc      	ite	gt
 8002dd2:	4d21      	ldrgt	r5, [pc, #132]	; (8002e58 <__kernel_cos+0x188>)
 8002dd4:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 8002dd8:	2400      	movs	r4, #0
 8002dda:	4622      	mov	r2, r4
 8002ddc:	462b      	mov	r3, r5
 8002dde:	2000      	movs	r0, #0
 8002de0:	f7fd f9fe 	bl	80001e0 <__aeabi_dsub>
 8002de4:	4622      	mov	r2, r4
 8002de6:	4680      	mov	r8, r0
 8002de8:	4689      	mov	r9, r1
 8002dea:	462b      	mov	r3, r5
 8002dec:	4650      	mov	r0, sl
 8002dee:	4659      	mov	r1, fp
 8002df0:	f7fd f9f6 	bl	80001e0 <__aeabi_dsub>
 8002df4:	4632      	mov	r2, r6
 8002df6:	463b      	mov	r3, r7
 8002df8:	f7fd f9f2 	bl	80001e0 <__aeabi_dsub>
 8002dfc:	4602      	mov	r2, r0
 8002dfe:	460b      	mov	r3, r1
 8002e00:	4640      	mov	r0, r8
 8002e02:	4649      	mov	r1, r9
 8002e04:	e7da      	b.n	8002dbc <__kernel_cos+0xec>
 8002e06:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 8002e40 <__kernel_cos+0x170>
 8002e0a:	e7db      	b.n	8002dc4 <__kernel_cos+0xf4>
 8002e0c:	f3af 8000 	nop.w
 8002e10:	be8838d4 	.word	0xbe8838d4
 8002e14:	bda8fae9 	.word	0xbda8fae9
 8002e18:	bdb4b1c4 	.word	0xbdb4b1c4
 8002e1c:	3e21ee9e 	.word	0x3e21ee9e
 8002e20:	809c52ad 	.word	0x809c52ad
 8002e24:	3e927e4f 	.word	0x3e927e4f
 8002e28:	19cb1590 	.word	0x19cb1590
 8002e2c:	3efa01a0 	.word	0x3efa01a0
 8002e30:	16c15177 	.word	0x16c15177
 8002e34:	3f56c16c 	.word	0x3f56c16c
 8002e38:	5555554c 	.word	0x5555554c
 8002e3c:	3fa55555 	.word	0x3fa55555
 8002e40:	00000000 	.word	0x00000000
 8002e44:	3ff00000 	.word	0x3ff00000
 8002e48:	3fe00000 	.word	0x3fe00000
 8002e4c:	3fd33332 	.word	0x3fd33332
 8002e50:	3ff00000 	.word	0x3ff00000
 8002e54:	3fe90000 	.word	0x3fe90000
 8002e58:	3fd20000 	.word	0x3fd20000
 8002e5c:	00000000 	.word	0x00000000

08002e60 <__kernel_rem_pio2>:
 8002e60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e64:	ed2d 8b02 	vpush	{d8}
 8002e68:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 8002e6c:	f112 0f14 	cmn.w	r2, #20
 8002e70:	9308      	str	r3, [sp, #32]
 8002e72:	9101      	str	r1, [sp, #4]
 8002e74:	4bc4      	ldr	r3, [pc, #784]	; (8003188 <__kernel_rem_pio2+0x328>)
 8002e76:	99a6      	ldr	r1, [sp, #664]	; 0x298
 8002e78:	900b      	str	r0, [sp, #44]	; 0x2c
 8002e7a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8002e7e:	9302      	str	r3, [sp, #8]
 8002e80:	9b08      	ldr	r3, [sp, #32]
 8002e82:	f103 33ff 	add.w	r3, r3, #4294967295
 8002e86:	bfa8      	it	ge
 8002e88:	1ed4      	subge	r4, r2, #3
 8002e8a:	9306      	str	r3, [sp, #24]
 8002e8c:	bfb2      	itee	lt
 8002e8e:	2400      	movlt	r4, #0
 8002e90:	2318      	movge	r3, #24
 8002e92:	fb94 f4f3 	sdivge	r4, r4, r3
 8002e96:	f06f 0317 	mvn.w	r3, #23
 8002e9a:	fb04 3303 	mla	r3, r4, r3, r3
 8002e9e:	eb03 0a02 	add.w	sl, r3, r2
 8002ea2:	9b02      	ldr	r3, [sp, #8]
 8002ea4:	9a06      	ldr	r2, [sp, #24]
 8002ea6:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 8003178 <__kernel_rem_pio2+0x318>
 8002eaa:	eb03 0802 	add.w	r8, r3, r2
 8002eae:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8002eb0:	1aa7      	subs	r7, r4, r2
 8002eb2:	ae22      	add	r6, sp, #136	; 0x88
 8002eb4:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8002eb8:	2500      	movs	r5, #0
 8002eba:	4545      	cmp	r5, r8
 8002ebc:	dd13      	ble.n	8002ee6 <__kernel_rem_pio2+0x86>
 8002ebe:	9b08      	ldr	r3, [sp, #32]
 8002ec0:	ed9f 8bad 	vldr	d8, [pc, #692]	; 8003178 <__kernel_rem_pio2+0x318>
 8002ec4:	aa22      	add	r2, sp, #136	; 0x88
 8002ec6:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8002eca:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 8002ece:	f04f 0800 	mov.w	r8, #0
 8002ed2:	9b02      	ldr	r3, [sp, #8]
 8002ed4:	4598      	cmp	r8, r3
 8002ed6:	dc2f      	bgt.n	8002f38 <__kernel_rem_pio2+0xd8>
 8002ed8:	ed8d 8b04 	vstr	d8, [sp, #16]
 8002edc:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8002ee0:	462f      	mov	r7, r5
 8002ee2:	2600      	movs	r6, #0
 8002ee4:	e01b      	b.n	8002f1e <__kernel_rem_pio2+0xbe>
 8002ee6:	42ef      	cmn	r7, r5
 8002ee8:	d407      	bmi.n	8002efa <__kernel_rem_pio2+0x9a>
 8002eea:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8002eee:	f7fd fac5 	bl	800047c <__aeabi_i2d>
 8002ef2:	e8e6 0102 	strd	r0, r1, [r6], #8
 8002ef6:	3501      	adds	r5, #1
 8002ef8:	e7df      	b.n	8002eba <__kernel_rem_pio2+0x5a>
 8002efa:	ec51 0b18 	vmov	r0, r1, d8
 8002efe:	e7f8      	b.n	8002ef2 <__kernel_rem_pio2+0x92>
 8002f00:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002f04:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8002f08:	f7fd fb22 	bl	8000550 <__aeabi_dmul>
 8002f0c:	4602      	mov	r2, r0
 8002f0e:	460b      	mov	r3, r1
 8002f10:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002f14:	f7fd f966 	bl	80001e4 <__adddf3>
 8002f18:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002f1c:	3601      	adds	r6, #1
 8002f1e:	9b06      	ldr	r3, [sp, #24]
 8002f20:	429e      	cmp	r6, r3
 8002f22:	f1a7 0708 	sub.w	r7, r7, #8
 8002f26:	ddeb      	ble.n	8002f00 <__kernel_rem_pio2+0xa0>
 8002f28:	ed9d 7b04 	vldr	d7, [sp, #16]
 8002f2c:	f108 0801 	add.w	r8, r8, #1
 8002f30:	ecab 7b02 	vstmia	fp!, {d7}
 8002f34:	3508      	adds	r5, #8
 8002f36:	e7cc      	b.n	8002ed2 <__kernel_rem_pio2+0x72>
 8002f38:	9b02      	ldr	r3, [sp, #8]
 8002f3a:	aa0e      	add	r2, sp, #56	; 0x38
 8002f3c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8002f40:	930d      	str	r3, [sp, #52]	; 0x34
 8002f42:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8002f44:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8002f48:	9c02      	ldr	r4, [sp, #8]
 8002f4a:	930c      	str	r3, [sp, #48]	; 0x30
 8002f4c:	00e3      	lsls	r3, r4, #3
 8002f4e:	930a      	str	r3, [sp, #40]	; 0x28
 8002f50:	ab9a      	add	r3, sp, #616	; 0x268
 8002f52:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002f56:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 8002f5a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8002f5e:	ab72      	add	r3, sp, #456	; 0x1c8
 8002f60:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 8002f64:	46c3      	mov	fp, r8
 8002f66:	46a1      	mov	r9, r4
 8002f68:	f1b9 0f00 	cmp.w	r9, #0
 8002f6c:	f1a5 0508 	sub.w	r5, r5, #8
 8002f70:	dc77      	bgt.n	8003062 <__kernel_rem_pio2+0x202>
 8002f72:	ec47 6b10 	vmov	d0, r6, r7
 8002f76:	4650      	mov	r0, sl
 8002f78:	f000 fe1e 	bl	8003bb8 <scalbn>
 8002f7c:	ec57 6b10 	vmov	r6, r7, d0
 8002f80:	2200      	movs	r2, #0
 8002f82:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8002f86:	ee10 0a10 	vmov	r0, s0
 8002f8a:	4639      	mov	r1, r7
 8002f8c:	f7fd fae0 	bl	8000550 <__aeabi_dmul>
 8002f90:	ec41 0b10 	vmov	d0, r0, r1
 8002f94:	f000 fd88 	bl	8003aa8 <floor>
 8002f98:	4b7c      	ldr	r3, [pc, #496]	; (800318c <__kernel_rem_pio2+0x32c>)
 8002f9a:	ec51 0b10 	vmov	r0, r1, d0
 8002f9e:	2200      	movs	r2, #0
 8002fa0:	f7fd fad6 	bl	8000550 <__aeabi_dmul>
 8002fa4:	4602      	mov	r2, r0
 8002fa6:	460b      	mov	r3, r1
 8002fa8:	4630      	mov	r0, r6
 8002faa:	4639      	mov	r1, r7
 8002fac:	f7fd f918 	bl	80001e0 <__aeabi_dsub>
 8002fb0:	460f      	mov	r7, r1
 8002fb2:	4606      	mov	r6, r0
 8002fb4:	f7fd fd7c 	bl	8000ab0 <__aeabi_d2iz>
 8002fb8:	9004      	str	r0, [sp, #16]
 8002fba:	f7fd fa5f 	bl	800047c <__aeabi_i2d>
 8002fbe:	4602      	mov	r2, r0
 8002fc0:	460b      	mov	r3, r1
 8002fc2:	4630      	mov	r0, r6
 8002fc4:	4639      	mov	r1, r7
 8002fc6:	f7fd f90b 	bl	80001e0 <__aeabi_dsub>
 8002fca:	f1ba 0f00 	cmp.w	sl, #0
 8002fce:	4606      	mov	r6, r0
 8002fd0:	460f      	mov	r7, r1
 8002fd2:	dd6d      	ble.n	80030b0 <__kernel_rem_pio2+0x250>
 8002fd4:	1e62      	subs	r2, r4, #1
 8002fd6:	ab0e      	add	r3, sp, #56	; 0x38
 8002fd8:	9d04      	ldr	r5, [sp, #16]
 8002fda:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002fde:	f1ca 0118 	rsb	r1, sl, #24
 8002fe2:	fa40 f301 	asr.w	r3, r0, r1
 8002fe6:	441d      	add	r5, r3
 8002fe8:	408b      	lsls	r3, r1
 8002fea:	1ac0      	subs	r0, r0, r3
 8002fec:	ab0e      	add	r3, sp, #56	; 0x38
 8002fee:	9504      	str	r5, [sp, #16]
 8002ff0:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8002ff4:	f1ca 0317 	rsb	r3, sl, #23
 8002ff8:	fa40 fb03 	asr.w	fp, r0, r3
 8002ffc:	f1bb 0f00 	cmp.w	fp, #0
 8003000:	dd65      	ble.n	80030ce <__kernel_rem_pio2+0x26e>
 8003002:	9b04      	ldr	r3, [sp, #16]
 8003004:	2200      	movs	r2, #0
 8003006:	3301      	adds	r3, #1
 8003008:	9304      	str	r3, [sp, #16]
 800300a:	4615      	mov	r5, r2
 800300c:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8003010:	4294      	cmp	r4, r2
 8003012:	f300 809c 	bgt.w	800314e <__kernel_rem_pio2+0x2ee>
 8003016:	f1ba 0f00 	cmp.w	sl, #0
 800301a:	dd07      	ble.n	800302c <__kernel_rem_pio2+0x1cc>
 800301c:	f1ba 0f01 	cmp.w	sl, #1
 8003020:	f000 80c0 	beq.w	80031a4 <__kernel_rem_pio2+0x344>
 8003024:	f1ba 0f02 	cmp.w	sl, #2
 8003028:	f000 80c6 	beq.w	80031b8 <__kernel_rem_pio2+0x358>
 800302c:	f1bb 0f02 	cmp.w	fp, #2
 8003030:	d14d      	bne.n	80030ce <__kernel_rem_pio2+0x26e>
 8003032:	4632      	mov	r2, r6
 8003034:	463b      	mov	r3, r7
 8003036:	4956      	ldr	r1, [pc, #344]	; (8003190 <__kernel_rem_pio2+0x330>)
 8003038:	2000      	movs	r0, #0
 800303a:	f7fd f8d1 	bl	80001e0 <__aeabi_dsub>
 800303e:	4606      	mov	r6, r0
 8003040:	460f      	mov	r7, r1
 8003042:	2d00      	cmp	r5, #0
 8003044:	d043      	beq.n	80030ce <__kernel_rem_pio2+0x26e>
 8003046:	4650      	mov	r0, sl
 8003048:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 8003180 <__kernel_rem_pio2+0x320>
 800304c:	f000 fdb4 	bl	8003bb8 <scalbn>
 8003050:	4630      	mov	r0, r6
 8003052:	4639      	mov	r1, r7
 8003054:	ec53 2b10 	vmov	r2, r3, d0
 8003058:	f7fd f8c2 	bl	80001e0 <__aeabi_dsub>
 800305c:	4606      	mov	r6, r0
 800305e:	460f      	mov	r7, r1
 8003060:	e035      	b.n	80030ce <__kernel_rem_pio2+0x26e>
 8003062:	4b4c      	ldr	r3, [pc, #304]	; (8003194 <__kernel_rem_pio2+0x334>)
 8003064:	2200      	movs	r2, #0
 8003066:	4630      	mov	r0, r6
 8003068:	4639      	mov	r1, r7
 800306a:	f7fd fa71 	bl	8000550 <__aeabi_dmul>
 800306e:	f7fd fd1f 	bl	8000ab0 <__aeabi_d2iz>
 8003072:	f7fd fa03 	bl	800047c <__aeabi_i2d>
 8003076:	4602      	mov	r2, r0
 8003078:	460b      	mov	r3, r1
 800307a:	ec43 2b18 	vmov	d8, r2, r3
 800307e:	4b46      	ldr	r3, [pc, #280]	; (8003198 <__kernel_rem_pio2+0x338>)
 8003080:	2200      	movs	r2, #0
 8003082:	f7fd fa65 	bl	8000550 <__aeabi_dmul>
 8003086:	4602      	mov	r2, r0
 8003088:	460b      	mov	r3, r1
 800308a:	4630      	mov	r0, r6
 800308c:	4639      	mov	r1, r7
 800308e:	f7fd f8a7 	bl	80001e0 <__aeabi_dsub>
 8003092:	f7fd fd0d 	bl	8000ab0 <__aeabi_d2iz>
 8003096:	e9d5 2300 	ldrd	r2, r3, [r5]
 800309a:	f84b 0b04 	str.w	r0, [fp], #4
 800309e:	ec51 0b18 	vmov	r0, r1, d8
 80030a2:	f7fd f89f 	bl	80001e4 <__adddf3>
 80030a6:	f109 39ff 	add.w	r9, r9, #4294967295
 80030aa:	4606      	mov	r6, r0
 80030ac:	460f      	mov	r7, r1
 80030ae:	e75b      	b.n	8002f68 <__kernel_rem_pio2+0x108>
 80030b0:	d106      	bne.n	80030c0 <__kernel_rem_pio2+0x260>
 80030b2:	1e63      	subs	r3, r4, #1
 80030b4:	aa0e      	add	r2, sp, #56	; 0x38
 80030b6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80030ba:	ea4f 5be0 	mov.w	fp, r0, asr #23
 80030be:	e79d      	b.n	8002ffc <__kernel_rem_pio2+0x19c>
 80030c0:	4b36      	ldr	r3, [pc, #216]	; (800319c <__kernel_rem_pio2+0x33c>)
 80030c2:	2200      	movs	r2, #0
 80030c4:	f7fd fcca 	bl	8000a5c <__aeabi_dcmpge>
 80030c8:	2800      	cmp	r0, #0
 80030ca:	d13d      	bne.n	8003148 <__kernel_rem_pio2+0x2e8>
 80030cc:	4683      	mov	fp, r0
 80030ce:	2200      	movs	r2, #0
 80030d0:	2300      	movs	r3, #0
 80030d2:	4630      	mov	r0, r6
 80030d4:	4639      	mov	r1, r7
 80030d6:	f7fd fca3 	bl	8000a20 <__aeabi_dcmpeq>
 80030da:	2800      	cmp	r0, #0
 80030dc:	f000 80c0 	beq.w	8003260 <__kernel_rem_pio2+0x400>
 80030e0:	1e65      	subs	r5, r4, #1
 80030e2:	462b      	mov	r3, r5
 80030e4:	2200      	movs	r2, #0
 80030e6:	9902      	ldr	r1, [sp, #8]
 80030e8:	428b      	cmp	r3, r1
 80030ea:	da6c      	bge.n	80031c6 <__kernel_rem_pio2+0x366>
 80030ec:	2a00      	cmp	r2, #0
 80030ee:	f000 8089 	beq.w	8003204 <__kernel_rem_pio2+0x3a4>
 80030f2:	ab0e      	add	r3, sp, #56	; 0x38
 80030f4:	f1aa 0a18 	sub.w	sl, sl, #24
 80030f8:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80030fc:	2b00      	cmp	r3, #0
 80030fe:	f000 80ad 	beq.w	800325c <__kernel_rem_pio2+0x3fc>
 8003102:	4650      	mov	r0, sl
 8003104:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 8003180 <__kernel_rem_pio2+0x320>
 8003108:	f000 fd56 	bl	8003bb8 <scalbn>
 800310c:	ab9a      	add	r3, sp, #616	; 0x268
 800310e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8003112:	ec57 6b10 	vmov	r6, r7, d0
 8003116:	00ec      	lsls	r4, r5, #3
 8003118:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 800311c:	46aa      	mov	sl, r5
 800311e:	f1ba 0f00 	cmp.w	sl, #0
 8003122:	f280 80d6 	bge.w	80032d2 <__kernel_rem_pio2+0x472>
 8003126:	ed9f 8b14 	vldr	d8, [pc, #80]	; 8003178 <__kernel_rem_pio2+0x318>
 800312a:	462e      	mov	r6, r5
 800312c:	2e00      	cmp	r6, #0
 800312e:	f2c0 8104 	blt.w	800333a <__kernel_rem_pio2+0x4da>
 8003132:	ab72      	add	r3, sp, #456	; 0x1c8
 8003134:	ed8d 8b06 	vstr	d8, [sp, #24]
 8003138:	f8df a064 	ldr.w	sl, [pc, #100]	; 80031a0 <__kernel_rem_pio2+0x340>
 800313c:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 8003140:	f04f 0800 	mov.w	r8, #0
 8003144:	1baf      	subs	r7, r5, r6
 8003146:	e0ea      	b.n	800331e <__kernel_rem_pio2+0x4be>
 8003148:	f04f 0b02 	mov.w	fp, #2
 800314c:	e759      	b.n	8003002 <__kernel_rem_pio2+0x1a2>
 800314e:	f8d8 3000 	ldr.w	r3, [r8]
 8003152:	b955      	cbnz	r5, 800316a <__kernel_rem_pio2+0x30a>
 8003154:	b123      	cbz	r3, 8003160 <__kernel_rem_pio2+0x300>
 8003156:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 800315a:	f8c8 3000 	str.w	r3, [r8]
 800315e:	2301      	movs	r3, #1
 8003160:	3201      	adds	r2, #1
 8003162:	f108 0804 	add.w	r8, r8, #4
 8003166:	461d      	mov	r5, r3
 8003168:	e752      	b.n	8003010 <__kernel_rem_pio2+0x1b0>
 800316a:	1acb      	subs	r3, r1, r3
 800316c:	f8c8 3000 	str.w	r3, [r8]
 8003170:	462b      	mov	r3, r5
 8003172:	e7f5      	b.n	8003160 <__kernel_rem_pio2+0x300>
 8003174:	f3af 8000 	nop.w
	...
 8003184:	3ff00000 	.word	0x3ff00000
 8003188:	08003eb0 	.word	0x08003eb0
 800318c:	40200000 	.word	0x40200000
 8003190:	3ff00000 	.word	0x3ff00000
 8003194:	3e700000 	.word	0x3e700000
 8003198:	41700000 	.word	0x41700000
 800319c:	3fe00000 	.word	0x3fe00000
 80031a0:	08003e70 	.word	0x08003e70
 80031a4:	1e62      	subs	r2, r4, #1
 80031a6:	ab0e      	add	r3, sp, #56	; 0x38
 80031a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80031ac:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80031b0:	a90e      	add	r1, sp, #56	; 0x38
 80031b2:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80031b6:	e739      	b.n	800302c <__kernel_rem_pio2+0x1cc>
 80031b8:	1e62      	subs	r2, r4, #1
 80031ba:	ab0e      	add	r3, sp, #56	; 0x38
 80031bc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80031c0:	f3c3 0315 	ubfx	r3, r3, #0, #22
 80031c4:	e7f4      	b.n	80031b0 <__kernel_rem_pio2+0x350>
 80031c6:	a90e      	add	r1, sp, #56	; 0x38
 80031c8:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80031cc:	3b01      	subs	r3, #1
 80031ce:	430a      	orrs	r2, r1
 80031d0:	e789      	b.n	80030e6 <__kernel_rem_pio2+0x286>
 80031d2:	3301      	adds	r3, #1
 80031d4:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 80031d8:	2900      	cmp	r1, #0
 80031da:	d0fa      	beq.n	80031d2 <__kernel_rem_pio2+0x372>
 80031dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80031de:	f502 721a 	add.w	r2, r2, #616	; 0x268
 80031e2:	446a      	add	r2, sp
 80031e4:	3a98      	subs	r2, #152	; 0x98
 80031e6:	920a      	str	r2, [sp, #40]	; 0x28
 80031e8:	9a08      	ldr	r2, [sp, #32]
 80031ea:	18e3      	adds	r3, r4, r3
 80031ec:	18a5      	adds	r5, r4, r2
 80031ee:	aa22      	add	r2, sp, #136	; 0x88
 80031f0:	f104 0801 	add.w	r8, r4, #1
 80031f4:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 80031f8:	9304      	str	r3, [sp, #16]
 80031fa:	9b04      	ldr	r3, [sp, #16]
 80031fc:	4543      	cmp	r3, r8
 80031fe:	da04      	bge.n	800320a <__kernel_rem_pio2+0x3aa>
 8003200:	461c      	mov	r4, r3
 8003202:	e6a3      	b.n	8002f4c <__kernel_rem_pio2+0xec>
 8003204:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003206:	2301      	movs	r3, #1
 8003208:	e7e4      	b.n	80031d4 <__kernel_rem_pio2+0x374>
 800320a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800320c:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8003210:	f7fd f934 	bl	800047c <__aeabi_i2d>
 8003214:	e8e5 0102 	strd	r0, r1, [r5], #8
 8003218:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800321a:	46ab      	mov	fp, r5
 800321c:	461c      	mov	r4, r3
 800321e:	f04f 0900 	mov.w	r9, #0
 8003222:	2600      	movs	r6, #0
 8003224:	2700      	movs	r7, #0
 8003226:	9b06      	ldr	r3, [sp, #24]
 8003228:	4599      	cmp	r9, r3
 800322a:	dd06      	ble.n	800323a <__kernel_rem_pio2+0x3da>
 800322c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800322e:	e8e3 6702 	strd	r6, r7, [r3], #8
 8003232:	f108 0801 	add.w	r8, r8, #1
 8003236:	930a      	str	r3, [sp, #40]	; 0x28
 8003238:	e7df      	b.n	80031fa <__kernel_rem_pio2+0x39a>
 800323a:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 800323e:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8003242:	f7fd f985 	bl	8000550 <__aeabi_dmul>
 8003246:	4602      	mov	r2, r0
 8003248:	460b      	mov	r3, r1
 800324a:	4630      	mov	r0, r6
 800324c:	4639      	mov	r1, r7
 800324e:	f7fc ffc9 	bl	80001e4 <__adddf3>
 8003252:	f109 0901 	add.w	r9, r9, #1
 8003256:	4606      	mov	r6, r0
 8003258:	460f      	mov	r7, r1
 800325a:	e7e4      	b.n	8003226 <__kernel_rem_pio2+0x3c6>
 800325c:	3d01      	subs	r5, #1
 800325e:	e748      	b.n	80030f2 <__kernel_rem_pio2+0x292>
 8003260:	ec47 6b10 	vmov	d0, r6, r7
 8003264:	f1ca 0000 	rsb	r0, sl, #0
 8003268:	f000 fca6 	bl	8003bb8 <scalbn>
 800326c:	ec57 6b10 	vmov	r6, r7, d0
 8003270:	4ba0      	ldr	r3, [pc, #640]	; (80034f4 <__kernel_rem_pio2+0x694>)
 8003272:	ee10 0a10 	vmov	r0, s0
 8003276:	2200      	movs	r2, #0
 8003278:	4639      	mov	r1, r7
 800327a:	f7fd fbef 	bl	8000a5c <__aeabi_dcmpge>
 800327e:	b1f8      	cbz	r0, 80032c0 <__kernel_rem_pio2+0x460>
 8003280:	4b9d      	ldr	r3, [pc, #628]	; (80034f8 <__kernel_rem_pio2+0x698>)
 8003282:	2200      	movs	r2, #0
 8003284:	4630      	mov	r0, r6
 8003286:	4639      	mov	r1, r7
 8003288:	f7fd f962 	bl	8000550 <__aeabi_dmul>
 800328c:	f7fd fc10 	bl	8000ab0 <__aeabi_d2iz>
 8003290:	4680      	mov	r8, r0
 8003292:	f7fd f8f3 	bl	800047c <__aeabi_i2d>
 8003296:	4b97      	ldr	r3, [pc, #604]	; (80034f4 <__kernel_rem_pio2+0x694>)
 8003298:	2200      	movs	r2, #0
 800329a:	f7fd f959 	bl	8000550 <__aeabi_dmul>
 800329e:	460b      	mov	r3, r1
 80032a0:	4602      	mov	r2, r0
 80032a2:	4639      	mov	r1, r7
 80032a4:	4630      	mov	r0, r6
 80032a6:	f7fc ff9b 	bl	80001e0 <__aeabi_dsub>
 80032aa:	f7fd fc01 	bl	8000ab0 <__aeabi_d2iz>
 80032ae:	1c65      	adds	r5, r4, #1
 80032b0:	ab0e      	add	r3, sp, #56	; 0x38
 80032b2:	f10a 0a18 	add.w	sl, sl, #24
 80032b6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80032ba:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 80032be:	e720      	b.n	8003102 <__kernel_rem_pio2+0x2a2>
 80032c0:	4630      	mov	r0, r6
 80032c2:	4639      	mov	r1, r7
 80032c4:	f7fd fbf4 	bl	8000ab0 <__aeabi_d2iz>
 80032c8:	ab0e      	add	r3, sp, #56	; 0x38
 80032ca:	4625      	mov	r5, r4
 80032cc:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80032d0:	e717      	b.n	8003102 <__kernel_rem_pio2+0x2a2>
 80032d2:	ab0e      	add	r3, sp, #56	; 0x38
 80032d4:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 80032d8:	f7fd f8d0 	bl	800047c <__aeabi_i2d>
 80032dc:	4632      	mov	r2, r6
 80032de:	463b      	mov	r3, r7
 80032e0:	f7fd f936 	bl	8000550 <__aeabi_dmul>
 80032e4:	4b84      	ldr	r3, [pc, #528]	; (80034f8 <__kernel_rem_pio2+0x698>)
 80032e6:	e968 0102 	strd	r0, r1, [r8, #-8]!
 80032ea:	2200      	movs	r2, #0
 80032ec:	4630      	mov	r0, r6
 80032ee:	4639      	mov	r1, r7
 80032f0:	f7fd f92e 	bl	8000550 <__aeabi_dmul>
 80032f4:	f10a 3aff 	add.w	sl, sl, #4294967295
 80032f8:	4606      	mov	r6, r0
 80032fa:	460f      	mov	r7, r1
 80032fc:	e70f      	b.n	800311e <__kernel_rem_pio2+0x2be>
 80032fe:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 8003302:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 8003306:	f7fd f923 	bl	8000550 <__aeabi_dmul>
 800330a:	4602      	mov	r2, r0
 800330c:	460b      	mov	r3, r1
 800330e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003312:	f7fc ff67 	bl	80001e4 <__adddf3>
 8003316:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800331a:	f108 0801 	add.w	r8, r8, #1
 800331e:	9b02      	ldr	r3, [sp, #8]
 8003320:	4598      	cmp	r8, r3
 8003322:	dc01      	bgt.n	8003328 <__kernel_rem_pio2+0x4c8>
 8003324:	45b8      	cmp	r8, r7
 8003326:	ddea      	ble.n	80032fe <__kernel_rem_pio2+0x49e>
 8003328:	ed9d 7b06 	vldr	d7, [sp, #24]
 800332c:	ab4a      	add	r3, sp, #296	; 0x128
 800332e:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8003332:	ed87 7b00 	vstr	d7, [r7]
 8003336:	3e01      	subs	r6, #1
 8003338:	e6f8      	b.n	800312c <__kernel_rem_pio2+0x2cc>
 800333a:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800333c:	2b02      	cmp	r3, #2
 800333e:	dc0b      	bgt.n	8003358 <__kernel_rem_pio2+0x4f8>
 8003340:	2b00      	cmp	r3, #0
 8003342:	dc35      	bgt.n	80033b0 <__kernel_rem_pio2+0x550>
 8003344:	d059      	beq.n	80033fa <__kernel_rem_pio2+0x59a>
 8003346:	9b04      	ldr	r3, [sp, #16]
 8003348:	f003 0007 	and.w	r0, r3, #7
 800334c:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 8003350:	ecbd 8b02 	vpop	{d8}
 8003354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003358:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800335a:	2b03      	cmp	r3, #3
 800335c:	d1f3      	bne.n	8003346 <__kernel_rem_pio2+0x4e6>
 800335e:	ab4a      	add	r3, sp, #296	; 0x128
 8003360:	4423      	add	r3, r4
 8003362:	9306      	str	r3, [sp, #24]
 8003364:	461c      	mov	r4, r3
 8003366:	469a      	mov	sl, r3
 8003368:	9502      	str	r5, [sp, #8]
 800336a:	9b02      	ldr	r3, [sp, #8]
 800336c:	2b00      	cmp	r3, #0
 800336e:	f1aa 0a08 	sub.w	sl, sl, #8
 8003372:	dc6b      	bgt.n	800344c <__kernel_rem_pio2+0x5ec>
 8003374:	46aa      	mov	sl, r5
 8003376:	f1ba 0f01 	cmp.w	sl, #1
 800337a:	f1a4 0408 	sub.w	r4, r4, #8
 800337e:	f300 8085 	bgt.w	800348c <__kernel_rem_pio2+0x62c>
 8003382:	9c06      	ldr	r4, [sp, #24]
 8003384:	2000      	movs	r0, #0
 8003386:	3408      	adds	r4, #8
 8003388:	2100      	movs	r1, #0
 800338a:	2d01      	cmp	r5, #1
 800338c:	f300 809d 	bgt.w	80034ca <__kernel_rem_pio2+0x66a>
 8003390:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 8003394:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 8003398:	f1bb 0f00 	cmp.w	fp, #0
 800339c:	f040 809b 	bne.w	80034d6 <__kernel_rem_pio2+0x676>
 80033a0:	9b01      	ldr	r3, [sp, #4]
 80033a2:	e9c3 5600 	strd	r5, r6, [r3]
 80033a6:	e9c3 7802 	strd	r7, r8, [r3, #8]
 80033aa:	e9c3 0104 	strd	r0, r1, [r3, #16]
 80033ae:	e7ca      	b.n	8003346 <__kernel_rem_pio2+0x4e6>
 80033b0:	3408      	adds	r4, #8
 80033b2:	ab4a      	add	r3, sp, #296	; 0x128
 80033b4:	441c      	add	r4, r3
 80033b6:	462e      	mov	r6, r5
 80033b8:	2000      	movs	r0, #0
 80033ba:	2100      	movs	r1, #0
 80033bc:	2e00      	cmp	r6, #0
 80033be:	da36      	bge.n	800342e <__kernel_rem_pio2+0x5ce>
 80033c0:	f1bb 0f00 	cmp.w	fp, #0
 80033c4:	d039      	beq.n	800343a <__kernel_rem_pio2+0x5da>
 80033c6:	4602      	mov	r2, r0
 80033c8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80033cc:	9c01      	ldr	r4, [sp, #4]
 80033ce:	e9c4 2300 	strd	r2, r3, [r4]
 80033d2:	4602      	mov	r2, r0
 80033d4:	460b      	mov	r3, r1
 80033d6:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 80033da:	f7fc ff01 	bl	80001e0 <__aeabi_dsub>
 80033de:	ae4c      	add	r6, sp, #304	; 0x130
 80033e0:	2401      	movs	r4, #1
 80033e2:	42a5      	cmp	r5, r4
 80033e4:	da2c      	bge.n	8003440 <__kernel_rem_pio2+0x5e0>
 80033e6:	f1bb 0f00 	cmp.w	fp, #0
 80033ea:	d002      	beq.n	80033f2 <__kernel_rem_pio2+0x592>
 80033ec:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80033f0:	4619      	mov	r1, r3
 80033f2:	9b01      	ldr	r3, [sp, #4]
 80033f4:	e9c3 0102 	strd	r0, r1, [r3, #8]
 80033f8:	e7a5      	b.n	8003346 <__kernel_rem_pio2+0x4e6>
 80033fa:	f504 731a 	add.w	r3, r4, #616	; 0x268
 80033fe:	eb0d 0403 	add.w	r4, sp, r3
 8003402:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 8003406:	2000      	movs	r0, #0
 8003408:	2100      	movs	r1, #0
 800340a:	2d00      	cmp	r5, #0
 800340c:	da09      	bge.n	8003422 <__kernel_rem_pio2+0x5c2>
 800340e:	f1bb 0f00 	cmp.w	fp, #0
 8003412:	d002      	beq.n	800341a <__kernel_rem_pio2+0x5ba>
 8003414:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003418:	4619      	mov	r1, r3
 800341a:	9b01      	ldr	r3, [sp, #4]
 800341c:	e9c3 0100 	strd	r0, r1, [r3]
 8003420:	e791      	b.n	8003346 <__kernel_rem_pio2+0x4e6>
 8003422:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8003426:	f7fc fedd 	bl	80001e4 <__adddf3>
 800342a:	3d01      	subs	r5, #1
 800342c:	e7ed      	b.n	800340a <__kernel_rem_pio2+0x5aa>
 800342e:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8003432:	f7fc fed7 	bl	80001e4 <__adddf3>
 8003436:	3e01      	subs	r6, #1
 8003438:	e7c0      	b.n	80033bc <__kernel_rem_pio2+0x55c>
 800343a:	4602      	mov	r2, r0
 800343c:	460b      	mov	r3, r1
 800343e:	e7c5      	b.n	80033cc <__kernel_rem_pio2+0x56c>
 8003440:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 8003444:	f7fc fece 	bl	80001e4 <__adddf3>
 8003448:	3401      	adds	r4, #1
 800344a:	e7ca      	b.n	80033e2 <__kernel_rem_pio2+0x582>
 800344c:	e9da 8900 	ldrd	r8, r9, [sl]
 8003450:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 8003454:	9b02      	ldr	r3, [sp, #8]
 8003456:	3b01      	subs	r3, #1
 8003458:	9302      	str	r3, [sp, #8]
 800345a:	4632      	mov	r2, r6
 800345c:	463b      	mov	r3, r7
 800345e:	4640      	mov	r0, r8
 8003460:	4649      	mov	r1, r9
 8003462:	f7fc febf 	bl	80001e4 <__adddf3>
 8003466:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800346a:	4602      	mov	r2, r0
 800346c:	460b      	mov	r3, r1
 800346e:	4640      	mov	r0, r8
 8003470:	4649      	mov	r1, r9
 8003472:	f7fc feb5 	bl	80001e0 <__aeabi_dsub>
 8003476:	4632      	mov	r2, r6
 8003478:	463b      	mov	r3, r7
 800347a:	f7fc feb3 	bl	80001e4 <__adddf3>
 800347e:	ed9d 7b08 	vldr	d7, [sp, #32]
 8003482:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8003486:	ed8a 7b00 	vstr	d7, [sl]
 800348a:	e76e      	b.n	800336a <__kernel_rem_pio2+0x50a>
 800348c:	e9d4 8900 	ldrd	r8, r9, [r4]
 8003490:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 8003494:	4640      	mov	r0, r8
 8003496:	4632      	mov	r2, r6
 8003498:	463b      	mov	r3, r7
 800349a:	4649      	mov	r1, r9
 800349c:	f7fc fea2 	bl	80001e4 <__adddf3>
 80034a0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80034a4:	4602      	mov	r2, r0
 80034a6:	460b      	mov	r3, r1
 80034a8:	4640      	mov	r0, r8
 80034aa:	4649      	mov	r1, r9
 80034ac:	f7fc fe98 	bl	80001e0 <__aeabi_dsub>
 80034b0:	4632      	mov	r2, r6
 80034b2:	463b      	mov	r3, r7
 80034b4:	f7fc fe96 	bl	80001e4 <__adddf3>
 80034b8:	ed9d 7b02 	vldr	d7, [sp, #8]
 80034bc:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80034c0:	ed84 7b00 	vstr	d7, [r4]
 80034c4:	f10a 3aff 	add.w	sl, sl, #4294967295
 80034c8:	e755      	b.n	8003376 <__kernel_rem_pio2+0x516>
 80034ca:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80034ce:	f7fc fe89 	bl	80001e4 <__adddf3>
 80034d2:	3d01      	subs	r5, #1
 80034d4:	e759      	b.n	800338a <__kernel_rem_pio2+0x52a>
 80034d6:	9b01      	ldr	r3, [sp, #4]
 80034d8:	9a01      	ldr	r2, [sp, #4]
 80034da:	601d      	str	r5, [r3, #0]
 80034dc:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 80034e0:	605c      	str	r4, [r3, #4]
 80034e2:	609f      	str	r7, [r3, #8]
 80034e4:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 80034e8:	60d3      	str	r3, [r2, #12]
 80034ea:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80034ee:	6110      	str	r0, [r2, #16]
 80034f0:	6153      	str	r3, [r2, #20]
 80034f2:	e728      	b.n	8003346 <__kernel_rem_pio2+0x4e6>
 80034f4:	41700000 	.word	0x41700000
 80034f8:	3e700000 	.word	0x3e700000
 80034fc:	00000000 	.word	0x00000000

08003500 <__kernel_sin>:
 8003500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003504:	ed2d 8b04 	vpush	{d8-d9}
 8003508:	eeb0 8a41 	vmov.f32	s16, s2
 800350c:	eef0 8a61 	vmov.f32	s17, s3
 8003510:	ec55 4b10 	vmov	r4, r5, d0
 8003514:	b083      	sub	sp, #12
 8003516:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800351a:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 800351e:	9001      	str	r0, [sp, #4]
 8003520:	da06      	bge.n	8003530 <__kernel_sin+0x30>
 8003522:	ee10 0a10 	vmov	r0, s0
 8003526:	4629      	mov	r1, r5
 8003528:	f7fd fac2 	bl	8000ab0 <__aeabi_d2iz>
 800352c:	2800      	cmp	r0, #0
 800352e:	d051      	beq.n	80035d4 <__kernel_sin+0xd4>
 8003530:	4622      	mov	r2, r4
 8003532:	462b      	mov	r3, r5
 8003534:	4620      	mov	r0, r4
 8003536:	4629      	mov	r1, r5
 8003538:	f7fd f80a 	bl	8000550 <__aeabi_dmul>
 800353c:	4682      	mov	sl, r0
 800353e:	468b      	mov	fp, r1
 8003540:	4602      	mov	r2, r0
 8003542:	460b      	mov	r3, r1
 8003544:	4620      	mov	r0, r4
 8003546:	4629      	mov	r1, r5
 8003548:	f7fd f802 	bl	8000550 <__aeabi_dmul>
 800354c:	a341      	add	r3, pc, #260	; (adr r3, 8003654 <__kernel_sin+0x154>)
 800354e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003552:	4680      	mov	r8, r0
 8003554:	4689      	mov	r9, r1
 8003556:	4650      	mov	r0, sl
 8003558:	4659      	mov	r1, fp
 800355a:	f7fc fff9 	bl	8000550 <__aeabi_dmul>
 800355e:	a33f      	add	r3, pc, #252	; (adr r3, 800365c <__kernel_sin+0x15c>)
 8003560:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003564:	f7fc fe3c 	bl	80001e0 <__aeabi_dsub>
 8003568:	4652      	mov	r2, sl
 800356a:	465b      	mov	r3, fp
 800356c:	f7fc fff0 	bl	8000550 <__aeabi_dmul>
 8003570:	a33c      	add	r3, pc, #240	; (adr r3, 8003664 <__kernel_sin+0x164>)
 8003572:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003576:	f7fc fe35 	bl	80001e4 <__adddf3>
 800357a:	4652      	mov	r2, sl
 800357c:	465b      	mov	r3, fp
 800357e:	f7fc ffe7 	bl	8000550 <__aeabi_dmul>
 8003582:	a33a      	add	r3, pc, #232	; (adr r3, 800366c <__kernel_sin+0x16c>)
 8003584:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003588:	f7fc fe2a 	bl	80001e0 <__aeabi_dsub>
 800358c:	4652      	mov	r2, sl
 800358e:	465b      	mov	r3, fp
 8003590:	f7fc ffde 	bl	8000550 <__aeabi_dmul>
 8003594:	a337      	add	r3, pc, #220	; (adr r3, 8003674 <__kernel_sin+0x174>)
 8003596:	e9d3 2300 	ldrd	r2, r3, [r3]
 800359a:	f7fc fe23 	bl	80001e4 <__adddf3>
 800359e:	9b01      	ldr	r3, [sp, #4]
 80035a0:	4606      	mov	r6, r0
 80035a2:	460f      	mov	r7, r1
 80035a4:	b9eb      	cbnz	r3, 80035e2 <__kernel_sin+0xe2>
 80035a6:	4602      	mov	r2, r0
 80035a8:	460b      	mov	r3, r1
 80035aa:	4650      	mov	r0, sl
 80035ac:	4659      	mov	r1, fp
 80035ae:	f7fc ffcf 	bl	8000550 <__aeabi_dmul>
 80035b2:	a325      	add	r3, pc, #148	; (adr r3, 8003648 <__kernel_sin+0x148>)
 80035b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80035b8:	f7fc fe12 	bl	80001e0 <__aeabi_dsub>
 80035bc:	4642      	mov	r2, r8
 80035be:	464b      	mov	r3, r9
 80035c0:	f7fc ffc6 	bl	8000550 <__aeabi_dmul>
 80035c4:	4602      	mov	r2, r0
 80035c6:	460b      	mov	r3, r1
 80035c8:	4620      	mov	r0, r4
 80035ca:	4629      	mov	r1, r5
 80035cc:	f7fc fe0a 	bl	80001e4 <__adddf3>
 80035d0:	4604      	mov	r4, r0
 80035d2:	460d      	mov	r5, r1
 80035d4:	ec45 4b10 	vmov	d0, r4, r5
 80035d8:	b003      	add	sp, #12
 80035da:	ecbd 8b04 	vpop	{d8-d9}
 80035de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035e2:	4b1b      	ldr	r3, [pc, #108]	; (8003650 <__kernel_sin+0x150>)
 80035e4:	ec51 0b18 	vmov	r0, r1, d8
 80035e8:	2200      	movs	r2, #0
 80035ea:	f7fc ffb1 	bl	8000550 <__aeabi_dmul>
 80035ee:	4632      	mov	r2, r6
 80035f0:	ec41 0b19 	vmov	d9, r0, r1
 80035f4:	463b      	mov	r3, r7
 80035f6:	4640      	mov	r0, r8
 80035f8:	4649      	mov	r1, r9
 80035fa:	f7fc ffa9 	bl	8000550 <__aeabi_dmul>
 80035fe:	4602      	mov	r2, r0
 8003600:	460b      	mov	r3, r1
 8003602:	ec51 0b19 	vmov	r0, r1, d9
 8003606:	f7fc fdeb 	bl	80001e0 <__aeabi_dsub>
 800360a:	4652      	mov	r2, sl
 800360c:	465b      	mov	r3, fp
 800360e:	f7fc ff9f 	bl	8000550 <__aeabi_dmul>
 8003612:	ec53 2b18 	vmov	r2, r3, d8
 8003616:	f7fc fde3 	bl	80001e0 <__aeabi_dsub>
 800361a:	a30b      	add	r3, pc, #44	; (adr r3, 8003648 <__kernel_sin+0x148>)
 800361c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003620:	4606      	mov	r6, r0
 8003622:	460f      	mov	r7, r1
 8003624:	4640      	mov	r0, r8
 8003626:	4649      	mov	r1, r9
 8003628:	f7fc ff92 	bl	8000550 <__aeabi_dmul>
 800362c:	4602      	mov	r2, r0
 800362e:	460b      	mov	r3, r1
 8003630:	4630      	mov	r0, r6
 8003632:	4639      	mov	r1, r7
 8003634:	f7fc fdd6 	bl	80001e4 <__adddf3>
 8003638:	4602      	mov	r2, r0
 800363a:	460b      	mov	r3, r1
 800363c:	4620      	mov	r0, r4
 800363e:	4629      	mov	r1, r5
 8003640:	f7fc fdce 	bl	80001e0 <__aeabi_dsub>
 8003644:	e7c4      	b.n	80035d0 <__kernel_sin+0xd0>
 8003646:	bf00      	nop
 8003648:	55555549 	.word	0x55555549
 800364c:	3fc55555 	.word	0x3fc55555
 8003650:	3fe00000 	.word	0x3fe00000
 8003654:	5acfd57c 	.word	0x5acfd57c
 8003658:	3de5d93a 	.word	0x3de5d93a
 800365c:	8a2b9ceb 	.word	0x8a2b9ceb
 8003660:	3e5ae5e6 	.word	0x3e5ae5e6
 8003664:	57b1fe7d 	.word	0x57b1fe7d
 8003668:	3ec71de3 	.word	0x3ec71de3
 800366c:	19c161d5 	.word	0x19c161d5
 8003670:	3f2a01a0 	.word	0x3f2a01a0
 8003674:	1110f8a6 	.word	0x1110f8a6
 8003678:	3f811111 	.word	0x3f811111
 800367c:	00000000 	.word	0x00000000

08003680 <__kernel_tan>:
 8003680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003684:	ed2d 8b06 	vpush	{d8-d10}
 8003688:	ec5b ab10 	vmov	sl, fp, d0
 800368c:	4be0      	ldr	r3, [pc, #896]	; (8003a10 <__kernel_tan+0x390>)
 800368e:	b083      	sub	sp, #12
 8003690:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 8003694:	429f      	cmp	r7, r3
 8003696:	ec59 8b11 	vmov	r8, r9, d1
 800369a:	4606      	mov	r6, r0
 800369c:	f8cd b000 	str.w	fp, [sp]
 80036a0:	dc61      	bgt.n	8003766 <__kernel_tan+0xe6>
 80036a2:	ee10 0a10 	vmov	r0, s0
 80036a6:	4659      	mov	r1, fp
 80036a8:	f7fd fa02 	bl	8000ab0 <__aeabi_d2iz>
 80036ac:	4605      	mov	r5, r0
 80036ae:	2800      	cmp	r0, #0
 80036b0:	f040 8083 	bne.w	80037ba <__kernel_tan+0x13a>
 80036b4:	1c73      	adds	r3, r6, #1
 80036b6:	4652      	mov	r2, sl
 80036b8:	4313      	orrs	r3, r2
 80036ba:	433b      	orrs	r3, r7
 80036bc:	d112      	bne.n	80036e4 <__kernel_tan+0x64>
 80036be:	ec4b ab10 	vmov	d0, sl, fp
 80036c2:	f000 f9e7 	bl	8003a94 <fabs>
 80036c6:	49d3      	ldr	r1, [pc, #844]	; (8003a14 <__kernel_tan+0x394>)
 80036c8:	ec53 2b10 	vmov	r2, r3, d0
 80036cc:	2000      	movs	r0, #0
 80036ce:	f7fd f869 	bl	80007a4 <__aeabi_ddiv>
 80036d2:	4682      	mov	sl, r0
 80036d4:	468b      	mov	fp, r1
 80036d6:	ec4b ab10 	vmov	d0, sl, fp
 80036da:	b003      	add	sp, #12
 80036dc:	ecbd 8b06 	vpop	{d8-d10}
 80036e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80036e4:	2e01      	cmp	r6, #1
 80036e6:	d0f6      	beq.n	80036d6 <__kernel_tan+0x56>
 80036e8:	4642      	mov	r2, r8
 80036ea:	464b      	mov	r3, r9
 80036ec:	4650      	mov	r0, sl
 80036ee:	4659      	mov	r1, fp
 80036f0:	f7fc fd78 	bl	80001e4 <__adddf3>
 80036f4:	4602      	mov	r2, r0
 80036f6:	460b      	mov	r3, r1
 80036f8:	460f      	mov	r7, r1
 80036fa:	2000      	movs	r0, #0
 80036fc:	49c6      	ldr	r1, [pc, #792]	; (8003a18 <__kernel_tan+0x398>)
 80036fe:	f7fd f851 	bl	80007a4 <__aeabi_ddiv>
 8003702:	e9cd 0100 	strd	r0, r1, [sp]
 8003706:	e9dd 2300 	ldrd	r2, r3, [sp]
 800370a:	462e      	mov	r6, r5
 800370c:	4652      	mov	r2, sl
 800370e:	462c      	mov	r4, r5
 8003710:	4630      	mov	r0, r6
 8003712:	461d      	mov	r5, r3
 8003714:	4639      	mov	r1, r7
 8003716:	465b      	mov	r3, fp
 8003718:	f7fc fd62 	bl	80001e0 <__aeabi_dsub>
 800371c:	4602      	mov	r2, r0
 800371e:	460b      	mov	r3, r1
 8003720:	4640      	mov	r0, r8
 8003722:	4649      	mov	r1, r9
 8003724:	f7fc fd5c 	bl	80001e0 <__aeabi_dsub>
 8003728:	4632      	mov	r2, r6
 800372a:	462b      	mov	r3, r5
 800372c:	f7fc ff10 	bl	8000550 <__aeabi_dmul>
 8003730:	4632      	mov	r2, r6
 8003732:	4680      	mov	r8, r0
 8003734:	4689      	mov	r9, r1
 8003736:	462b      	mov	r3, r5
 8003738:	4630      	mov	r0, r6
 800373a:	4639      	mov	r1, r7
 800373c:	f7fc ff08 	bl	8000550 <__aeabi_dmul>
 8003740:	4bb4      	ldr	r3, [pc, #720]	; (8003a14 <__kernel_tan+0x394>)
 8003742:	2200      	movs	r2, #0
 8003744:	f7fc fd4e 	bl	80001e4 <__adddf3>
 8003748:	4602      	mov	r2, r0
 800374a:	460b      	mov	r3, r1
 800374c:	4640      	mov	r0, r8
 800374e:	4649      	mov	r1, r9
 8003750:	f7fc fd48 	bl	80001e4 <__adddf3>
 8003754:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003758:	f7fc fefa 	bl	8000550 <__aeabi_dmul>
 800375c:	4622      	mov	r2, r4
 800375e:	462b      	mov	r3, r5
 8003760:	f7fc fd40 	bl	80001e4 <__adddf3>
 8003764:	e7b5      	b.n	80036d2 <__kernel_tan+0x52>
 8003766:	4bad      	ldr	r3, [pc, #692]	; (8003a1c <__kernel_tan+0x39c>)
 8003768:	429f      	cmp	r7, r3
 800376a:	dd26      	ble.n	80037ba <__kernel_tan+0x13a>
 800376c:	9b00      	ldr	r3, [sp, #0]
 800376e:	2b00      	cmp	r3, #0
 8003770:	da09      	bge.n	8003786 <__kernel_tan+0x106>
 8003772:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8003776:	469b      	mov	fp, r3
 8003778:	ee10 aa10 	vmov	sl, s0
 800377c:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8003780:	ee11 8a10 	vmov	r8, s2
 8003784:	4699      	mov	r9, r3
 8003786:	4652      	mov	r2, sl
 8003788:	465b      	mov	r3, fp
 800378a:	a183      	add	r1, pc, #524	; (adr r1, 8003998 <__kernel_tan+0x318>)
 800378c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003790:	f7fc fd26 	bl	80001e0 <__aeabi_dsub>
 8003794:	4642      	mov	r2, r8
 8003796:	464b      	mov	r3, r9
 8003798:	4604      	mov	r4, r0
 800379a:	460d      	mov	r5, r1
 800379c:	a180      	add	r1, pc, #512	; (adr r1, 80039a0 <__kernel_tan+0x320>)
 800379e:	e9d1 0100 	ldrd	r0, r1, [r1]
 80037a2:	f7fc fd1d 	bl	80001e0 <__aeabi_dsub>
 80037a6:	4622      	mov	r2, r4
 80037a8:	462b      	mov	r3, r5
 80037aa:	f7fc fd1b 	bl	80001e4 <__adddf3>
 80037ae:	f04f 0800 	mov.w	r8, #0
 80037b2:	4682      	mov	sl, r0
 80037b4:	468b      	mov	fp, r1
 80037b6:	f04f 0900 	mov.w	r9, #0
 80037ba:	4652      	mov	r2, sl
 80037bc:	465b      	mov	r3, fp
 80037be:	4650      	mov	r0, sl
 80037c0:	4659      	mov	r1, fp
 80037c2:	f7fc fec5 	bl	8000550 <__aeabi_dmul>
 80037c6:	4602      	mov	r2, r0
 80037c8:	460b      	mov	r3, r1
 80037ca:	ec43 2b18 	vmov	d8, r2, r3
 80037ce:	f7fc febf 	bl	8000550 <__aeabi_dmul>
 80037d2:	ec53 2b18 	vmov	r2, r3, d8
 80037d6:	4604      	mov	r4, r0
 80037d8:	460d      	mov	r5, r1
 80037da:	4650      	mov	r0, sl
 80037dc:	4659      	mov	r1, fp
 80037de:	f7fc feb7 	bl	8000550 <__aeabi_dmul>
 80037e2:	a371      	add	r3, pc, #452	; (adr r3, 80039a8 <__kernel_tan+0x328>)
 80037e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037e8:	ec41 0b19 	vmov	d9, r0, r1
 80037ec:	4620      	mov	r0, r4
 80037ee:	4629      	mov	r1, r5
 80037f0:	f7fc feae 	bl	8000550 <__aeabi_dmul>
 80037f4:	a36e      	add	r3, pc, #440	; (adr r3, 80039b0 <__kernel_tan+0x330>)
 80037f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037fa:	f7fc fcf3 	bl	80001e4 <__adddf3>
 80037fe:	4622      	mov	r2, r4
 8003800:	462b      	mov	r3, r5
 8003802:	f7fc fea5 	bl	8000550 <__aeabi_dmul>
 8003806:	a36c      	add	r3, pc, #432	; (adr r3, 80039b8 <__kernel_tan+0x338>)
 8003808:	e9d3 2300 	ldrd	r2, r3, [r3]
 800380c:	f7fc fcea 	bl	80001e4 <__adddf3>
 8003810:	4622      	mov	r2, r4
 8003812:	462b      	mov	r3, r5
 8003814:	f7fc fe9c 	bl	8000550 <__aeabi_dmul>
 8003818:	a369      	add	r3, pc, #420	; (adr r3, 80039c0 <__kernel_tan+0x340>)
 800381a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800381e:	f7fc fce1 	bl	80001e4 <__adddf3>
 8003822:	4622      	mov	r2, r4
 8003824:	462b      	mov	r3, r5
 8003826:	f7fc fe93 	bl	8000550 <__aeabi_dmul>
 800382a:	a367      	add	r3, pc, #412	; (adr r3, 80039c8 <__kernel_tan+0x348>)
 800382c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003830:	f7fc fcd8 	bl	80001e4 <__adddf3>
 8003834:	4622      	mov	r2, r4
 8003836:	462b      	mov	r3, r5
 8003838:	f7fc fe8a 	bl	8000550 <__aeabi_dmul>
 800383c:	a364      	add	r3, pc, #400	; (adr r3, 80039d0 <__kernel_tan+0x350>)
 800383e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003842:	f7fc fccf 	bl	80001e4 <__adddf3>
 8003846:	ec53 2b18 	vmov	r2, r3, d8
 800384a:	f7fc fe81 	bl	8000550 <__aeabi_dmul>
 800384e:	a362      	add	r3, pc, #392	; (adr r3, 80039d8 <__kernel_tan+0x358>)
 8003850:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003854:	ec41 0b1a 	vmov	d10, r0, r1
 8003858:	4620      	mov	r0, r4
 800385a:	4629      	mov	r1, r5
 800385c:	f7fc fe78 	bl	8000550 <__aeabi_dmul>
 8003860:	a35f      	add	r3, pc, #380	; (adr r3, 80039e0 <__kernel_tan+0x360>)
 8003862:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003866:	f7fc fcbd 	bl	80001e4 <__adddf3>
 800386a:	4622      	mov	r2, r4
 800386c:	462b      	mov	r3, r5
 800386e:	f7fc fe6f 	bl	8000550 <__aeabi_dmul>
 8003872:	a35d      	add	r3, pc, #372	; (adr r3, 80039e8 <__kernel_tan+0x368>)
 8003874:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003878:	f7fc fcb4 	bl	80001e4 <__adddf3>
 800387c:	4622      	mov	r2, r4
 800387e:	462b      	mov	r3, r5
 8003880:	f7fc fe66 	bl	8000550 <__aeabi_dmul>
 8003884:	a35a      	add	r3, pc, #360	; (adr r3, 80039f0 <__kernel_tan+0x370>)
 8003886:	e9d3 2300 	ldrd	r2, r3, [r3]
 800388a:	f7fc fcab 	bl	80001e4 <__adddf3>
 800388e:	4622      	mov	r2, r4
 8003890:	462b      	mov	r3, r5
 8003892:	f7fc fe5d 	bl	8000550 <__aeabi_dmul>
 8003896:	a358      	add	r3, pc, #352	; (adr r3, 80039f8 <__kernel_tan+0x378>)
 8003898:	e9d3 2300 	ldrd	r2, r3, [r3]
 800389c:	f7fc fca2 	bl	80001e4 <__adddf3>
 80038a0:	4622      	mov	r2, r4
 80038a2:	462b      	mov	r3, r5
 80038a4:	f7fc fe54 	bl	8000550 <__aeabi_dmul>
 80038a8:	a355      	add	r3, pc, #340	; (adr r3, 8003a00 <__kernel_tan+0x380>)
 80038aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038ae:	f7fc fc99 	bl	80001e4 <__adddf3>
 80038b2:	4602      	mov	r2, r0
 80038b4:	460b      	mov	r3, r1
 80038b6:	ec51 0b1a 	vmov	r0, r1, d10
 80038ba:	f7fc fc93 	bl	80001e4 <__adddf3>
 80038be:	ec53 2b19 	vmov	r2, r3, d9
 80038c2:	f7fc fe45 	bl	8000550 <__aeabi_dmul>
 80038c6:	4642      	mov	r2, r8
 80038c8:	464b      	mov	r3, r9
 80038ca:	f7fc fc8b 	bl	80001e4 <__adddf3>
 80038ce:	ec53 2b18 	vmov	r2, r3, d8
 80038d2:	f7fc fe3d 	bl	8000550 <__aeabi_dmul>
 80038d6:	4642      	mov	r2, r8
 80038d8:	464b      	mov	r3, r9
 80038da:	f7fc fc83 	bl	80001e4 <__adddf3>
 80038de:	a34a      	add	r3, pc, #296	; (adr r3, 8003a08 <__kernel_tan+0x388>)
 80038e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038e4:	4604      	mov	r4, r0
 80038e6:	460d      	mov	r5, r1
 80038e8:	ec51 0b19 	vmov	r0, r1, d9
 80038ec:	f7fc fe30 	bl	8000550 <__aeabi_dmul>
 80038f0:	4622      	mov	r2, r4
 80038f2:	462b      	mov	r3, r5
 80038f4:	f7fc fc76 	bl	80001e4 <__adddf3>
 80038f8:	460b      	mov	r3, r1
 80038fa:	ec41 0b18 	vmov	d8, r0, r1
 80038fe:	4602      	mov	r2, r0
 8003900:	4659      	mov	r1, fp
 8003902:	4650      	mov	r0, sl
 8003904:	f7fc fc6e 	bl	80001e4 <__adddf3>
 8003908:	4b44      	ldr	r3, [pc, #272]	; (8003a1c <__kernel_tan+0x39c>)
 800390a:	429f      	cmp	r7, r3
 800390c:	4604      	mov	r4, r0
 800390e:	460d      	mov	r5, r1
 8003910:	f340 8086 	ble.w	8003a20 <__kernel_tan+0x3a0>
 8003914:	4630      	mov	r0, r6
 8003916:	f7fc fdb1 	bl	800047c <__aeabi_i2d>
 800391a:	4622      	mov	r2, r4
 800391c:	4680      	mov	r8, r0
 800391e:	4689      	mov	r9, r1
 8003920:	462b      	mov	r3, r5
 8003922:	4620      	mov	r0, r4
 8003924:	4629      	mov	r1, r5
 8003926:	f7fc fe13 	bl	8000550 <__aeabi_dmul>
 800392a:	4642      	mov	r2, r8
 800392c:	4606      	mov	r6, r0
 800392e:	460f      	mov	r7, r1
 8003930:	464b      	mov	r3, r9
 8003932:	4620      	mov	r0, r4
 8003934:	4629      	mov	r1, r5
 8003936:	f7fc fc55 	bl	80001e4 <__adddf3>
 800393a:	4602      	mov	r2, r0
 800393c:	460b      	mov	r3, r1
 800393e:	4630      	mov	r0, r6
 8003940:	4639      	mov	r1, r7
 8003942:	f7fc ff2f 	bl	80007a4 <__aeabi_ddiv>
 8003946:	ec53 2b18 	vmov	r2, r3, d8
 800394a:	f7fc fc49 	bl	80001e0 <__aeabi_dsub>
 800394e:	4602      	mov	r2, r0
 8003950:	460b      	mov	r3, r1
 8003952:	4650      	mov	r0, sl
 8003954:	4659      	mov	r1, fp
 8003956:	f7fc fc43 	bl	80001e0 <__aeabi_dsub>
 800395a:	4602      	mov	r2, r0
 800395c:	460b      	mov	r3, r1
 800395e:	f7fc fc41 	bl	80001e4 <__adddf3>
 8003962:	4602      	mov	r2, r0
 8003964:	460b      	mov	r3, r1
 8003966:	4640      	mov	r0, r8
 8003968:	4649      	mov	r1, r9
 800396a:	f7fc fc39 	bl	80001e0 <__aeabi_dsub>
 800396e:	9b00      	ldr	r3, [sp, #0]
 8003970:	ea4f 7aa3 	mov.w	sl, r3, asr #30
 8003974:	f00a 0a02 	and.w	sl, sl, #2
 8003978:	4604      	mov	r4, r0
 800397a:	f1ca 0001 	rsb	r0, sl, #1
 800397e:	460d      	mov	r5, r1
 8003980:	f7fc fd7c 	bl	800047c <__aeabi_i2d>
 8003984:	4602      	mov	r2, r0
 8003986:	460b      	mov	r3, r1
 8003988:	4620      	mov	r0, r4
 800398a:	4629      	mov	r1, r5
 800398c:	f7fc fde0 	bl	8000550 <__aeabi_dmul>
 8003990:	e69f      	b.n	80036d2 <__kernel_tan+0x52>
 8003992:	bf00      	nop
 8003994:	f3af 8000 	nop.w
 8003998:	54442d18 	.word	0x54442d18
 800399c:	3fe921fb 	.word	0x3fe921fb
 80039a0:	33145c07 	.word	0x33145c07
 80039a4:	3c81a626 	.word	0x3c81a626
 80039a8:	74bf7ad4 	.word	0x74bf7ad4
 80039ac:	3efb2a70 	.word	0x3efb2a70
 80039b0:	32f0a7e9 	.word	0x32f0a7e9
 80039b4:	3f12b80f 	.word	0x3f12b80f
 80039b8:	1a8d1068 	.word	0x1a8d1068
 80039bc:	3f3026f7 	.word	0x3f3026f7
 80039c0:	fee08315 	.word	0xfee08315
 80039c4:	3f57dbc8 	.word	0x3f57dbc8
 80039c8:	e96e8493 	.word	0xe96e8493
 80039cc:	3f8226e3 	.word	0x3f8226e3
 80039d0:	1bb341fe 	.word	0x1bb341fe
 80039d4:	3faba1ba 	.word	0x3faba1ba
 80039d8:	db605373 	.word	0xdb605373
 80039dc:	bef375cb 	.word	0xbef375cb
 80039e0:	a03792a6 	.word	0xa03792a6
 80039e4:	3f147e88 	.word	0x3f147e88
 80039e8:	f2f26501 	.word	0xf2f26501
 80039ec:	3f4344d8 	.word	0x3f4344d8
 80039f0:	c9560328 	.word	0xc9560328
 80039f4:	3f6d6d22 	.word	0x3f6d6d22
 80039f8:	8406d637 	.word	0x8406d637
 80039fc:	3f9664f4 	.word	0x3f9664f4
 8003a00:	1110fe7a 	.word	0x1110fe7a
 8003a04:	3fc11111 	.word	0x3fc11111
 8003a08:	55555563 	.word	0x55555563
 8003a0c:	3fd55555 	.word	0x3fd55555
 8003a10:	3e2fffff 	.word	0x3e2fffff
 8003a14:	3ff00000 	.word	0x3ff00000
 8003a18:	bff00000 	.word	0xbff00000
 8003a1c:	3fe59427 	.word	0x3fe59427
 8003a20:	2e01      	cmp	r6, #1
 8003a22:	d02f      	beq.n	8003a84 <__kernel_tan+0x404>
 8003a24:	460f      	mov	r7, r1
 8003a26:	4602      	mov	r2, r0
 8003a28:	460b      	mov	r3, r1
 8003a2a:	4689      	mov	r9, r1
 8003a2c:	2000      	movs	r0, #0
 8003a2e:	4917      	ldr	r1, [pc, #92]	; (8003a8c <__kernel_tan+0x40c>)
 8003a30:	f7fc feb8 	bl	80007a4 <__aeabi_ddiv>
 8003a34:	2600      	movs	r6, #0
 8003a36:	e9cd 0100 	strd	r0, r1, [sp]
 8003a3a:	4652      	mov	r2, sl
 8003a3c:	465b      	mov	r3, fp
 8003a3e:	4630      	mov	r0, r6
 8003a40:	4639      	mov	r1, r7
 8003a42:	f7fc fbcd 	bl	80001e0 <__aeabi_dsub>
 8003a46:	e9dd 4500 	ldrd	r4, r5, [sp]
 8003a4a:	4602      	mov	r2, r0
 8003a4c:	460b      	mov	r3, r1
 8003a4e:	ec51 0b18 	vmov	r0, r1, d8
 8003a52:	f7fc fbc5 	bl	80001e0 <__aeabi_dsub>
 8003a56:	4632      	mov	r2, r6
 8003a58:	462b      	mov	r3, r5
 8003a5a:	f7fc fd79 	bl	8000550 <__aeabi_dmul>
 8003a5e:	46b0      	mov	r8, r6
 8003a60:	460f      	mov	r7, r1
 8003a62:	4642      	mov	r2, r8
 8003a64:	462b      	mov	r3, r5
 8003a66:	4634      	mov	r4, r6
 8003a68:	4649      	mov	r1, r9
 8003a6a:	4606      	mov	r6, r0
 8003a6c:	4640      	mov	r0, r8
 8003a6e:	f7fc fd6f 	bl	8000550 <__aeabi_dmul>
 8003a72:	4b07      	ldr	r3, [pc, #28]	; (8003a90 <__kernel_tan+0x410>)
 8003a74:	2200      	movs	r2, #0
 8003a76:	f7fc fbb5 	bl	80001e4 <__adddf3>
 8003a7a:	4602      	mov	r2, r0
 8003a7c:	460b      	mov	r3, r1
 8003a7e:	4630      	mov	r0, r6
 8003a80:	4639      	mov	r1, r7
 8003a82:	e665      	b.n	8003750 <__kernel_tan+0xd0>
 8003a84:	4682      	mov	sl, r0
 8003a86:	468b      	mov	fp, r1
 8003a88:	e625      	b.n	80036d6 <__kernel_tan+0x56>
 8003a8a:	bf00      	nop
 8003a8c:	bff00000 	.word	0xbff00000
 8003a90:	3ff00000 	.word	0x3ff00000

08003a94 <fabs>:
 8003a94:	ec51 0b10 	vmov	r0, r1, d0
 8003a98:	ee10 2a10 	vmov	r2, s0
 8003a9c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8003aa0:	ec43 2b10 	vmov	d0, r2, r3
 8003aa4:	4770      	bx	lr
	...

08003aa8 <floor>:
 8003aa8:	ec51 0b10 	vmov	r0, r1, d0
 8003aac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ab0:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8003ab4:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8003ab8:	2e13      	cmp	r6, #19
 8003aba:	ee10 5a10 	vmov	r5, s0
 8003abe:	ee10 8a10 	vmov	r8, s0
 8003ac2:	460c      	mov	r4, r1
 8003ac4:	dc32      	bgt.n	8003b2c <floor+0x84>
 8003ac6:	2e00      	cmp	r6, #0
 8003ac8:	da14      	bge.n	8003af4 <floor+0x4c>
 8003aca:	a333      	add	r3, pc, #204	; (adr r3, 8003b98 <floor+0xf0>)
 8003acc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ad0:	f7fc fb88 	bl	80001e4 <__adddf3>
 8003ad4:	2200      	movs	r2, #0
 8003ad6:	2300      	movs	r3, #0
 8003ad8:	f7fc ffca 	bl	8000a70 <__aeabi_dcmpgt>
 8003adc:	b138      	cbz	r0, 8003aee <floor+0x46>
 8003ade:	2c00      	cmp	r4, #0
 8003ae0:	da57      	bge.n	8003b92 <floor+0xea>
 8003ae2:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8003ae6:	431d      	orrs	r5, r3
 8003ae8:	d001      	beq.n	8003aee <floor+0x46>
 8003aea:	4c2d      	ldr	r4, [pc, #180]	; (8003ba0 <floor+0xf8>)
 8003aec:	2500      	movs	r5, #0
 8003aee:	4621      	mov	r1, r4
 8003af0:	4628      	mov	r0, r5
 8003af2:	e025      	b.n	8003b40 <floor+0x98>
 8003af4:	4f2b      	ldr	r7, [pc, #172]	; (8003ba4 <floor+0xfc>)
 8003af6:	4137      	asrs	r7, r6
 8003af8:	ea01 0307 	and.w	r3, r1, r7
 8003afc:	4303      	orrs	r3, r0
 8003afe:	d01f      	beq.n	8003b40 <floor+0x98>
 8003b00:	a325      	add	r3, pc, #148	; (adr r3, 8003b98 <floor+0xf0>)
 8003b02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b06:	f7fc fb6d 	bl	80001e4 <__adddf3>
 8003b0a:	2200      	movs	r2, #0
 8003b0c:	2300      	movs	r3, #0
 8003b0e:	f7fc ffaf 	bl	8000a70 <__aeabi_dcmpgt>
 8003b12:	2800      	cmp	r0, #0
 8003b14:	d0eb      	beq.n	8003aee <floor+0x46>
 8003b16:	2c00      	cmp	r4, #0
 8003b18:	bfbe      	ittt	lt
 8003b1a:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8003b1e:	fa43 f606 	asrlt.w	r6, r3, r6
 8003b22:	19a4      	addlt	r4, r4, r6
 8003b24:	ea24 0407 	bic.w	r4, r4, r7
 8003b28:	2500      	movs	r5, #0
 8003b2a:	e7e0      	b.n	8003aee <floor+0x46>
 8003b2c:	2e33      	cmp	r6, #51	; 0x33
 8003b2e:	dd0b      	ble.n	8003b48 <floor+0xa0>
 8003b30:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8003b34:	d104      	bne.n	8003b40 <floor+0x98>
 8003b36:	ee10 2a10 	vmov	r2, s0
 8003b3a:	460b      	mov	r3, r1
 8003b3c:	f7fc fb52 	bl	80001e4 <__adddf3>
 8003b40:	ec41 0b10 	vmov	d0, r0, r1
 8003b44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003b48:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8003b4c:	f04f 33ff 	mov.w	r3, #4294967295
 8003b50:	fa23 f707 	lsr.w	r7, r3, r7
 8003b54:	4207      	tst	r7, r0
 8003b56:	d0f3      	beq.n	8003b40 <floor+0x98>
 8003b58:	a30f      	add	r3, pc, #60	; (adr r3, 8003b98 <floor+0xf0>)
 8003b5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b5e:	f7fc fb41 	bl	80001e4 <__adddf3>
 8003b62:	2200      	movs	r2, #0
 8003b64:	2300      	movs	r3, #0
 8003b66:	f7fc ff83 	bl	8000a70 <__aeabi_dcmpgt>
 8003b6a:	2800      	cmp	r0, #0
 8003b6c:	d0bf      	beq.n	8003aee <floor+0x46>
 8003b6e:	2c00      	cmp	r4, #0
 8003b70:	da02      	bge.n	8003b78 <floor+0xd0>
 8003b72:	2e14      	cmp	r6, #20
 8003b74:	d103      	bne.n	8003b7e <floor+0xd6>
 8003b76:	3401      	adds	r4, #1
 8003b78:	ea25 0507 	bic.w	r5, r5, r7
 8003b7c:	e7b7      	b.n	8003aee <floor+0x46>
 8003b7e:	2301      	movs	r3, #1
 8003b80:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8003b84:	fa03 f606 	lsl.w	r6, r3, r6
 8003b88:	4435      	add	r5, r6
 8003b8a:	4545      	cmp	r5, r8
 8003b8c:	bf38      	it	cc
 8003b8e:	18e4      	addcc	r4, r4, r3
 8003b90:	e7f2      	b.n	8003b78 <floor+0xd0>
 8003b92:	2500      	movs	r5, #0
 8003b94:	462c      	mov	r4, r5
 8003b96:	e7aa      	b.n	8003aee <floor+0x46>
 8003b98:	8800759c 	.word	0x8800759c
 8003b9c:	7e37e43c 	.word	0x7e37e43c
 8003ba0:	bff00000 	.word	0xbff00000
 8003ba4:	000fffff 	.word	0x000fffff

08003ba8 <nan>:
 8003ba8:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8003bb0 <nan+0x8>
 8003bac:	4770      	bx	lr
 8003bae:	bf00      	nop
 8003bb0:	00000000 	.word	0x00000000
 8003bb4:	7ff80000 	.word	0x7ff80000

08003bb8 <scalbn>:
 8003bb8:	b570      	push	{r4, r5, r6, lr}
 8003bba:	ec55 4b10 	vmov	r4, r5, d0
 8003bbe:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8003bc2:	4606      	mov	r6, r0
 8003bc4:	462b      	mov	r3, r5
 8003bc6:	b99a      	cbnz	r2, 8003bf0 <scalbn+0x38>
 8003bc8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8003bcc:	4323      	orrs	r3, r4
 8003bce:	d036      	beq.n	8003c3e <scalbn+0x86>
 8003bd0:	4b39      	ldr	r3, [pc, #228]	; (8003cb8 <scalbn+0x100>)
 8003bd2:	4629      	mov	r1, r5
 8003bd4:	ee10 0a10 	vmov	r0, s0
 8003bd8:	2200      	movs	r2, #0
 8003bda:	f7fc fcb9 	bl	8000550 <__aeabi_dmul>
 8003bde:	4b37      	ldr	r3, [pc, #220]	; (8003cbc <scalbn+0x104>)
 8003be0:	429e      	cmp	r6, r3
 8003be2:	4604      	mov	r4, r0
 8003be4:	460d      	mov	r5, r1
 8003be6:	da10      	bge.n	8003c0a <scalbn+0x52>
 8003be8:	a32b      	add	r3, pc, #172	; (adr r3, 8003c98 <scalbn+0xe0>)
 8003bea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003bee:	e03a      	b.n	8003c66 <scalbn+0xae>
 8003bf0:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8003bf4:	428a      	cmp	r2, r1
 8003bf6:	d10c      	bne.n	8003c12 <scalbn+0x5a>
 8003bf8:	ee10 2a10 	vmov	r2, s0
 8003bfc:	4620      	mov	r0, r4
 8003bfe:	4629      	mov	r1, r5
 8003c00:	f7fc faf0 	bl	80001e4 <__adddf3>
 8003c04:	4604      	mov	r4, r0
 8003c06:	460d      	mov	r5, r1
 8003c08:	e019      	b.n	8003c3e <scalbn+0x86>
 8003c0a:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8003c0e:	460b      	mov	r3, r1
 8003c10:	3a36      	subs	r2, #54	; 0x36
 8003c12:	4432      	add	r2, r6
 8003c14:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8003c18:	428a      	cmp	r2, r1
 8003c1a:	dd08      	ble.n	8003c2e <scalbn+0x76>
 8003c1c:	2d00      	cmp	r5, #0
 8003c1e:	a120      	add	r1, pc, #128	; (adr r1, 8003ca0 <scalbn+0xe8>)
 8003c20:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003c24:	da1c      	bge.n	8003c60 <scalbn+0xa8>
 8003c26:	a120      	add	r1, pc, #128	; (adr r1, 8003ca8 <scalbn+0xf0>)
 8003c28:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003c2c:	e018      	b.n	8003c60 <scalbn+0xa8>
 8003c2e:	2a00      	cmp	r2, #0
 8003c30:	dd08      	ble.n	8003c44 <scalbn+0x8c>
 8003c32:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8003c36:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8003c3a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8003c3e:	ec45 4b10 	vmov	d0, r4, r5
 8003c42:	bd70      	pop	{r4, r5, r6, pc}
 8003c44:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8003c48:	da19      	bge.n	8003c7e <scalbn+0xc6>
 8003c4a:	f24c 3350 	movw	r3, #50000	; 0xc350
 8003c4e:	429e      	cmp	r6, r3
 8003c50:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8003c54:	dd0a      	ble.n	8003c6c <scalbn+0xb4>
 8003c56:	a112      	add	r1, pc, #72	; (adr r1, 8003ca0 <scalbn+0xe8>)
 8003c58:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003c5c:	2b00      	cmp	r3, #0
 8003c5e:	d1e2      	bne.n	8003c26 <scalbn+0x6e>
 8003c60:	a30f      	add	r3, pc, #60	; (adr r3, 8003ca0 <scalbn+0xe8>)
 8003c62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c66:	f7fc fc73 	bl	8000550 <__aeabi_dmul>
 8003c6a:	e7cb      	b.n	8003c04 <scalbn+0x4c>
 8003c6c:	a10a      	add	r1, pc, #40	; (adr r1, 8003c98 <scalbn+0xe0>)
 8003c6e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003c72:	2b00      	cmp	r3, #0
 8003c74:	d0b8      	beq.n	8003be8 <scalbn+0x30>
 8003c76:	a10e      	add	r1, pc, #56	; (adr r1, 8003cb0 <scalbn+0xf8>)
 8003c78:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003c7c:	e7b4      	b.n	8003be8 <scalbn+0x30>
 8003c7e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8003c82:	3236      	adds	r2, #54	; 0x36
 8003c84:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8003c88:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8003c8c:	4620      	mov	r0, r4
 8003c8e:	4b0c      	ldr	r3, [pc, #48]	; (8003cc0 <scalbn+0x108>)
 8003c90:	2200      	movs	r2, #0
 8003c92:	e7e8      	b.n	8003c66 <scalbn+0xae>
 8003c94:	f3af 8000 	nop.w
 8003c98:	c2f8f359 	.word	0xc2f8f359
 8003c9c:	01a56e1f 	.word	0x01a56e1f
 8003ca0:	8800759c 	.word	0x8800759c
 8003ca4:	7e37e43c 	.word	0x7e37e43c
 8003ca8:	8800759c 	.word	0x8800759c
 8003cac:	fe37e43c 	.word	0xfe37e43c
 8003cb0:	c2f8f359 	.word	0xc2f8f359
 8003cb4:	81a56e1f 	.word	0x81a56e1f
 8003cb8:	43500000 	.word	0x43500000
 8003cbc:	ffff3cb0 	.word	0xffff3cb0
 8003cc0:	3c900000 	.word	0x3c900000

08003cc4 <_init>:
 8003cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003cc6:	bf00      	nop
 8003cc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003cca:	bc08      	pop	{r3}
 8003ccc:	469e      	mov	lr, r3
 8003cce:	4770      	bx	lr

08003cd0 <_fini>:
 8003cd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003cd2:	bf00      	nop
 8003cd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003cd6:	bc08      	pop	{r3}
 8003cd8:	469e      	mov	lr, r3
 8003cda:	4770      	bx	lr
